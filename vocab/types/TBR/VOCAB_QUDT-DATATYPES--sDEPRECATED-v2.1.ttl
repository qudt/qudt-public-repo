# baseURI: http://qudt.org/2.0/vocab/datatypes-DEPRECATED
# imports: http://qudt.org/2.1/schema/datatype
# imports: http://qudt.org/2.1/schema/facade/qudt
# imports: http://www.linkedmodel.org/schema/dtype
# imports: http://www.linkedmodel.org/schema/vaem

@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix qudt-refdata: <http://qudt.org/vocab/refdata/> .
@prefix qudt.type: <http://qudt.org/vocab/type/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix voag: <http://voag.linkedmodel.org/schema/voag#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

dc:contributor
  rdf:type owl:AnnotationProperty ;
  rdfs:label "contributor" ;
  rdfs:range xsd:string ;
.
dc:creator
  rdf:type owl:AnnotationProperty ;
  rdfs:label "creator" ;
  rdfs:range xsd:string ;
.
dc:description
  rdf:type owl:AnnotationProperty ;
  rdfs:label "description" ;
  rdfs:range xsd:string ;
.
dc:rights
  rdf:type owl:AnnotationProperty ;
  rdfs:label "rights" ;
  rdfs:range xsd:string ;
.
dc:subject
  rdf:type owl:AnnotationProperty ;
  rdfs:label "subject" ;
  rdfs:range xsd:string ;
.
dc:title
  rdf:type owl:AnnotationProperty ;
  rdfs:label "title" ;
  rdfs:range xsd:string ;
.
<http://qudt.org/2.0/vocab/datatypes-DEPRECATED>
  rdf:type owl:Ontology ;
  dc:contributor "Chip Masters" ;
  dc:contributor "Daniel Mekonnen" ;
  dc:creator "Ralph Hodgson" ;
  dc:description "The QUDT 'Type' ontology extends 'DTYPE' with further classes and properties for the specification of data types." ;
  dc:subject "Datatypes" ;
  dc:title "The QUDT Type Vocabulary" ;
  vaem:hasCatalogEntry voag:QUDT-SchemaCatalogEntry ;
  vaem:hasGraphRole vaem:SchemaGraph ;
  vaem:hasLicenseType voag:CC-SHAREALIKE_3PT0-US ;
  vaem:intent "This vocabulary is to be used by other ontologies that need to reference type definitions." ;
  vaem:namespace "https://nst.nasa.gov/esmd/cx/type.owl#" ;
  vaem:namespacePrefix "type" ;
  vaem:specificity "1"^^xsd:int ;
  vaem:url "https://nst.nasa.gov/esmd/cx/n1type.owl"^^xsd:anyURI ;
  rdfs:label "Type" ;
  owl:imports <http://qudt.org/2.1/schema/datatype> ;
  owl:imports <http://qudt.org/2.1/schema/facade/qudt> ;
  owl:imports <http://www.linkedmodel.org/schema/dtype> ;
  owl:imports <http://www.linkedmodel.org/schema/vaem> ;
  owl:versionInfo "$Id: $" ;
.
qudt:AbstractDatatype
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Abstract_data_type> ;
  prov:wasInfluencedBy <http://xlinux.nist.gov/dads/HTML/abstractDataType.html> ;
.
qudt:AlgebraicDatatype
  rdfs:seeAlso qudt:AbstractDatatype ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Algebraic_data_type> ;
.
qudt:Concept
  rdfs:subClassOf owl:Thing ;
.
qudt:Heap
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Heap_(data_structure)> ;
.
qudt:Term
  rdfs:subClassOf owl:Thing ;
.
qudt:Tree
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Tree_(data_structure)> ;
.
qudt.type:ALPHANUMERIC
  rdf:type qudt:CharacterType ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:code "106"^^xsd:nonNegativeInteger ;
  qudt:id "T001-00" ;
  qudt:literal "alphanumeric" ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "ALPHANUMERIC" ;
.
qudt.type:BOOLEAN
  rdf:type qudt:BooleanType ;
  qudt:ansiSQLName "BOOLEAN" ;
  qudt:code "1"^^xsd:nonNegativeInteger ;
  dcterms:description "In computer science, the Boolean or logical data type is a data type, having two values (usually denoted true and false), intended to represent the truth values of logic and Boolean algebra. The Boolean data type is the primary result of conditional statements, which allow different actions and change control flow depending on whether a programmer-specified boolean condition evaluates to true or false."^^rdf:HTML ;
  qudt:encoding qudt.type:BooleanEncoding ;
  qudt:id "T000-01" ;
  qudt:javaName "boolean" ;
  qudt:jsName "Boolean()" ;
  qudt:literal "boolean" ;
  qudt:microsoftSQLServerName "bit" ;
  qudt:mySQLName "BOOL" ;
  qudt:mySQLName "BOOLEAN" ;
  qudt:mySQLName "TINYINT(1)" ;
  qudt:odbcName "SQL_BIT" ;
  qudt:oleDBName "DBTYPE_BOOL" ;
  qudt:oracleSQLName "RAW(1)" ;
  qudt:pythonName "bool" ;
  qudt:rdfsDatatype xsd:boolean ;
  rdfs:label "BOOLEAN" ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Boolean%5Fdata%5Ftype> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/aa275635(v=sql.80).aspx> ;
.
qudt.type:BYTE
  rdf:type qudt:SignedShortIntegerType ;
  qudt:abbreviation "byte" ;
  qudt:cName "Byte" ;
  qudt:code "800" ;
  dcterms:description "The byte data type is an 8-bit signed two's complement integer. It has a minimum value of -128 and a maximum value of 127 (inclusive). The byte data type can be useful for saving memory in large arrays, where the memory savings actually matters. They can also be used in place of int where their limits help to clarify your code; the fact that a variable's range is limited can serve as a form of documentation."^^rdf:HTML ;
  qudt:encoding qudt.type:OctetEncoding ;
  qudt:id "T002-01" ;
  qudt:literal "byte" ;
  qudt:maxInclusive "127"^^dtype:numericUnion ;
  qudt:minInclusive "-128" ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "Byte" ;
  prov:wasInfluencedBy <http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html> ;
.
qudt.type:BigEndian
  rdf:type qudt:EndianType ;
  qudt:code 1 ;
  qudt:literal "big" ;
  rdfs:label "Big Endian" ;
.
qudt.type:BitAligned
  rdf:type qudt:AlignmentType ;
  qudt:literal "bit" ;
  rdfs:label "Bit aligned" ;
.
qudt.type:BitField01
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf1" ;
  qudt:bits "1"^^xsd:positiveInteger ;
  qudt:id "T010-01" ;
  qudt:literal "B1" ;
  qudt:mySQLName "BIT(1)" ;
  qudt:rdfsDatatype qudt:BitField1 ;
  rdfs:label "Bit Field 01" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt.type:BitField02
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf2" ;
  qudt:bits "2"^^xsd:positiveInteger ;
  qudt:code 182 ;
  qudt:id "T010-02" ;
  qudt:literal "B2" ;
  qudt:mySQLName "BIT(2)" ;
  qudt:rdfsDatatype qudt:BitField2 ;
  rdfs:label "Bit Field 02" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt.type:BitField03
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf3" ;
  qudt:bits "3"^^xsd:positiveInteger ;
  qudt:code 183 ;
  qudt:id "T010-03" ;
  qudt:literal "B3" ;
  qudt:mySQLName "BIT(3)" ;
  qudt:rdfsDatatype qudt:BitField3 ;
  rdfs:label "Bit Field 03" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt.type:BitField04
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf4" ;
  qudt:bits "4"^^xsd:positiveInteger ;
  qudt:code 184 ;
  qudt:id "T010-04" ;
  qudt:literal "B4" ;
  qudt:mySQLName "BIT(4)" ;
  qudt:rdfsDatatype qudt:BitField4 ;
  rdfs:label "Bit Field 04" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt.type:BitField05
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf5" ;
  qudt:bits "5"^^xsd:positiveInteger ;
  qudt:code 185 ;
  qudt:id "T010-05" ;
  qudt:literal "B5" ;
  qudt:mySQLName "BIT(5)" ;
  qudt:rdfsDatatype qudt:BitField5 ;
  rdfs:label "Bit Field 05" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt.type:BitField06
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf6" ;
  qudt:bits "6"^^xsd:positiveInteger ;
  qudt:code 186 ;
  qudt:id "T010-06" ;
  qudt:literal "B6" ;
  qudt:mySQLName "BIT(6)" ;
  qudt:rdfsDatatype qudt:BitField6 ;
  rdfs:label "Bit Field 06" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt.type:BitField07
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf7" ;
  qudt:bits "7"^^xsd:positiveInteger ;
  qudt:code 187 ;
  qudt:id "T010-07" ;
  qudt:literal "B7" ;
  qudt:mySQLName "BIT(7)" ;
  qudt:rdfsDatatype qudt:BitField7 ;
  rdfs:label "Bit Field 07" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt.type:BitField08
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf8" ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:code 188 ;
  qudt:id "T010-08" ;
  qudt:literal "B8" ;
  qudt:mySQLName "BIT(8)" ;
  qudt:rdfsDatatype qudt:BitField8 ;
  rdfs:label "Bit Field 08" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt.type:BitField09
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf9" ;
  qudt:bits "9"^^xsd:positiveInteger ;
  qudt:code 189 ;
  qudt:id "T010-09" ;
  qudt:literal "B9" ;
  qudt:mySQLName "BIT(9)" ;
  qudt:rdfsDatatype qudt:BitField9 ;
  rdfs:label "Bit Field 09" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt.type:BitField10
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf10" ;
  qudt:bitOrder qudt.type:BigEndian ;
  qudt:bits "10"^^xsd:positiveInteger ;
  qudt:byteOrder qudt.type:BigEndian ;
  qudt:code 190 ;
  qudt:id "T010-02" ;
  qudt:literal "B10" ;
  qudt:mySQLName "BIT(10)" ;
  qudt:rdfsDatatype qudt:BitField10 ;
  rdfs:label "Bit Field 10" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt.type:BitField11
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf11" ;
  qudt:bits "11"^^xsd:positiveInteger ;
  qudt:code 191 ;
  qudt:id "T010-11" ;
  qudt:literal "B11" ;
  qudt:mySQLName "BIT(11)" ;
  qudt:rdfsDatatype qudt:BitField11 ;
  rdfs:label "Bit Field 11" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt.type:BooleanEncoding
  rdf:type qudt:BooleanEncodingType ;
  rdfs:label "Boolean Encoding" ;
.
qudt.type:BooleanTypeEnumeration
  rdf:type qudt:DiscreteStateEnumeration ;
  dc:description "The elements of the 'BooleanEnumeration' with two values, 'true' and 'false'." ;
  qudt:code "1002"^^xsd:nonNegativeInteger ;
  qudt:value <http://qudt.org/schema/type#False> ;
  qudt:value <http://qudt.org/schema/type#True> ;
  rdfs:label "Boolean value" ;
.
qudt.type:ByteAligned
  rdf:type qudt:AlignmentType ;
  qudt:literal "byte" ;
  rdfs:label "Byte aligned" ;
.
qudt.type:ByteOrderTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:code "1004"^^xsd:nonNegativeInteger ;
  qudt:defaultValue qudt.type:BigEndian ;
  qudt:value qudt.type:BigEndian ;
  qudt:value qudt.type:LittleEndian ;
  rdfs:label "Byte Order Type Enumeration" ;
.
qudt.type:CHAR
  rdf:type qudt:CharacterType ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:encoding qudt.type:CharEncoding ;
  qudt:id "T001-01" ;
  qudt:literal "char" ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "CHAR" ;
.
qudt.type:CharEncoding
  rdf:type qudt:BooleanEncodingType ;
  rdf:type qudt:CharEncodingType ;
  dc:description "7 bits of 1 octet" ;
  qudt:bytes "1"^^xsd:positiveInteger ;
  rdfs:label "Char Encoding" ;
.
qudt.type:DATE
  rdf:type qudt:DateStringType ;
  qudt:code 255 ;
  dcterms:description "Provides the date expressed in year, month and day."^^rdf:HTML ;
  qudt:encodingDescription "YYYY:MM:DD, where YYYY is a 4 digit year, MM is a 2 digit month and DD is a 2 digit day." ;
  qudt:id "T004-01" ;
  qudt:literal "date" ;
  qudt:rdfsDatatype xsd:dateTime ;
  rdfs:label "Date" ;
.
qudt.type:DECIMAL
  rdf:type qudt:NumericType ;
  qudt:ansiSQLName "DECIMAL(p,s)" ;
  qudt:code "101"^^xsd:nonNegativeInteger ;
  qudt:literal "numeric" ;
  qudt:odbcName "SQL_DECIMAL(p,s)" ;
  qudt:oracleSQLName "NUMBER(p,s)" ;
  qudt:rdfsDatatype qudt:numericUnion ;
  rdfs:label "Decimal" ;
.
qudt.type:DIGIT
  rdf:type qudt:CharacterType ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:id "T001-02" ;
  qudt:literal "digit" ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "DIGIT" ;
.
qudt.type:EndianTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value qudt.type:BigEndian ;
  qudt:value qudt.type:LittleEndian ;
  rdfs:label "Endian Type Enumeration" ;
.
qudt.type:FLAG
  rdf:type qudt:BooleanType ;
  qudt:code "2"^^xsd:nonNegativeInteger ;
  qudt:id "T000-02" ;
  qudt:literal "flag" ;
  qudt:rdfsDatatype xsd:boolean ;
  rdfs:label "FLAG" ;
.
qudt.type:FLOAT-DP
  rdf:type qudt:RealDoublePrecisionType ;
  qudt:abbreviation "F64" ;
  qudt:ansiSQLName "DOUPLE PRECISION" ;
  qudt:base "2"^^xsd:nonNegativeInteger ;
  qudt:bits "64"^^xsd:positiveInteger ;
  qudt:bytes "8"^^xsd:nonNegativeInteger ;
  qudt:code 405 ;
  dcterms:description "A double precision floating point datatype.  Numbers of this type are stored using 64 bits, they require more memory than numbers of type single, which use 32 bits. However, because they are stored with more bits, numbers of type double are represented to more precision than numbers of type single. The double-precision (or double) data type is represented according to IEEE Standard 754 for double precision. A value is formatted with bit-fields for sign, mantissa and exponent."^^rdf:HTML ;
  qudt:encoding qudt.type:DoublePrecisionEncoding ;
  qudt:id "T006-03" ;
  qudt:javaName "double" ;
  qudt:jsName "double" ;
  qudt:literal "double" ;
  qudt:matlabName "double" ;
  qudt:maxExclusive "(1-2^{-53}) \\times 2^{1024}" ;
  qudt:maxExponent "1023"^^xsd:nonNegativeInteger ;
  qudt:maxMantissa 9007199254740991 ;
  qudt:microsoftSQLServerName "float" ;
  qudt:minExclusive "-(1-2^{-53}) \\times 2^{1024}" ;
  qudt:minMantissa -9007199254740991 ;
  qudt:mySQLName "DOUBLE" ;
  qudt:octets "8"^^xsd:positiveInteger ;
  qudt:odbcName "SQL_DOUBLE" ;
  qudt:oleDBName "DBTYPE_R8" ;
  qudt:oracleSQLName "FLOAT(49)" ;
  qudt:rdfsDatatype xsd:double ;
  rdfs:label "Double Precision Real" ;
  qudt:exactMatch qudt.type:FLOAT_IEEE754-BINARY64 ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/floating-point-types.html> ;
  prov:wasInfluencedBy <http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html> ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Floating_point> ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/IEEE_floating_point> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/aa275635(v=sql.80).aspx> ;
  prov:wasInfluencedBy <http://www.mathworks.com/help/matlab/matlab_prog/floating-point-numbers.html> ;
.
qudt.type:FLOAT-SP
  rdf:type qudt:RealSinglePrecisionType ;
  qudt:ansiSQLName "FLOAT" ;
  qudt:bits "32"^^xsd:positiveInteger ;
  qudt:bytes "4"^^xsd:nonNegativeInteger ;
  qudt:cName "float" ;
  dcterms:description "A single precision real is a 32 bit signed floating point representation. Numbers of type single are stored using 32 bits, they require less memory than numbers of type double, which use 64 bits. However, because they are stored with fewer bits, numbers of type single are represented to less precision than numbers of type double."^^rdf:HTML ;
  qudt:encoding qudt.type:SinglePrecisionRealEncoding ;
  qudt:id "T006-01" ;
  qudt:javaName "float" ;
  qudt:jsName "float" ;
  qudt:literal "single" ;
  qudt:matlabName "single" ;
  qudt:maxExclusive "\\((2-2^{-23}) \\times 2^127\\)" ;
  qudt:maxExponent "23"^^xsd:nonNegativeInteger ;
  qudt:microsoftSQLServerName "real" ;
  qudt:minExclusive "-(2-2^{-23}) \\times 2^{127}" ;
  qudt:mySQLName "FLOAT" ;
  qudt:octets "4"^^xsd:positiveInteger ;
  qudt:odbcName "SQL_FLOAT" ;
  qudt:oleDBName "DBTYPE_R4" ;
  qudt:oracleSQLName "FLOAT(23)" ;
  qudt:rdfsDatatype xsd:float ;
  rdfs:label "Single Precision Real" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/floating-point-types.html> ;
  prov:wasInfluencedBy <http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html> ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Floating_point> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/aa275635(v=sql.80).aspx> ;
  prov:wasInfluencedBy <http://www-01.ibm.com/support/docview.wss?uid=swg21325957> ;
  prov:wasInfluencedBy <http://www.mathworks.com/help/matlab/matlab_prog/floating-point-numbers.html> ;
  prov:wasInfluencedBy <http://www.stanford.edu/dept/itss/docs/oracle/10g/server.101/b10764/apb.htm> ;
.
qudt.type:FLOAT_IEEE754-BINARY64
  rdf:type qudt:RealDoublePrecisionType ;
  qudt:base "2"^^xsd:nonNegativeInteger ;
  qudt:bits "64"^^xsd:positiveInteger ;
  dcterms:description "IEEE-754 floating point datatype is a technical standar established in 1985 by the Institute of Electrical and Electronics Engineers (IEEE). Many hardware floating point units use the IEEE 754 standard.."^^rdf:HTML ;
  qudt:id "T006-05" ;
  qudt:maxExponent "970"^^xsd:nonNegativeInteger ;
  qudt:maxMantissa 9007199254740991 ;
  qudt:minMantissa -9007199254740991 ;
  qudt:rdfsDatatype xsd:double ;
  rdfs:label "IEEE754 BINARY64" ;
  qudt:exactMatch qudt.type:FLOAT-DP ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/IEEE_floating_point> ;
.
qudt.type:HEXBINARY
  rdf:type qudt:HexBinaryType ;
  qudt:code "803"^^xsd:nonNegativeInteger ;
  qudt:literal "hexbinary" ;
  qudt:rdfsDatatype qudt:hexbinary ;
  rdfs:label "HEXBINARY" ;
.
qudt.type:HighToLow
  rdf:type qudt:MemoryOrderType ;
  qudt:literal "high" ;
  rdfs:label "High to low" ;
.
qudt.type:IEEE754_1985RealEncoding
  rdf:type qudt:FloatingPointEncodingType ;
  qudt:bytes "32"^^xsd:positiveInteger ;
  rdfs:label "IEEE 754 1985 Real Encoding" ;
.
qudt.type:IERS-TN-32-2004
  rdf:type qudt:Citation ;
  dcterms:description "IERS Conventions (2003), D. D. McCarthy and Gérard Petit (eds.), IERS Technical Note No. 32, 2004; http://www.iers.org/iers/publications/tn/tn32."^^rdf:HTML ;
  qudt:url "http://www.iers.org/iers/publications/tn/tn32."^^xsd:anyURI ;
  rdfs:label "IERS-TN-32-2004" ;
  skos:prefLabel "IERS-TN-32-2004" ;
.
qudt.type:ISO8601-UTCDateTime-BasicFormat
  rdf:type qudt:DateTimeStringEncodingType ;
  qudt:allowedPattern "[0-9]{4}[0-9]{2}[0-9]{2}T[0-9]{2}[0-9]{2}[0-9]{2}.[0-9]+Z" ;
  qudt:allowedPattern "[0-9]{4}[0-9]{2}[0-9]{2}T[0-9]{2}[0-9]{2}[0-9]{2}Z" ;
  rdfs:label "ISO 8601 UTC Date Time - Basic Format" ;
.
qudt.type:Konopliv2001
  rdf:type qudt:Citation ;
  dcterms:description "\"Recent Gravity Models as a Result of the Lunar Prospector Mission\", A. S. Konopliv, S. W. Asmar, E. Carranza, W. L. Sjogren, and D. N. Yuan, Academic Press, Icarus 150, 1-18 (2001)."^^rdf:HTML ;
  rdfs:label "Konopliv2001" ;
  skos:prefLabel "Konopliv2001" ;
.
qudt.type:LETTER
  rdf:type qudt:CharacterType ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:id "T001-03" ;
  qudt:literal "letter" ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "LETTER" ;
.
qudt.type:LIST
  rdf:type qudt:List ;
  rdfs:label "LIST" ;
.
qudt.type:LittleEndian
  rdf:type qudt:EndianType ;
  qudt:code 2 ;
  qudt:literal "little" ;
  rdfs:label "Little Endian" ;
.
qudt.type:LongUnsignedIntegerEncoding
  rdf:type qudt:IntegerEncodingType ;
  qudt:bytes "8"^^xsd:positiveInteger ;
  rdfs:label "Long Unsigned Integer Encoding" ;
.
qudt.type:LowToHigh
  rdf:type qudt:MemoryOrderType ;
  qudt:literal "low" ;
  rdfs:label "Low to high" ;
.
qudt.type:NUMERIC
  rdf:type qudt:NumericType ;
  qudt:ansiSQLName "DECIMAL(p,s)" ;
  qudt:code "101"^^xsd:nonNegativeInteger ;
  qudt:literal "numeric" ;
  qudt:odbcName "SQL_DECIMAL(p,s)" ;
  qudt:oracleSQLName "NUMBER(p,s)" ;
  qudt:rdfsDatatype qudt:numericUnion ;
  rdfs:label "Numeric" ;
.
qudt.type:OCTET
  rdf:type qudt:OctetType ;
  qudt:abbreviation "octet" ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:bytes "1"^^xsd:nonNegativeInteger ;
  qudt:cName "Byte" ;
  qudt:code "800" ;
  qudt:encoding qudt.type:OctetEncoding ;
  qudt:id "T002-01" ;
  qudt:literal "octet" ;
  qudt:maxInclusive 255 ;
  qudt:minInclusive "0" ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "Octet" ;
.
qudt.type:OctetEncoding
  rdf:type qudt:BooleanEncodingType ;
  rdf:type qudt:ByteEncodingType ;
  qudt:bytes "1"^^xsd:positiveInteger ;
  rdfs:label "OCTET Encoding" ;
.
qudt.type:RELATIVE-DATETIME
  rdf:type qudt:DateStringType ;
  qudt:code "76"^^xsd:nonNegativeInteger ;
  dcterms:description "Days and time relative to some Epoch"^^rdf:HTML ;
  qudt:encodingDescription "TBD" ;
  qudt:id "T004-08" ;
  qudt:literal "reldate" ;
  rdfs:label "Relative date and time" ;
.
qudt.type:SIGNED-BIG-INTEGER
  rdf:type qudt:SignedBigIntegerType ;
  qudt:abbreviation "SI64" ;
  qudt:bits "64"^^xsd:positiveInteger ;
  qudt:code 109 ;
  dcterms:description "The\"Signed Big Integer\", (\\textit{long) in Java) data type is a 64-bit signed two's complement integer. It has a minimum value of -9,223,372,036,854,775,808 and a maximum value of 9,223,372,036,854,775,807 (inclusive). Use this data type when you need a range of values wider than those provided by int."^^rdf:HTML ;
  qudt:encoding qudt.type:LongUnsignedIntegerEncoding ;
  qudt:id "T002-02" ;
  qudt:javaName "long" ;
  qudt:literal "SI64" ;
  qudt:matlabName "int64" ;
  qudt:maxInclusive "2^63 -1"^^dtype:numericUnion ;
  qudt:minInclusive "- 2^63 -1" ;
  qudt:mySQLName "BIGINT" ;
  qudt:octets "8"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:long ;
  rdfs:label "Signed Big Integer" ;
  prov:wasInfluencedBy <http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html> ;
  prov:wasInfluencedBy <http://docs.python.org/2/library/stdtypes.html> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/4xwz0t37(v=vs.71).aspx> ;
  prov:wasInfluencedBy <http://www.mathworks.com/help/matlab/ref/int16.html> ;
.
qudt.type:SIGNED-INTEGER
  rdf:type qudt:SignedIntegerType ;
  qudt:abbreviation "SI16" ;
  qudt:ansiSQLName "SMALLINT" ;
  qudt:bits "16"^^xsd:positiveInteger ;
  qudt:bytes "2"^^xsd:nonNegativeInteger ;
  qudt:code 105 ;
  dcterms:description "The \"Signed Integer} or \\textit{short} data type is a 16-bit signed two's complement integer. It has a minimum value of -32,768 ( \\(-2^{15}\\) ) and a maximum (inclusive) value of 32,767 (\\(2^{15}\\)). As with byte, the same guidelines apply: you can use a short to save memory in large arrays, in situations where the memory savings actually matters."^^rdf:HTML ;
  qudt:encoding qudt.type:ShortSignedIntegerEncoding ;
  qudt:id "T002-03" ;
  qudt:javaName "short" ;
  qudt:jsName "short" ;
  qudt:literal "SI16" ;
  qudt:matlabName "int16" ;
  qudt:maxInclusive "32767" ;
  qudt:microsoftSQLServerName "smallint" ;
  qudt:minInclusive "-32767" ;
  qudt:mySQLName "SMALLINT" ;
  qudt:rdfsDatatype xsd:short ;
  rdfs:label "Signed Integer" ;
  prov:wasInfluencedBy <http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html> ;
  prov:wasInfluencedBy <http://docs.python.org/2/library/stdtypes.html> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/4xwz0t37(v=vs.71).aspx> ;
  prov:wasInfluencedBy <http://www.mathworks.com/help/matlab/ref/int16.html> ;
.
qudt.type:SIGNED-LONG-INTEGER
  rdf:type qudt:SignedLongIntegerType ;
  qudt:abbreviation "SI32" ;
  qudt:ansiSQLName "INTEGER" ;
  qudt:bits "32"^^xsd:positiveInteger ;
  qudt:bytes "4"^^xsd:nonNegativeInteger ;
  qudt:cName "int" ;
  dcterms:description "A \\textit{Signed Long Integer) is a 32 bit signed integer in 2's complement form.  It has a minimum value of -2,147,483,648 and a maximum value of 2,147,483,647 (inclusive). For integral values, this data type is generally the default choice unless there is a reason (like the above) to choose something else. This data type will most likely be large enough for the numbers your program will use, but if you need a wider range of values, use long instead."^^rdf:HTML ;
  qudt:id "T002-04" ;
  qudt:javaName "int" ;
  qudt:jsName "int" ;
  qudt:literal "SI32" ;
  qudt:matlabName "int32" ;
  qudt:maxInclusive "2^31 - 1"^^dtype:numericUnion ;
  qudt:microsoftSQLServerName "integer" ;
  qudt:minInclusive "-2^31 -1" ;
  qudt:mySQLName "INT" ;
  qudt:octets "4"^^xsd:positiveInteger ;
  qudt:odbcName "SQL_INTEGER" ;
  qudt:oleDBName "DBTYPE_I4" ;
  qudt:oracleSQLName "NUMBER(10)" ;
  qudt:rdfsDatatype xsd:int ;
  qudt:signedness qudt.type:Signed ;
  rdfs:label "Signed Long Integer" ;
  prov:wasInfluencedBy <http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html> ;
  prov:wasInfluencedBy <http://docs.python.org/2/library/stdtypes.html> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/4xwz0t37(v=vs.71).aspx> ;
.
qudt.type:SIGNED-MEDIUM-INTEGER
  rdf:type qudt:SignedMediumIntegerType ;
  qudt:abbreviation "SI24" ;
  qudt:bits "24"^^xsd:positiveInteger ;
  qudt:bytes "3"^^xsd:nonNegativeInteger ;
  qudt:maxInclusive "8388607"^^dtype:numericUnion ;
  qudt:minInclusive "-8388608" ;
  qudt:mySQLName "MEDIUMINT" ;
  rdfs:label "Signed Medium Integer" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/integer-types.html> ;
.
qudt.type:SIGNED-SHORT-INTEGER
  rdf:type qudt:SignedShortIntegerType ;
  qudt:abbreviation "SI8" ;
  qudt:ansiSQLName "NUMERIC(3,0)" ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:bytes "1"^^xsd:nonNegativeInteger ;
  qudt:code 103 ;
  dcterms:description "Unsigned 8 bit integer."^^rdf:HTML ;
  qudt:encoding qudt.type:OctetEncoding ;
  qudt:id "T002-06" ;
  qudt:literal "SI8" ;
  qudt:maxInclusive "127" ;
  qudt:microsoftSQLServerName "tinyint" ;
  qudt:minInclusive "-127" ;
  qudt:mySQLName "TINYINT" ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:odbcName "SQL_TINYINT" ;
  qudt:oleDBName "DBTYPE_I1" ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "Signed Short Integer" ;
.
qudt.type:ShortSignedIntegerEncoding
  rdf:type qudt:IntegerEncodingType ;
  qudt:bytes "2"^^xsd:positiveInteger ;
  rdfs:label "Short Signed Integer Encoding" ;
.
qudt.type:ShortUnsignedIntegerEncoding
  rdf:type qudt:BooleanEncodingType ;
  rdf:type qudt:IntegerEncodingType ;
  qudt:bytes "2"^^xsd:positiveInteger ;
  rdfs:label "Short Unsigned Integer Encoding" ;
.
qudt.type:Signed
  rdf:type qudt:SignednessType ;
  qudt:literal "signed" ;
  rdfs:label "Signed" ;
.
qudt.type:SignedIntegerEncoding
  rdf:type qudt:IntegerEncodingType ;
  qudt:bytes "4"^^xsd:positiveInteger ;
  rdfs:label "Signed Integer Encoding" ;
.
qudt.type:SinglePrecisionRealEncoding
  rdf:type qudt:FloatingPointEncodingType ;
  qudt:bytes "32"^^xsd:positiveInteger ;
  rdfs:label "Single Precision Real Encoding" ;
.
qudt.type:String10
  rdf:type qudt:StringUTF8 ;
  qudt:code 515 ;
  dcterms:description "String made up of 10 UTF-8 characters"^^rdf:HTML ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt.type:UTF8-CHAR ;
  qudt:encoding qudt.type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "10"^^xsd:int
    ) ;
  qudt:literal "str10" ;
  qudt:maxLength "20"^^xsd:nonNegativeInteger ;
  qudt:octets "10"^^xsd:positiveInteger ;
  rdfs:label "String 10" ;
.
qudt.type:String1024
  rdf:type qudt:StringUTF8 ;
  qudt:code 590 ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt.type:UTF8-CHAR ;
  qudt:hasDimensionVector (
      "1024"^^xsd:int
    ) ;
  qudt:literal "str1024" ;
  qudt:maxLength "1024"^^xsd:nonNegativeInteger ;
  qudt:octets "1024"^^xsd:positiveInteger ;
  rdfs:label "String1024" ;
.
qudt.type:String15
  rdf:type qudt:StringUTF8 ;
  qudt:code 520 ;
  dcterms:description "String made up of 15 UTF-8 characters"^^rdf:HTML ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt.type:UTF8-CHAR ;
  qudt:encoding qudt.type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "15"^^xsd:int
    ) ;
  qudt:literal "str15" ;
  qudt:maxLength "15"^^xsd:nonNegativeInteger ;
  qudt:octets "15"^^xsd:positiveInteger ;
  rdfs:label "String 15" ;
.
qudt.type:String16
  rdf:type qudt:StringUTF8 ;
  dc:description "A 16-digit alphanumeric string." ;
  rdfs:label "String16" ;
.
qudt.type:String160
  rdf:type qudt:StringUTF8 ;
  qudt:code 560 ;
  dcterms:description "String made up of 160 UTF-8 characters"^^rdf:HTML ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt.type:UTF8-CHAR ;
  qudt:encoding qudt.type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "160"^^xsd:int
    ) ;
  qudt:literal "str160" ;
  qudt:maxLength "160"^^xsd:nonNegativeInteger ;
  qudt:octets "160"^^xsd:positiveInteger ;
  rdfs:label "String 160" ;
.
qudt.type:String20
  rdf:type qudt:StringUTF8 ;
  qudt:code 525 ;
  dcterms:description "String made up of 20 UTF-8 characters"^^rdf:HTML ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt.type:UTF8-CHAR ;
  qudt:encoding qudt.type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "20"^^xsd:int
    ) ;
  qudt:literal "str20" ;
  qudt:maxLength "20"^^xsd:nonNegativeInteger ;
  qudt:octets "20"^^xsd:positiveInteger ;
  rdfs:label "String 20" ;
.
qudt.type:String256
  rdf:type qudt:StringUTF8 ;
  qudt:code 570 ;
  dcterms:description "String made up of 256 UTF-8 characters"^^rdf:HTML ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt.type:UTF8-CHAR ;
  qudt:encoding qudt.type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "256"^^xsd:int
    ) ;
  qudt:literal "str256" ;
  qudt:maxLength "256"^^xsd:nonNegativeInteger ;
  qudt:octets "256"^^xsd:positiveInteger ;
  rdfs:label "String 256" ;
.
qudt.type:String4
  rdf:type qudt:StringUTF8 ;
  dcterms:description "String made up of 4 UTF-8 characters"^^rdf:HTML ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt.type:UTF8-CHAR ;
  qudt:encoding qudt.type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "4"^^xsd:int
    ) ;
  qudt:literal "str4" ;
  qudt:maxLength "4"^^xsd:nonNegativeInteger ;
  qudt:octets "4"^^xsd:positiveInteger ;
  rdfs:label "String 4" ;
.
qudt.type:String64
  rdf:type qudt:StringUTF8 ;
  qudt:code 515 ;
  dcterms:description "String made up of 64 UTF-8 characters"^^rdf:HTML ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt.type:UTF8-CHAR ;
  qudt:encoding qudt.type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "64"^^xsd:int
    ) ;
  qudt:literal "str64" ;
  qudt:maxLength "64"^^xsd:nonNegativeInteger ;
  qudt:octets "64"^^xsd:positiveInteger ;
  rdfs:label "String 64" ;
.
qudt.type:String8
  rdf:type qudt:StringUTF8 ;
  qudt:code 510 ;
  dcterms:description "String made up of 8 UTF-8 characters"^^rdf:HTML ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:encoding qudt.type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "8"^^xsd:int
    ) ;
  qudt:literal "str8" ;
  qudt:maxLength "8"^^xsd:nonNegativeInteger ;
  qudt:octets "8"^^xsd:positiveInteger ;
  rdfs:label "String 8" ;
.
qudt.type:TIME
  rdf:type qudt:TimeStringType ;
  dc:description "Time in hh:mm:ss[Z|(+|-)hh:mm]format." ;
  qudt:code "68"^^xsd:nonNegativeInteger ;
  qudt:id "T004-12" ;
  qudt:literal "time" ;
  qudt:rdfsDatatype xsd:time ;
  rdfs:label "TIME" ;
.
qudt.type:TextString100
  rdf:type qudt:TextStringType ;
  qudt:maxLength "100"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string100" ;
.
qudt.type:TextString12
  rdf:type qudt:TextStringType ;
  qudt:maxLength "12"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string12" ;
.
qudt.type:TextString18
  rdf:type qudt:TextStringType ;
  qudt:maxLength "18"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string18" ;
.
qudt.type:TextString250
  rdf:type qudt:TextStringType ;
  qudt:maxLength "250"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string250" ;
.
qudt.type:TextString256
  rdf:type qudt:TextStringType ;
  qudt:maxLength "256"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string256" ;
.
qudt.type:TextString30
  rdf:type qudt:TextStringType ;
  qudt:maxLength "30"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string30" ;
.
qudt.type:TextString40
  rdf:type qudt:TextStringType ;
  qudt:maxLength "40"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string40" ;
.
qudt.type:TextString50
  rdf:type qudt:TextStringType ;
  qudt:maxLength "50"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string50" ;
.
qudt.type:TextString56
  rdf:type qudt:TextStringType ;
  qudt:maxLength "56"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string56" ;
.
qudt.type:TextString8
  rdf:type qudt:TextStringType ;
  qudt:maxLength "8"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string8" ;
.
qudt.type:TextString80
  rdf:type qudt:TextStringType ;
  qudt:maxLength "80"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string80" ;
.
qudt.type:UNARY-FUNCTION
  rdf:type qudt:FunctionDatatype ;
  dcterms:description "This type identifies functions that have exactly one argument."^^rdf:HTML ;
  qudt:functionArity "1"^^xsd:nonNegativeInteger ;
  rdfs:label "UNARY-FUNCTION" ;
.
qudt.type:UNSIGNED-BIG-INTEGER
  rdf:type qudt:UnsignedBigIntegerType ;
  qudt:abbreviation "UI64" ;
  qudt:bits "64"^^xsd:positiveInteger ;
  qudt:code 117 ;
  qudt:id "T002-08" ;
  qudt:literal "UI64" ;
  qudt:maxInclusive "2^64 -1"^^dtype:numericUnion ;
  qudt:minInclusive "0" ;
  qudt:mySQLName "BIGINT" ;
  qudt:octets "8"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:unsignedLong ;
  rdfs:label "Unsigned Big Integer" ;
.
qudt.type:UNSIGNED-INTEGER
  rdf:type qudt:UnsignedIntegerType ;
  qudt:abbreviation "UI16" ;
  qudt:bits "16"^^xsd:positiveInteger ;
  qudt:code 113 ;
  dcterms:description "An unsigned 16-bit integer in the range 0 to 65,535"^^rdf:HTML ;
  qudt:id "T002-09" ;
  qudt:literal "UI16" ;
  qudt:maxInclusive "65535" ;
  qudt:microsoftSQLServerName "smallint" ;
  qudt:minInclusive "0" ;
  qudt:mySQLName "SMALLINT" ;
  qudt:rdfsDatatype xsd:unsignedShort ;
  rdfs:label "Unsigned Integer" ;
.
qudt.type:UNSIGNED-LONG-INTEGER
  rdf:type qudt:UnsignedLongIntegerType ;
  qudt:abbreviation "UI32" ;
  qudt:bits "32"^^xsd:positiveInteger ;
  qudt:code 115 ;
  qudt:encoding qudt.type:UnsignedIntegerEncoding ;
  qudt:id "T002-10" ;
  qudt:literal "UI32" ;
  qudt:maxInclusive "2^{32}"^^dtype:numericUnion ;
  qudt:minInclusive "0" ;
  qudt:mySQLName "INT" ;
  qudt:octets "4"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:unsignedInt ;
  rdfs:label "Unsigned Long Integer" ;
.
qudt.type:UNSIGNED-MEDIUM-INTEGER
  rdf:type qudt:UnsignedMediumIntegerType ;
  qudt:abbreviation "UI24" ;
  qudt:bits "24"^^xsd:positiveInteger ;
  qudt:bytes "3"^^xsd:nonNegativeInteger ;
  qudt:maxInclusive "8388607"^^dtype:numericUnion ;
  qudt:minInclusive "-8388608" ;
  qudt:mySQLName "MEDIUMINT" ;
  rdfs:label "Unsigned Medium Integer" ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/integer-types.html> ;
.
qudt.type:UNSIGNED-SHORT-INTEGER
  rdf:type qudt:OctetType ;
  qudt:abbreviation "UI8" ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:code 111 ;
  qudt:id "T002-13" ;
  qudt:literal "UI8" ;
  qudt:maxInclusive 255 ;
  qudt:microsoftSQLServerName "tinyint" ;
  qudt:minInclusive "0" ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:oleDBName "DBTYPE_UI1" ;
  qudt:rdfsDatatype xsd:unsignedByte ;
  rdfs:label "Unsigned Short Integer" ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/aa275635(v=sql.80).aspx> ;
.
qudt.type:UTC-DATETIME
  rdf:type qudt:DateStringType ;
  qudt:code "78"^^xsd:nonNegativeInteger ;
  dcterms:description "UTC is the time-scale maintained by the BIPM, with assistance from the IERS, which forms the basis of a coordinated dissemination of standard frequencies and time signals. It corresponds exactly in rate with  the international reference scale of atomic time (TAI) but differs from it by an integer number of seconds.  TAI, based on the second (SI), as realized on the rotating geoid, is formed by the BIPM on the basis of clock data supplied by cooperating establishments. It is in the form of a continuous scale, e.g. in days, hours, minutes and seconds from the origin 1 January, 1958 (adopted by the CGPM 1971). "^^rdf:HTML ;
  qudt:encodingDescription "YYYY-MM-DDThh:mm:ss[.dd] or YYYY-DDDThh:mm:ss[.dd], where 'YYYY' is the year, 'MM' is the two-digit month, 'DD' is the two-digit day, 'DDD' is the three digit day of year, 'T' is constant, 'hh:mm:ss[.dd]' is the UTC time in hours, minutes, seconds, and optional fractional seconds. As many 'd' characters to the right of the period as required may be used to obtain the required precision. All fields require leading zeros." ;
  qudt:id "T004-13" ;
  qudt:literal "utc-date" ;
  qudt:rdfsDatatype xsd:dateTime ;
  rdfs:label "UTC Date Time" ;
.
qudt.type:UTC-DAYTIME
  rdf:type qudt:DateStringType ;
  qudt:code "79"^^xsd:nonNegativeInteger ;
  qudt:encodingDescription "YYYY-DDDThh:mm:ss.ddZ, where each character is an ASCII character using one octet with the following meanings: YYYY = Year in four-character subfield with values 0001-9999, DDD = Day of year in three-character subfield with values 001-365 or -366, T =  Calendar-Time separator, hh = Hour in two-character subfield with values 00-23,  mm = Minute in two-character subfield with values 00-59, ss = Second in two-character subfield with values 00-59 (-58 or -60 during leap seconds), dd = Decimal fraction of second in one- to n-character subfield, each d has values 0-9, and Z = time code terminator (optional)" ;
  qudt:id "T004-14" ;
  qudt:literal "utc-dayTime" ;
  qudt:rdfsDatatype qudt:UTC-DayTime ;
  rdfs:label "UTC DAY TIME" ;
.
qudt.type:UTF16-CHAR
  rdf:type qudt:CharacterType ;
  qudt:bits "16"^^xsd:positiveInteger ;
  qudt:code 150 ;
  qudt:id "T001-04" ;
  qudt:literal "utf16" ;
  qudt:octets "2"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:short ;
  rdfs:label "UTF16 CHAR" ;
.
qudt.type:UTF16STRING
  rdf:type qudt:StringUTF16 ;
  qudt:code 600 ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:encoding qudt.type:UTF16StringEncoding ;
  qudt:literal "utf16" ;
  rdfs:label "UTF-16 String" ;
.
qudt.type:UTF16StringEncoding
  rdf:type qudt:StringEncodingType ;
  rdfs:label "UTF-16 String" ;
.
qudt.type:UTF8-CHAR
  rdf:type qudt:CharacterType ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:code 122 ;
  qudt:id "T001-05" ;
  qudt:literal "utf8" ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "UTF8 CHAR" ;
.
qudt.type:UTF8STRING
  rdf:type qudt:StringUTF8 ;
  qudt:code 500 ;
  dcterms:description "String consisting of UTF-8 characters"^^rdf:HTML ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:encoding qudt.type:UTF8StringEncoding ;
  qudt:literal "utf8" ;
  rdfs:label "UTF-8 String" ;
.
qudt.type:UTF8StringEncoding
  rdf:type qudt:StringEncodingType ;
  qudt:bytes "8"^^xsd:positiveInteger ;
  rdfs:label "UTF-8 Encoding" ;
.
qudt.type:Unsigned
  rdf:type qudt:SignednessType ;
  qudt:literal "unsigned" ;
  rdfs:label "Unsigned" ;
.
qudt.type:UnsignedIntegerEncoding
  rdf:type qudt:IntegerEncodingType ;
  qudt:bytes "4"^^xsd:positiveInteger ;
  rdfs:label "Unsigned Integer Encoding" ;
.
qudt.type:VECTOR
  rdf:type qudt:Vector ;
  qudt:code "450"^^xsd:nonNegativeInteger ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  rdfs:label "VECTOR" ;
.
qudt.type:YDT
  rdf:type qudt:DateStringType ;
  qudt:code 215 ;
  qudt:encodingDescription "TBD" ;
  qudt:id "T004-16" ;
  qudt:literal "YDT" ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Year Day Time" ;
.

