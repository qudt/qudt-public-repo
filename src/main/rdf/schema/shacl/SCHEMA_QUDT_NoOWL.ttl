@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix voag: <http://voag.linkedmodel.org/schema/voag#> .

<http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt>
  a owl:Ontology ;
  owl:imports <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/datatype> ;
  owl:imports <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/overlay/qudt> ;
  owl:imports <http://www.linkedmodel.org/schema/dtype> ;
  owl:imports <http://www.linkedmodel.org/schema/vaem> ;
  owl:imports <http://www.w3.org/2004/02/skos/core> ;
  owl:imports sh: ;
  owl:versionIRI <http://qudt.org/$$QUDT_VERSION$$/schema/qudt> ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "QUDT SHACL Schema Version $$QUDT_VERSION$$" ;
  vaem:hasGraphMetadata vaem:GMD_SHACLQUDT-SCHEMA .

qudt:AbstractQuantityKind
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Quantity Kind (abstract)" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:AbstractQuantityKind-altSymbol ;
  sh:property qudt:AbstractQuantityKind-broader ;
  sh:property qudt:AbstractQuantityKind-latexSymbol ;
  sh:property qudt:AbstractQuantityKind-symbol .

qudt:AngleUnit
  a rdfs:Class, sh:NodeShape ;
  dcterms:description "All units relating to specificaiton of angles. " ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Angle unit" ;
  rdfs:subClassOf qudt:DimensionlessUnit ;
  skos:exactMatch <http://dbpedia.org/resource/Category:Units_of_angle> .

qudt:AspectClass
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Aspect Class" ;
  rdfs:subClassOf rdfs:Class .

qudt:BaseDimensionMagnitude
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>Dimension</em> expresses a magnitude for a base quantity kind such as mass, length and time.
  </p>
  <p>DEPRECATED - each exponent is expressed as a property. 
  Keep until a validation of this has been done.
  </p>"""^^rdf:HTML ;
  qudt:informativeReference "http://en.wikipedia.org/wiki/Dimensional_analysis"^^xsd:anyURI ;
  qudt:informativeReference "http://web.mit.edu/2.25/www/pdf/DA_unified.pdf"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Base Dimension Magnitude" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:BaseDimensionMagnitude-hasBaseQuantityKind ;
  sh:property qudt:BaseDimensionMagnitude-vectorMagnitude .

qudt:BinaryPrefix
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>Binary Prefix</em> is a prefix for multiples of units in data processing, data transmission, and digital information,
   notably the bit and the byte, to indicate multiplication by a power of 2.
   </p>
  """^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Binary Prefix" ;
  rdfs:subClassOf qudt:Prefix .

qudt:Citation
  a rdfs:Class, sh:NodeShape ;
  dcterms:description "Provides a simple way of making citations."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Citation" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:Citation-description ;
  sh:property qudt:Citation-url .

qudt:Comment
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Comment" ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:Comment-description ;
  sh:property qudt:Comment-rationale .

qudt:Concept
  a rdfs:Class, sh:NodeShape ;
  dcterms:description "The root class for all QUDT concepts."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "QUDT Concept" ;
  rdfs:subClassOf rdfs:Resource ;
  sh:property qudt:Concept-abbreviation ;
  sh:property qudt:Concept-code ;
  sh:property qudt:Concept-deprecated ;
  sh:property qudt:Concept-description ;
  sh:property qudt:Concept-exactMatch ;
  sh:property qudt:Concept-guidance ;
  sh:property qudt:Concept-hasRule ;
  sh:property qudt:Concept-id ;
  sh:property qudt:Concept-isReplacedBy ;
  sh:property qudt:Concept-plainTextDescription .

qudt:ConstantValue
  a rdfs:Class, sh:NodeShape ;
  dcterms:description "Used to specify the values of a constant."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Constant value" ;
  rdfs:subClassOf qudt:QuantityValue ;
  sh:property qudt:ConstantValue-exactConstant .

qudt:CountingUnit
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>Counting Unit</em> is used for all units that express counts. 
  Examples are Atomic Number, Number, Number per Year, Percent and Sample per Second.
  </p>
  """^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Counting Unit" ;
  rdfs:subClassOf qudt:DimensionlessUnit .

qudt:CurrencyUnit
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  Currency Units have their own subclass of unit because:
   (a) they have additional properties such as 'country' and
   (b) their URIs do not conform to the same rules as other units.
  """^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Currency Unit" ;
  rdfs:subClassOf qudt:DimensionlessUnit ;
  sh:property qudt:CurrencyUnit-currencyCode ;
  sh:property qudt:CurrencyUnit-currencyExponent ;
  sh:property qudt:CurrencyUnit-currencyNumber .

qudt:DataItem
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>Data Item</em> holds a value that maybe a scalar or structured datatype.
  <em>Quantity Value</em> specifies which case applies.
  </p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Data Item" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:ValuePropertyShape .

qudt:Datatype
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>Datatype</em> is a definition of the type of the "value" of a data item (for example, "all integers between 0 and 10"),
   and the allowable operations on those values; the meaning of the data; and the way values of that type can be stored. 
  Some types are primitive - built-in to the language, with no visible internal structure.
  For example "Boolean"; others are composite - constructed from one or more other types (of either kind).
  For example lists, arrays, structures, unions. 
  Some languages provide strong typing, others allow implicit type conversion and/or explicit type conversion.
  </p>"""^^rdf:HTML ;
  qudt:informativeReference "http://en.wikipedia.org/wiki/Data_type"^^xsd:anyURI ;
  qudt:informativeReference "http://foldoc.org/data+type"^^xsd:anyURI ;
  qudt:informativeReference "http://www.princeton.edu/~achaney/tmve/wiki100k/docs/Data_type.html"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Datatype" ;
  rdfs:subClassOf qudt:Concept .

qudt:DecimalPrefix
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  A <em>Decimal Prefix</em> is a prefix for multiples of units that are powers of 10.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Decimal Prefix" ;
  rdfs:subClassOf qudt:Prefix .

qudt:DerivedUnit
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>Derived Unit</em> is a type specification for units that are derived from other units.
  </p>"""^^rdf:HTML ;
  qudt:dbpediaMatch "http://dbpedia.org/resource/Category:SI_derived_units"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Derived Unit" ;
  rdfs:subClassOf qudt:Unit .

qudt:DimensionlessUnit
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>Dimensionless Unit</em> is a quantity for which all the exponents of the factors corresponding to the base quantities in its quantity dimension are zero.
  </p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Dimensionless Unit" ;
  rdfs:subClassOf qudt:Unit .

qudt:Discipline
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Discipline" ;
  rdfs:subClassOf qudt:Concept .

qudt:EnumeratedQuantity
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Enumerated Quantity" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:EnumeratedQuantity-enumeratedValue ;
  sh:property qudt:EnumeratedQuantity-enumeration .

qudt:EnumeratedValue
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>An <em>Enumerated Value</em> class defines the members of an enumeration. 
  An enumeration is a set of literals from which a single value is selected. 
  Each literal can have a tag as an integer within a standard encoding appropriate to the range of integer values. 
  Consistency of enumeration types will allow them, and the enumerated values, to be referred to unambiguously either through symbolic name or encoding. 
  </p>
  <p>Enumerated values are also controlled vocabularies and as such need to be standardized. 
  Without this consistency enumeration literals can be stated differently and result in  data conflicts and misinterpretations.
  </p>
  <p>The tags are a set of positive whole numbers, not necessarily contiguous and having no numerical significance, each corresponding to the associated literal identifier. 
  An order attribute can also be given on the enumeration elements. 
  An enumeration can itself be a member of an enumeration. 
  This allows enumerations to be enumerated in a selection. 
  </p>
  <p>Enumerations are also subclasses of Scalar Datatype. 
  This allows them to be used as the reference of a datatype specification.
  </p>
  """^^rdf:HTML ;
  qudt:informativeReference "http://en.wikipedia.org/wiki/Enumeration"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Enumerated Value" ;
  rdfs:subClassOf dtype:EnumeratedValue ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:EnumeratedValue-abbreviation ;
  sh:property qudt:EnumeratedValue-altSymbol ;
  sh:property qudt:EnumeratedValue-description ;
  sh:property qudt:EnumeratedValue-symbol .

qudt:Enumeration
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>An <em>Enumeration</em> is a set of literals from which a single value is selected. 
  Each literal can have a tag as an integer within a standard encoding appropriate to the range of integer values. 
  Consistency of enumeration types will allow them, and the enumerated values, to be referred to unambiguously either through symbolic name or encoding. 
  Enumerated values are also controlled vocabularies and as such need to be standardized. 
  Without this consistency enumeration literals can be stated differently and result in  data conflicts and misinterpretations.
  </p>
  <p>The tags are a set of positive whole numbers, not necessarily contiguous and having no numerical significance, each corresponding to the associated literal identifier. 
  An order attribute can also be given on the enumeration elements. An enumeration can itself be a member of an enumeration. This allows enumerations to be enumerated in a selection. 
  Enumerations are also subclasses of <em>Scalar Datatype</em>. 
  This allows them to be used as the reference of a datatype specification.
  </p>
  """^^rdf:HTML ;
  qudt:dbpediaMatch "http://dbpedia.org/resource/Enumeration"^^xsd:anyURI ;
  qudt:informativeReference "http://en.wikipedia.org/wiki/Enumerated_type"^^xsd:anyURI ;
  qudt:informativeReference "http://en.wikipedia.org/wiki/Enumeration"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Enumeration" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:Enumeration-abbreviation ;
  sh:property qudt:Enumeration-default ;
  sh:property qudt:Enumeration-element .

qudt:Figure
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Figure" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:Figure-figureCaption ;
  sh:property qudt:Figure-figureLabel ;
  sh:property qudt:Figure-height ;
  sh:property qudt:Figure-image ;
  sh:property qudt:Figure-imageLocation ;
  sh:property qudt:Figure-landscape ;
  sh:property qudt:Figure-width .

qudt:IntervalScale
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>The interval type allows for the degree of difference between items, but not the ratio between them. 
  Examples include temperature with the Celsius scale, which has two defined points
   (the freezing and boiling point of water at specific conditions) and then separated into 100 intervals,
   date when measured from an arbitrary epoch (such as AD), percentage such as a percentage return on a stock,
   location in Cartesian coordinates, and direction measured in degrees from true or magnetic north. 
  </p>
  <p>Ratios are not meaningful since 20 °C cannot be said to be "twice as hot" as 10 °C, nor can multiplication/division be carried out between any two dates directly. 
  However, ratios of differences can be expressed; for example, one difference can be twice another. 
  Interval type variables are sometimes also called "scaled variables", but the formal mathematical term is an affine space (in this case an affine line).
  </p>
  <p>Characteristics: median, percentile &amp; Monotonic increasing (order (&lt;) &amp; totally ordered set.</p>
  """^^rdf:HTML ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Interval scale" ;
  rdfs:seeAlso qudt:NominalScale ;
  rdfs:seeAlso qudt:OrdinalScale ;
  rdfs:seeAlso qudt:RatioScale ;
  rdfs:subClassOf qudt:Scale .

qudt:LogarithmicUnit
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  Logarithmic units are abstract mathematical units that can be used to express any quantities
   (physical or mathematical) that are defined on a logarithmic scale, that is, as being proportional
   to the value of a logarithm function.
  Examples of logarithmic units include common units of information and entropy, such as the bit,
   and the byte, as well as units of relative signal strength magnitude such as the decibel.
  """^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Logarithmic Unit" ;
  rdfs:subClassOf qudt:DimensionlessUnit .

qudt:NIST_SP811_Comment
  a rdfs:Class, sh:NodeShape ;
  dcterms:description "National Institute of Standards and Technology (NIST) Special Publication 811 Comments on some quantities and their units" ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "NIST SP~811 Comment" ;
  rdfs:subClassOf qudt:Comment .

qudt:NominalScale
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  A nominal scale differentiates between items or subjects based only on their names or (meta-)categories and other qualitative classifications they belong to;
   thus dichotomous data involves the construction of classifications as well as the classification of items. 
  Discovery of an exception to a classification can be viewed as progress. 
  Numbers may be used to represent the variables but the numbers do not have numerical value or relationship:
   for example, a Globally unique identifier. 
  Examples of these classifications include gender, nationality, ethnicity, language, genre, style, biological species, and form. 
  In a university one could also use hall of affiliation as an example.
  """^^rdf:HTML ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Nominal scale" ;
  rdfs:seeAlso qudt:IntervalScale ;
  rdfs:seeAlso qudt:OrdinalScale ;
  rdfs:seeAlso qudt:RatioScale ;
  rdfs:subClassOf qudt:Scale .

qudt:NumericListShape
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:subClassOf rdf:List ;
  sh:property [
    sh:or qudt:NumericTypeUnion ;
    sh:path rdf:first ;
  ] ;
  sh:property [
    sh:or ( [
      sh:node ( ) ;
    ] [
      sh:node qudt:NumericListShape ;
    ] ) ;
    sh:path rdf:rest ;
  ] .

qudt:OrdinalScale
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>The ordinal type allows for rank order (1st, 2nd, 3rd, etc.) by which data can be sorted,
   but still does not allow for relative degree of difference between them. 
  Examples include, on one hand, dichotomous data with dichotomous (or dichotomized) values such as:
   'sick' vs. 'healthy' when measuring health, 'guilty' vs. 'innocent' when making judgments in courts,
   'wrong/false' vs. 'right/true' when measuring truth value, and, on the other hand, non-dichotomous data consisting of a spectrum of values, such as:
   'completely agree', 'mostly agree', 'mostly disagree', 'completely disagree' when measuring opinion.
  </p>"""^^rdf:HTML ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Ordinal scale" ;
  rdfs:seeAlso qudt:IntervalScale ;
  rdfs:seeAlso qudt:NominalScale ;
  rdfs:seeAlso qudt:RatioScale ;
  rdfs:subClassOf qudt:Scale ;
  sh:property qudt:OrdinalScale-order .

qudt:Organization
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Organization" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:Organization-url .

qudt:PhysicalConstant
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>Physical constant</em> is a physical quantity that is generally believed to be both universal in nature and constant in time. 
  It can be contrasted with a mathematical constant, which is a fixed numerical value but does not directly involve any physical measurement. 
  </p>
  <p>There are many physical constants in science, some of the most widely recognized being:
   the speed of light in vacuum c, Newton's gravitational constant G, Planck's constant h,
   the electric permittivity of free space ε0, and the elementary charge e.
  </p>
  </p>Physical constants can take many dimensional forms, or may be dimensionless depending on the system of quantities and units used.
  </p>"""^^rdf:HTML ;
  qudt:dbpediaMatch "http://dbpedia.org/resource/Physical_constant"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Physical Constant" ;
  rdfs:subClassOf qudt:Quantity ;
  sh:property qudt:PhysicalConstant-altSymbol ;
  sh:property qudt:PhysicalConstant-applicableSystem ;
  sh:property qudt:PhysicalConstant-applicableUnit ;
  sh:property qudt:PhysicalConstant-dbpediaMatch ;
  sh:property qudt:PhysicalConstant-exactConstant ;
  sh:property qudt:PhysicalConstant-hasDimensionVector ;
  sh:property qudt:PhysicalConstant-iec61360Code ;
  sh:property qudt:PhysicalConstant-isoNormativeReference ;
  sh:property qudt:PhysicalConstant-latexDefinition ;
  sh:property qudt:PhysicalConstant-latexSymbol ;
  sh:property qudt:PhysicalConstant-mathMLdefinition ;
  sh:property qudt:PhysicalConstant-normativeReference ;
  sh:property qudt:PhysicalConstant-siExactMatch ;
  sh:property qudt:PhysicalConstant-symbol ;
  sh:property qudt:PhysicalConstant-ucumCode .

qudt:PlaneAngleUnit
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Plane Angle Unit" ;
  rdfs:subClassOf qudt:AngleUnit .

qudt:Prefix
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Prefix" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:Prefix-altSymbol ;
  sh:property qudt:Prefix-latexSymbol ;
  sh:property qudt:Prefix-prefixMultiplier ;
  sh:property qudt:Prefix-siExactMatch ;
  sh:property qudt:Prefix-symbol ;
  sh:property qudt:Prefix-ucumCode .

qudt:Quantifiable
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p><em>Quantifiable</em> is an aspect class that affords to an entity properties for being measurable,
   observable, or countable.
  </p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Quantifiable" ;
  rdfs:subClassOf qudt:Aspect ;
  sh:property qudt:Quantifiable-datatype ;
  sh:property qudt:Quantifiable-hasUnit ;
  sh:property qudt:Quantifiable-relativeStandardUncertainty ;
  sh:property qudt:Quantifiable-standardUncertainty ;
  sh:property qudt:Quantifiable-standardUncertaintySN ;
  sh:property qudt:Quantifiable-value ;
  sh:property qudt:Quantifiable-valueSN .

qudt:Quantity
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <b>Quantity</b> is the measurement of an observable property of a particular object, event, or physical system. 
  A quantity is always associated with the context of measurement (i.e. the thing measured, the measured value, the accuracy of measurement, etc.) whereas the 
  underlying <b>quantity kind</b> is independent of any particular measurement. Thus, length is a quantity kind while the height of a rocket is a specific 
  quantity of length; its magnitude that may be expressed in meters, feet, inches, etc. Examples of physical quantities include physical constants, such as 
  the speed of light in a vacuum, Planck's constant, the electric permittivity of free space, and the fine structure constant. </p>
<p>In other words, quantities are quantifiable aspects of the world, such as the duration of a movie, the distance between two points, 
velocity of a car, the pressure of the atmosphere, and a person's weight; and units are used to describe their numerical measure.</p> 
<p>Many <b>quantity kinds</b> are related to each other by various physical laws, and as a result, the associated units of some quantity 
kinds can be expressed as products (or ratios) of powers of other quantity kinds (e.g., momentum is mass times velocity and velocity is defined as distance 
divided by time). In this way, some quantities can be calculated from other measured quantities using their associations to the quantity kinds in these 
expressions. These quantity kind relationships are also discussed in dimensional analysis. Those that cannot be so expressed can be regarded 
as "fundamental" in this sense.</p>
<p>A quantity is distinguished from a "quantity kind" in that the former carries a value and the latter is a type specifier.
</p>"""^^rdf:HTML ;
  qudt:dbpediaMatch "http://dbpedia.org/resource/Quantity"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Quantity" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf qudt:Quantifiable ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:Quantity-hasQuantityKind ;
  sh:property qudt:Quantity-isDeltaQuantity ;
  sh:property qudt:Quantity-quantityValue .

qudt:QuantityKind
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>Quantity Kind</em> is any observable property that can be  measured and quantified numerically. 
  Familiar examples include physical properties such as length, mass, time, force, energy, power, electric charge, etc. 
  Less familiar examples include currency, interest rate, price to earning ratio, and information capacity.
  </p>"""^^rdf:HTML ;
  qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=112-01-04"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Quantity Kind" ;
  rdfs:subClassOf qudt:AbstractQuantityKind ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:QuantityKind-applicableCGSUnit ;
  sh:property qudt:QuantityKind-applicableISOUnit ;
  sh:property qudt:QuantityKind-applicableImperialUnit ;
  sh:property qudt:QuantityKind-applicableSIUnit ;
  sh:property qudt:QuantityKind-applicableUSCustomaryUnit ;
  sh:property qudt:QuantityKind-applicableUnit ;
  sh:property qudt:QuantityKind-baseCGSUnitDimensions ;
  sh:property qudt:QuantityKind-baseISOUnitDimensions ;
  sh:property qudt:QuantityKind-baseImperialUnitDimensions ;
  sh:property qudt:QuantityKind-baseSIUnitDimensions ;
  sh:property qudt:QuantityKind-baseUSCustomaryUnitDimensions ;
  sh:property qudt:QuantityKind-belongsToSystemOfQuantities ;
  sh:property qudt:QuantityKind-dimensionVectorForSI ;
  sh:property qudt:QuantityKind-expression ;
  sh:property qudt:QuantityKind-hasDimensionVector ;
  sh:property qudt:QuantityKind-iec61360Code ;
  sh:property qudt:QuantityKind-latexDefinition ;
  sh:property qudt:QuantityKind-mathMLdefinition ;
  sh:property qudt:QuantityKind-qkdvDenominator ;
  sh:property qudt:QuantityKind-qkdvNumerator ;
  sh:property qudt:QuantityKind-siExactMatch .

qudt:QuantityKindDimensionVector
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
 $\\text{Quantity Kind Dimension Vector}$ describes the dimensionality of a quantity kind in the context of a system of units. 
 In the SI system of units, the dimensions of a quantity kind are expressed as a product of the basic
  physical dimensions mass ($M$), length ($L$), time ($T$) current ($I$), amount of substance ($N$),
   luminous intensity ($J$) and absolute temperature 
   ($\\theta$) as $dim \\, Q = L^{\\alpha} \\, M^{\\beta} \\, T^{\\gamma} \\, I ^{\\delta} \\, \\theta ^{\\epsilon} \\, N^{\\eta} \\, J ^{\\nu}$.


  The rational powers of the dimensional exponents, $\\alpha, \\, \\beta, \\, \\gamma, \\, \\delta, \\, \\epsilon, \\, \\eta, \\, \\nu$, are positive, negative, or zero.

  For example, the dimension of the physical quantity kind $\\it{speed}$ is $\\boxed{length/time}$, $L/T$ or $LT^{-1}$,
   and the dimension of the physical quantity kind force is $\\boxed{mass \\times acceleration}$ or $\\boxed{mass \\times (length/time)/time}$, $ML/T^2$ or $MLT^{-2}$ respectively.
 """^^qudt:LatexString ;
  qudt:informativeReference "http://en.wikipedia.org/wiki/Dimensional_analysis"^^xsd:anyURI ;
  qudt:informativeReference "http://web.mit.edu/2.25/www/pdf/DA_unified.pdf"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Quantity Kind Dimension Vector" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForAmountOfSubstance ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForElectricCurrent ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForLength ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForLuminousIntensity ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForMass ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForThermodynamicTemperature ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForTime ;
  sh:property qudt:QuantityKindDimensionVector-dimensionlessExponent ;
  sh:property qudt:QuantityKindDimensionVector-hasReferenceQuantityKind ;
  sh:property qudt:QuantityKindDimensionVector-latexDefinition ;
  sh:property qudt:QuantityKindDimensionVector-latexSymbol .

qudt:QuantityKindDimensionVector_CGS
  a rdfs:Class, sh:NodeShape ;
  dcterms:description "A <em>CGS Dimension Vector</em> is used to specify the dimensions for a C.G.S. quantity kind."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "CGS Dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector .

qudt:QuantityKindDimensionVector_CGS-EMU
  a rdfs:Class, sh:NodeShape ;
  dcterms:description "A <em>CGS EMU Dimension Vector</em> is used to specify the dimensions for EMU C.G.S. quantity kind."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "CGS EMU Dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS .

qudt:QuantityKindDimensionVector_CGS-ESU
  a rdfs:Class, sh:NodeShape ;
  dcterms:description "A <em>CGS ESU Dimension Vector</em> is used to specify the dimensions for ESU C.G.S. quantity kind."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "CGS ESU Dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS .

qudt:QuantityKindDimensionVector_CGS-GAUSS
  a rdfs:Class, sh:NodeShape ;
  dcterms:description "A <em>CGS GAUSS Dimension Vector</em> is used to specify the dimensions for Gaussioan C.G.S. quantity kind."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "CGS GAUSS Dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS .

qudt:QuantityKindDimensionVector_CGS-LH
  a rdfs:Class, sh:NodeShape ;
  dcterms:description "A <em>CGS LH Dimension Vector</em> is used to specify the dimensions for Lorentz-Heaviside C.G.S. quantity kind."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "CGS LH Dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS .

qudt:QuantityKindDimensionVector_ISO
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "ISO Dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector .

qudt:QuantityKindDimensionVector_Imperial
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Imperial dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector .

qudt:QuantityKindDimensionVector_SI
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Quantity Kind Dimension vector (SI)" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector .

qudt:QuantityType
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  A $\\textit{Quantity Type}$ is an enumeration of quantity kinds. 
  It specializes $\\boxed{dtype:EnumeratedValue}$ by constrinaing $\\boxed{dtype:value}$ to instances of $\\boxed{qudt:QuantityKind}$.
  """^^qudt:LatexString ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Quantity type" ;
  rdfs:subClassOf qudt:EnumeratedValue ;
  sh:property qudt:QuantityType-value .

qudt:QuantityValue
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>Quantity Value</em> 
  </p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Quantity value" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf qudt:Quantifiable ;
  rdfs:subClassOf qudt:Verifiable .

qudt:RatioScale
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>Ratio Scale</em> possesses a meaningful (unique and non-arbitrary) zero value. 
  Most measurement in the physical sciences and engineering is done on ratio scales. 
  Examples include mass, length, duration, plane angle, energy and electric charge.
  </p>
  <p>In contrast to interval scales, ratios are now meaningful because having a non-arbitrary zero point makes it meaningful to say,
   for example, that one object has "twice the length" of another (= is "twice as long"). 
  Very informally, many ratio scales can be described as specifying "how much" of something (i.e. an amount or magnitude) or "how many" (a count). 
  The Kelvin temperature scale is a ratio scale because it has a unique, non-arbitrary zero point called absolute zero.
  </p>"""^^rdf:HTML ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Ratio scale" ;
  rdfs:seeAlso qudt:IntervalScale ;
  rdfs:seeAlso qudt:NominalScale ;
  rdfs:seeAlso qudt:OrdinalScale ;
  rdfs:subClassOf qudt:Scale .

qudt:Rule
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Rule" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:Rule-example ;
  sh:property qudt:Rule-rationale ;
  sh:property qudt:Rule-ruleType .

qudt:RuleType
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Rule Type" ;
  rdfs:subClassOf qudt:EnumeratedValue .

qudt:ScalarDataItem
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>Data Item</em> holds a value that is compliant with a specified <em>Datatype</em>.
  </p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Scalar Data Item" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:ScalarDataItem-datatype ;
  sh:property qudt:ScalarDataItem-value .

qudt:ScalarDatatype
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  Scalar data types are those that have a single value. 
  The permissible values are defined over a domain that may be integers, float, character or boolean. 
  Often a scalar data type is referred to as a primitive data type.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Scalar Datatype" ;
  rdfs:subClassOf qudt:Datatype .

qudt:Scale
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>Scales (also called "scales of measurement" or "levels of measurement") are expressions that typically are based on scale types.
  </p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Scale" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:Scale-dataStructure ;
  sh:property qudt:Scale-permissibleMaths ;
  sh:property qudt:Scale-permissibleTransformation ;
  sh:property qudt:Scale-scaleType .

qudt:ScaleType
  a rdfs:Class, sh:NodeShape ;
  qudt:plainTextDescription """
  Scales, or scales of measurement (or categorization) provide ways of quantifying measurements, values and other enumerated values according to a normative frame of reference. 
  Four different types of scales are typically used. 
  These are interval, nominal, ordinal and ratio scales.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Scale type" ;
  rdfs:subClassOf qudt:EnumeratedValue ;
  sh:property qudt:ScaleType-dataStructure ;
  sh:property qudt:ScaleType-permissibleMaths ;
  sh:property qudt:ScaleType-permissibleTransformation .

qudt:SolidAngleUnit
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  The solid angle subtended by a surface S is defined as the surface area of a unit sphere covered by the surface S's projection onto the sphere. 
  A solid angle is related to the surface of a sphere in the same way an ordinary angle is related to the circumference of a circle. 
  Since the total surface area of the unit sphere is 4*pi, the measure of solid angle will always be between 0 and 4*pi.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Solid Angle Unit" ;
  rdfs:subClassOf qudt:AngleUnit .

qudt:Statement
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Statement" ;
  rdfs:subClassOf rdf:Statement .

qudt:Symbol
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Symbol" ;
  rdfs:subClassOf qudt:Concept .

qudt:SymmetricRelation
  a rdfs:Class, sh:NodeShape ;
  rdfs:comment "A `SymmetricRelation` is modeling construct used to define symmetric behavior for appropriate relations." ;
  rdfs:label "Symmetric relation" ;
  rdfs:subClassOf rdf:Property .

qudt:SystemOfQuantityKinds
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>System of Quantity Kinds</em> is a set of one or more quantity kinds together with a set of zero or more algebraic equations that define relationships between quantity kinds in the set. 
  In the physical sciences, the equations relating quantity kinds are typically physical laws and definitional relations, and constants of proportionality. 
  Examples include Newton's First Law of Motion, Coulomb's Law, and the definition of velocity as the instantaneous change in position.  
  In almost all cases, the system identifies a subset of base quantity kinds. 
  </p>
  <p>The base set is chosen so that all other quantity kinds of interest can be derived from the base quantity kinds and the algebraic equations. 
  If the unit system is explicitly associated with a quantity kind system, then the unit system must define at least one unit for each quantity kind.  
  From a scientific point of view, the division of quantities into base quantities and derived quantities is a matter of convention.
  </p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "System of Quantity Kinds" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:SystemOfQuantityKinds-baseDimensionEnumeration ;
  sh:property qudt:SystemOfQuantityKinds-hasBaseQuantityKind ;
  sh:property qudt:SystemOfQuantityKinds-hasQuantityKind ;
  sh:property qudt:SystemOfQuantityKinds-hasUnitSystem ;
  sh:property qudt:SystemOfQuantityKinds-systemDerivedQuantityKind .

qudt:SystemOfUnits
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  <p>A <em>System of Units</em> is a set of units which are chosen as the reference scales for some set of quantity kinds together with the definitions of each unit. 
  Units may be defined by experimental observation or by proportion to another unit not included in the system. 
  If the unit system is explicitly associated with a quantity kind system, then the unit system must define at least one unit for each quantity kind.
  </p>"""^^rdf:HTML ;
  qudt:informativeReference "http://dbpedia.org/resource/Category:Systems_of_units"^^xsd:anyURI ;
  qudt:informativeReference "http://www.ieeeghn.org/wiki/index.php/System_of_Measurement_Units"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "System of Units" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:SystemOfUnits-applicablePhysicalConstant ;
  sh:property qudt:SystemOfUnits-hasAllowedUnit ;
  sh:property qudt:SystemOfUnits-hasBaseUnit ;
  sh:property qudt:SystemOfUnits-hasCoherentUnit ;
  sh:property qudt:SystemOfUnits-hasDefinedUnit ;
  sh:property qudt:SystemOfUnits-hasDerivedCoherentUnit ;
  sh:property qudt:SystemOfUnits-hasDerivedUnit ;
  sh:property qudt:SystemOfUnits-hasUnit ;
  sh:property qudt:SystemOfUnits-prefix .

qudt:TransformType
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Transform type" ;
  rdfs:subClassOf qudt:EnumeratedValue ;
  skos:prefLabel "Transform type" .

qudt:Unit
  a rdfs:Class, sh:NodeShape ;
  dcterms:description """
  A unit of measure, or unit, is a particular quantity value that has been chosen as a scale for measuring other quantities the same kind (more generally of equivalent dimension). 
  For example, the meter is a quantity of length that has been rigorously defined and standardized by the BIPM (International Board of Weights and Measures). 
  Any measurement of the length can be expressed as a number multiplied by the unit meter. 
  More formally, the value of a physical quantity Q with respect to a unit (U) is expressed as the scalar multiple of a real number (n) and U, as  $Q = nU$.
  """^^qudt:LatexString ;
  qudt:informativeReference "http://dbpedia.org/resource/Category:Units_of_measure"^^xsd:anyURI ;
  qudt:informativeReference "http://www.allmeasures.com/Fullconversion.asp"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Unit" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:Unit-altSymbol ;
  sh:property qudt:Unit-applicableSystem ;
  sh:property qudt:Unit-conversionMultiplier ;
  sh:property qudt:Unit-conversionMultiplierSN ;
  sh:property qudt:Unit-conversionOffset ;
  sh:property qudt:Unit-conversionOffsetSN ;
  sh:property qudt:Unit-definedUnitOfSystem ;
  sh:property qudt:Unit-derivedCoherentUnitOfSystem ;
  sh:property qudt:Unit-derivedUnitOfSystem ;
  sh:property qudt:Unit-expression ;
  sh:property qudt:Unit-hasDimensionVector ;
  sh:property qudt:Unit-hasQuantityKind ;
  sh:property qudt:Unit-iec61360Code ;
  sh:property qudt:Unit-latexDefinition ;
  sh:property qudt:Unit-latexSymbol ;
  sh:property qudt:Unit-mathMLdefinition ;
  sh:property qudt:Unit-omUnit ;
  sh:property qudt:Unit-prefix ;
  sh:property qudt:Unit-qkdvDenominator ;
  sh:property qudt:Unit-qkdvNumerator ;
  sh:property qudt:Unit-siExactMatch ;
  sh:property qudt:Unit-siUnitsExpression ;
  sh:property qudt:Unit-symbol ;
  sh:property qudt:Unit-ucumCode ;
  sh:property qudt:Unit-udunitsCode ;
  sh:property qudt:Unit-uneceCommonCode ;
  sh:property qudt:Unit-unitOfSystem .

qudt:UserQuantityKind
  a rdfs:Class, sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "User Quantity Kind" ;
  rdfs:subClassOf qudt:AbstractQuantityKind ;
  sh:property qudt:UserQuantityKind-hasQuantityKind .

dcterms:abstract
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "abstract" .

dcterms:contributor
  a rdf:Property ;
  rdfs:label "contributor" .

dcterms:created
  a rdf:Property ;
  rdfs:label "created" .

dcterms:creator
  a rdf:Property ;
  rdfs:label "creator" .

dcterms:description
  a rdf:Property ;
  rdfs:label "description" .

dcterms:isReplacedBy
  a rdf:Property ;
  rdfs:label "is replaced by" .

dcterms:modified
  a rdf:Property ;
  rdfs:label "modified" .

dcterms:rights
  a rdf:Property ;
  rdfs:label "rights" .

dcterms:source
  a rdf:Property ;
  rdfs:label "source" .

dcterms:subject
  a rdf:Property ;
  rdfs:label "subject" .

dcterms:title
  a rdf:Property ;
  rdfs:label "title" .

prov:wasDerivedFrom
  a rdf:Property ;
  rdfs:label "was derived from" .

qudt:abbreviation
  a rdf:Property ;
  dcterms:description """
  <p>An abbreviation for a unit is a short ASCII string that is used in place of the full name for the unit in contexts where non-ASCII characters would be problematic,
   or where using the abbreviation will enhance readability. 
  When a power of abase unit needs to be expressed, such as squares this can be done using abbreviations rather than symbols. 
  For example, <em>sq ft</em> means <em>square foot</em>, and <em>cu ft</em> means <em>cubic foot</em>.
  </p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "abbreviation" .

qudt:acronym
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "acronym" .

qudt:altSymbol
  a rdf:Property ;
  dcterms:description "An alternative symbol"^^qudt:LatexString ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "alt symbol" ;
  rdfs:subPropertyOf dtype:literal .

qudt:applicableCGSUnit
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "applicable CGS unit" ;
  rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicableISOUnit
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "applicable ISO unit" ;
  rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicableImperialUnit
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "applicable Imperial unit" ;
  rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicablePhysicalConstant
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "applicable physical constant" .

qudt:applicablePlanckUnit
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "applicable Planck unit" ;
  rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicableSIUnit
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "applicable SI unit" ;
  rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicableSystem
  a rdf:Property ;
  dcterms:description """
  This property relates a unit of measure with a unit system that may or may not define the unit,
   but within which the unit is compatible.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/qudt> ;
  rdfs:label "applicable system" .

qudt:applicableUSCustomaryUnit
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "applicable US Customary unit" ;
  rdfs:subPropertyOf qudt:applicableUnit .

qudt:applicableUnit
  a rdf:Property ;
  dcterms:description """
  <p>See this page on the QUDT GitHub<a href="https://github.com/qudt/qudt-public-repo/wiki/Advanced-User-Guide#4-computing-applicable-units-for-a-quantitykind">Wiki</a>
   on how "qudt:applicableUnit" is computed from "qudt:hasQuantityKind" and then materialized.
  </p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "applicable unit" .

qudt:baseDimensionEnumeration
  a rdf:Property ;
  dcterms:description "This property associates a system of quantities with an enumeration that enumerates the base dimensions of the system in canonical order."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "base dimension enumeration" .

qudt:baseUnitOfSystem
  a rdf:Property ;
  dcterms:description """
  This property relates a unit of measure to the system of units in which it is defined as a base unit for the system. 
  The base units of a system are used to define the derived units of the system by expressing the derived units as products of the base units raised to a rational power.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "is base unit of system" ;
  rdfs:subPropertyOf qudt:definedUnitOfSystem .

qudt:belongsToSystemOfQuantities
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "belongs to system of quantities" .

qudt:categorizedAs
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "categorized as" .

qudt:coherentUnitSystem
  a rdf:Property ;
  dcterms:description """
  A system of units is coherent with respect to a system of quantities and equations if the system of units is chosen in such a way that the equations between numerical values have exactly the same form (including the numerical factors) as the corresponding equations between the quantities. 
  In such a coherent system, no numerical factor other than the number 1 ever occurs in the expressions for the derived units in terms of the base units. 
  For example, the $newton$ and the $joule$. 
  These two are, respectively, the force that causes one kilogram to be accelerated at 1 metre per (1) second per (1) second, and the work done by 1 newton acting over 1 metre. 
  Being coherent refers to this consistent use of 1. 
  In the old c.g.s. system , with its base units the centimetre and the gram, the corresponding coherent units were the dyne and the erg,
   respectively the force that causes 1 gram to be accelerated at 1 centimetre per (1) second per (1) second, and the work done by 1 dyne acting over 1 centimetre. 
  So $1\\,newton = 10^5 dyne$, $1 joule = 10^7 erg$, making each of the four compatible in a decimal sense within its respective other system, but not coherent therein.</p>
  """^^qudt:LatexString ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Coherence_(units_of_measurement)"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "coherent unit system" ;
  rdfs:subPropertyOf qudt:hasUnitSystem .

qudt:conversionMultiplier
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "conversion multiplier" .

qudt:conversionMultiplierSN
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "conversion multiplier scientific" .

qudt:conversionOffset
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "conversion offset" .

qudt:conversionOffsetSN
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "conversion offset scientific" .

qudt:currencyCode
  a rdf:Property ;
  dcterms:description "Alphabetic Currency Code as defined by ISO 4217. For example, the currency code for the US dollar is USD."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "currency code" .

qudt:currencyExponent
  a rdf:Property ;
  dcterms:description """
  The currency exponent indicates the number of decimal places between a major currency unit and its minor currency unit. 
  For example, the US dollar is the major currency unit of the United States, and the US cent is the minor currency unit. Since one cent is 1/100 of a dollar, the US dollar has a currency exponent of 2. 
  However, the Japanese Yen has no minor currency units, so the yen has a currency exponent of 0.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "currency exponent" .

qudt:currencyNumber
  a rdf:Property ;
  dcterms:description "Three-digit Currency Code as defined by ISO 4217. For example, the currency number for the US dollar is \"840\"."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "currency number" .

qudt:dataStructure
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "data structure" .

qudt:dbpediaMatch
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dbpedia match" .

qudt:default
  a rdf:Property ;
  dcterms:description "The default element in an enumeration"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "default" .

qudt:definedUnitOfSystem
  a rdf:Property ;
  dcterms:description "This property relates a unit of measure with the unit system that defines the unit."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "defined unit of system" ;
  rdfs:subPropertyOf qudt:isUnitOfSystem .

qudt:denominatorDimensionVector
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "denominator dimension vector" .

qudt:deprecated
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "deprecated" .

qudt:derivedCoherentUnitOfSystem
  a rdf:Property ;
  dcterms:description "This property relates a unit of measure to the unit system in which the unit is derived from the system's base units with a proportionality constant of one."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "is coherent derived unit of system" ;
  rdfs:subPropertyOf qudt:definedUnitOfSystem ;
  rdfs:subPropertyOf qudt:derivedUnitOfSystem .

qudt:derivedNonCoherentUnitOfSystem
  a rdf:Property ;
  dcterms:description """
  This property relates a unit of measure to the unit system in which the unit is derived from the system's
   base units without proportionality constant of one.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "is non-coherent derived unit of system" ;
  rdfs:subPropertyOf qudt:derivedUnitOfSystem .

qudt:derivedUnitOfSystem
  a rdf:Property ;
  dcterms:description """
  This property relates a unit of measure to the system of units in which it is defined as a derived unit. 
  That is, the derived unit is defined as a product of the base units for the system raised to some rational power.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "is derived unit of system" ;
  rdfs:subPropertyOf qudt:isUnitOfSystem .

qudt:dimensionExponent
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dimension exponent" .

qudt:dimensionExponentForAmountOfSubstance
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for amount of substance" .

qudt:dimensionExponentForElectricCurrent
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for electric current" .

qudt:dimensionExponentForLength
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for length" .

qudt:dimensionExponentForLuminousIntensity
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for luminous intensity" .

qudt:dimensionExponentForMass
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for mass" .

qudt:dimensionExponentForThermodynamicTemperature
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for thermodynamic temperature" .

qudt:dimensionExponentForTime
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for time" .

qudt:dimensionInverse
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dimension inverse" .

qudt:dimensionVectorForSI
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dimension vector for SI" .

qudt:dimensionlessExponent
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dimensionless exponent" .

qudt:element
  a rdf:Property ;
  dcterms:description "An element of an enumeration"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "element" .

qudt:exactConstant
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "exact constant" .

qudt:exactMatch
  a qudt:SymmetricRelation, rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "exact match" .

qudt:example
  a rdf:Property ;
  dcterms:description """
  The 'qudt:example' property is used to annotate an instance of a class with a reference to a concept that is an example. 
  The type of this property is 'rdf:Property'. 
  This allows both scalar and object ranges.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "example" .

qudt:expression
  a rdf:Property ;
  dcterms:description """
  An 'expression' is a finite combination of symbols that are well-formed according to rules that apply to units of measure, quantity kinds and their dimensions.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "expression" .

qudt:fieldCode
  a rdf:Property ;
  qudt:plainTextDescription """
  A field code is a generic property for representing unique codes that make up other identifers. 
  For example each QuantityKind class caries a domain code as its field code.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "field code" .

qudt:figure
  a rdf:Property ;
  dcterms:description "Provides a link to an image."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "figure" .

qudt:figureCaption
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "figure caption" .

qudt:figureLabel
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "figure label" .

qudt:guidance
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "guidance" .

qudt:hasAllowedUnit
  a rdf:Property ;
  dcterms:description """
  This property relates a unit system with a unit of measure that is not defined by or part of the system,
   but is allowed for use within the system.
   An allowed unit must be convertible to some dimensionally eqiuvalent unit that is defined by the system.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "allowed unit" ;
  rdfs:subPropertyOf qudt:hasUnit .

qudt:hasBaseQuantityKind
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has base quantity kind" ;
  rdfs:subPropertyOf qudt:hasQuantityKind .

qudt:hasBaseUnit
  a rdf:Property ;
  dcterms:description """
  This property relates a system of units to a base unit defined within the system.
  The base units of a system are used to define the derived units of the system by expressing
   the derived units as products of the base units raised to a rational power.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "base unit" ;
  rdfs:subPropertyOf qudt:hasCoherentUnit .

qudt:hasCoherentUnit
  a rdf:Property ;
  dcterms:description """
  A coherent unit of measurement for a unit system is a defined unit that may be expressed as a product of powers
   of the system's base units with the proportionality factor of one.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "coherent unit" ;
  rdfs:subPropertyOf qudt:hasDefinedUnit .

qudt:hasDefinedUnit
  a rdf:Property ;
  dcterms:description "This property relates a unit system with a unit of measure that is defined by the system."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "defined unit" ;
  rdfs:subPropertyOf qudt:hasUnit .

qudt:hasDenominatorPart
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has quantity kind dimension vector denominator part" .

qudt:hasDerivedCoherentUnit
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "derived coherent unit" ;
  rdfs:subPropertyOf qudt:hasCoherentUnit ;
  rdfs:subPropertyOf qudt:hasDerivedUnit .

qudt:hasDerivedNonCoherentUnit
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has coherent derived unit" ;
  rdfs:subPropertyOf qudt:hasDerivedUnit .

qudt:hasDerivedUnit
  a rdf:Property ;
  dcterms:description """
  This property relates a system of units to a unit of measure that is defined within the system in terms
   of the base units for the system. 
  That is, the derived unit is defined as a product of the base units for the system raised to some rational power.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "derived unit" .

qudt:hasDimension
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has dimension" .

qudt:hasDimensionExpression
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "dimension expression" .

qudt:hasDimensionVector
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has dimension vector" .

qudt:hasNumeratorPart
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has numerator part" .

qudt:hasPrefixUnit
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "prefix unit" ;
  rdfs:subPropertyOf qudt:hasDefinedUnit .

qudt:hasQuantity
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has quantity" .

qudt:hasQuantityKind
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has quantity kind" .

qudt:hasReferenceQuantityKind
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has reference quantity kind" .

qudt:hasRule
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has rule" .

qudt:hasUnit
  a rdf:Property ;
  dcterms:description """
  <p>This property relates a system of units with a unit of measure that is either:
  </p>
  <dd>a) defined by the system,</dd>
  <dd>b) accepted for use by the system and is convertible to a unit of equivalent dimension that is defined by the system,</dd>
  <dd>c) a reference to the unit of measure of a quantity (variable or constant) of interest.
  <p>Systems of units may distinguish between base and derived units.
  Base units are the units which measure the base quantities for the corresponding system of quantities. 
  The base units are used to define units for all other quantities as products of powers of the base units. 
  Such units are called derived units for the system. 
  </p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has unit" .

qudt:hasUnitSystem
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has unit system" .

qudt:hasVocabulary
  a rdf:Property ;
  qudt:plainTextDescription "Used to relate a class to one or more graphs where vocabularies for the class are defined." ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "has vocabulary" .

qudt:height
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "height" .

qudt:id
  a rdf:Property ;
  dcterms:description """
  <p>The "qudt:id" is an identifier string that uniquely identifies a QUDT concept. 
  The identifier is constructed using a prefix. 
  For example, units are coded using the pattern: "UCCCENNNN", where "CCC" is a numeric code or a category
   and "NNNN" is a digit string for a member element of that category. 
  </p>
  <p>For scaled units there may be an addition field that has the format "QNN" where "NN" is a digit string representing
   an exponent power, and "Q" is a qualifier that indicates with the code "P" that the power is a positive decimal exponent,
   or the code "N" for a negative decimal exponent, or the code "B" for binary positive exponents.
  </p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "qudt id" .

qudt:iec61360Code
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "iec-61360 code" .

qudt:image
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "image" .

qudt:imageLocation
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "image location" .

qudt:informativeReference
  a rdf:Property ;
  dcterms:description "Provides a way to reference a source that provided useful but non-normative information." ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "informative reference" .

qudt:isDeltaQuantity
  a rdf:Property ;
  dcterms:description """
  This property is used to identify a Quantity instance that is a measure of a change, or interval, of some property,
   rather than a measure of its absolute value. 
  This is important for measurements such as temperature differences where the conversion among units would be calculated differently because of offsets.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "is Delta Quantity" .

qudt:isDimensionInSystem
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "is dimension in system" .

qudt:isMetricUnit
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "is metric unit" .

qudt:isUnitOfSystem
  a rdf:Property ;
  dcterms:description """
  This property relates a unit of measure with a system of units that either a) defines the unit
   or b) allows the unit to be used within the system.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "is unit of system" .

qudt:isoNormativeReference
  a rdf:Property ;
  dcterms:description "Provides a way to reference the ISO unit definition." ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "normative reference (ISO)" ;
  rdfs:subPropertyOf qudt:normativeReference .

qudt:landscape
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "landscape" .

qudt:latexDefinition
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "latex definition" .

qudt:latexSymbol
  a rdf:Property ;
  dcterms:description """
  The symbol is a glyph that is used to represent some concept, typically a unit or a quantity, in a compact form. 
  For example, the symbol for an Ohm is $ohm$. 
  This contrasts with 'unit:abbreviation', which gives a short alphanumeric abbreviation for the unit, 'ohm' for Ohm.
  """^^qudt:LatexString ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "latex symbol" .

qudt:mathDefinition
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "math definition" .

qudt:mathMLdefinition
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "mathML definition" ;
  rdfs:subPropertyOf qudt:mathDefinition .

qudt:normativeReference
  a rdf:Property ;
  dcterms:description "Provides a way to reference information that is an authorative source providing a standard definition" ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "normative reference" .

qudt:numeratorDimensionVector
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "numerator dimension vector" .

qudt:numericValue
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "numeric value" .

qudt:omUnit
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "om unit" .

qudt:onlineReference
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "online reference" .

qudt:order
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "order" .

qudt:outOfScope
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "out of scope" .

qudt:permissibleMaths
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "permissible maths" .

qudt:permissibleTransformation
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "permissible transformation" .

qudt:plainTextDescription
  a rdf:Property ;
  dcterms:description "A plain text description is used to provide a description with only simple ASCII characters for cases where LaTeX , HTML or other markup would not be appropriate." ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "description (plain text)" .

qudt:prefix
  a rdf:Property ;
  dcterms:description "Associates a unit with the appropriate prefix, if any." ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "prefix" .

qudt:prefixMultiplier
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "prefix multiplier" .

qudt:qkdvDenominator
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "denominator dimension vector" .

qudt:qkdvNumerator
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "numerator dimension vector" .

qudt:quantity
  a rdf:Property ;
  dcterms:description "a property to relate an observable thing with a quantity (qud:Quantity)" ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "quantity" .

qudt:quantityValue
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "quantity value" .

qudt:rationale
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "rationale" .

qudt:reference
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "reference" .

qudt:referenceUnit
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "reference unit" .

qudt:relativeStandardUncertainty
  a rdf:Property ;
  dcterms:description "The relative standard uncertainty of a measurement is the (absolute) standard uncertainty divided by the magnitude of the exact value." ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "relative standard uncertainty" .

qudt:relevantQuantityKind
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "relevant quantity kind" .

qudt:relevantUnit
  a rdf:Property ;
  dcterms:description "This property is used for qudt:Discipline instances to identify the Unit instances that are used within a given discipline." ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Relevant Unit" .

qudt:ruleType
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "rule type" .

qudt:scaleType
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "scale type" .

qudt:siExactMatch
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Individual from SI Reference Point" .

qudt:siUnitsExpression
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "si units expression" .

qudt:standardUncertainty
  a rdf:Property ;
  dcterms:description "The standard uncertainty of a quantity is the estimated standard deviation of the mean taken from a series of measurements." ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "standard uncertainty" .

qudt:standardUncertaintySN
  a rdf:Property ;
  dcterms:description "The standard uncertainty of a quantity is the estimated standard deviation of the mean taken from a series of measurements." ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "standard uncertainty scientific" .

qudt:symbol
  a rdf:Property ;
  dcterms:description "The symbol is a glyph that is used to represent some concept, typically a unit or a quantity, in a compact form. For example, the symbol for an Ohm is $ohm$. This contrasts with 'unit:abbreviation', which gives a short alphanumeric abbreviation for the unit, 'ohm' for Ohm."^^qudt:LatexString ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "symbol" ;
  rdfs:subPropertyOf dtype:literal .

qudt:systemDefinition
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "system definition" .

qudt:systemDerivedQuantityKind
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "system derived quantity kind" ;
  rdfs:subPropertyOf qudt:hasQuantityKind .

qudt:systemDimension
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "system dimension" .

qudt:ucumCode
  a rdf:Property ;
  dcterms:description "<p><em>ucumCode</em> associates a QUDT unit with its UCUM code (case-sensitive). </p><p>In SHACL the values are derived from specific ucum properties using 'sh:values'.</p>"^^rdf:HTML ;
  dcterms:source "https://ucum.org/ucum.html"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "ucum code" ;
  rdfs:seeAlso <https://ucum.org/ucum.html> ;
  rdfs:subPropertyOf skos:notation .

qudt:udunitsCode
  a rdf:Property ;
  dcterms:description "The UDUNITS package supports units of physical quantities. Its C library provides for arithmetic manipulation of units and for conversion of numeric values between compatible units. The package contains an extensive unit database, which is in XML format and user-extendable. The package also contains a command-line utility for investigating units and converting values."^^rdf:HTML ;
  dcterms:source "https://www.unidata.ucar.edu/software/udunits/"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "udunits code" .

qudt:uneceCommonCode
  a rdf:Property ;
  dcterms:description "The UN/CEFACT Recommendation 20 provides three character alphabetic and alphanumeric codes for representing units of measurement for length, area, volume/capacity, mass (weight), time, and other quantities used in international trade. The codes are intended for use in manual and/or automated systems for the exchange of information between participants in international trade."^^rdf:HTML ;
  dcterms:source "https://service.unece.org/trade/uncefact/vocabulary/rec20/"^^xsd:anyURI ;
  dcterms:source "https://unece.org/trade/documents/2021/06/uncefact-rec20-0"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "unece common code" .

qudt:unitFor
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "unit for" .

qudt:url
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "url" .

qudt:value
  a rdf:Property ;
  dcterms:description "A property to relate an observable thing with a value expressed as a decimal"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "value" .

qudt:valueQuantity
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "value for quantity" .

qudt:valueSN
  a rdf:Property ;
  dcterms:description "A property to relate an observable thing with a value expressed in scientific notation"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "value scientific" .

qudt:vectorMagnitude
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "vector magnitude" .

qudt:width
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "width" .

voag:supersededBy
  a rdf:Property ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "superseded by" .

<http://www.linkedmodel.org/schema/dtype>
  vaem:namespace "http://www.linkedmodel.org/schema/dtype#"^^xsd:anyURI ;
  vaem:namespacePrefix "dtype" .

qudt:AbstractQuantityKind-altSymbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:path qudt:altSymbol .

qudt:AbstractQuantityKind-broader
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKind ;
  sh:path skos:broader .

qudt:AbstractQuantityKind-latexSymbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype qudt:LatexString ;
  sh:minCount 0 ;
  sh:path qudt:latexSymbol .

qudt:AbstractQuantityKind-symbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:minCount 0 ;
  sh:path qudt:symbol .

qudt:Aspect
  a qudt:AspectClass, sh:NodeShape ;
  dcterms:description "An aspect is an abstract type class that defines properties that can be reused."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "QUDT Aspect" ;
  rdfs:subClassOf rdfs:Resource .

qudt:BaseDimensionMagnitude-hasBaseQuantityKind
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKind ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:hasBaseQuantityKind .

qudt:BaseDimensionMagnitude-vectorMagnitude
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:float ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:vectorMagnitude .

qudt:Citation-description
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path dcterms:description .

qudt:Citation-url
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:anyURI ;
  sh:maxCount 1 ;
  sh:path qudt:url .

qudt:Comment-description
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path dcterms:description .

qudt:Comment-rationale
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype rdf:HTML ;
  sh:minCount 0 ;
  sh:path qudt:rationale .

qudt:Concept-abbreviation
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:abbreviation .

qudt:Concept-code
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:path dtype:code .

qudt:Concept-deprecated
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:boolean ;
  sh:maxCount 1 ;
  sh:path qudt:deprecated .

qudt:Concept-description
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:path dcterms:description .

qudt:Concept-exactMatch
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Concept ;
  sh:path qudt:exactMatch .

qudt:Concept-guidance
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype rdf:HTML ;
  sh:path qudt:guidance .

qudt:Concept-hasRule
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Rule ;
  sh:path qudt:hasRule .

qudt:Concept-id
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:id .

qudt:Concept-isReplacedBy
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path dcterms:isReplacedBy .

qudt:Concept-plainTextDescription
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:path qudt:plainTextDescription .

qudt:ConstantValue-exactConstant
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:boolean ;
  sh:maxCount 1 ;
  sh:path qudt:exactConstant .

qudt:CurrencyUnit-currencyCode
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:path qudt:currencyCode .

qudt:CurrencyUnit-currencyExponent
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:integer ;
  sh:path qudt:currencyExponent .

qudt:CurrencyUnit-currencyNumber
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:path qudt:currencyNumber ;
  sh:pattern "^\\d{3}$" .

qudt:EnumeratedQuantity-enumeratedValue
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:EnumeratedValue ;
  sh:maxCount 1 ;
  sh:path qudt:enumeratedValue .

qudt:EnumeratedQuantity-enumeration
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Enumeration ;
  sh:maxCount 1 ;
  sh:path qudt:enumeration .

qudt:EnumeratedValue-abbreviation
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:abbreviation .

qudt:EnumeratedValue-altSymbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:path qudt:altSymbol .

qudt:EnumeratedValue-description
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path dcterms:description .

qudt:EnumeratedValue-symbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path qudt:symbol .

qudt:Enumeration-abbreviation
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:abbreviation .

qudt:Enumeration-default
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:EnumeratedValue ;
  sh:maxCount 1 ;
  sh:path qudt:default .

qudt:Enumeration-element
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:EnumeratedValue ;
  sh:minCount 1 ;
  sh:path qudt:element .

qudt:Figure-figureCaption
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:figureCaption .

qudt:Figure-figureLabel
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:figureLabel .

qudt:Figure-height
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:height .

qudt:Figure-image
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:anyURI ;
  sh:maxCount 1 ;
  sh:path qudt:image .

qudt:Figure-imageLocation
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:anyURI ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:imageLocation .

qudt:Figure-landscape
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:boolean ;
  sh:maxCount 1 ;
  sh:path qudt:landscape .

qudt:Figure-width
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:width .

qudt:InformativeReferencePropertyShape
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:or ( [
    sh:datatype xsd:anyURI ;
  ] [
    sh:class qudt:Citation ;
  ] ) ;
  sh:path qudt:informativeReference .

qudt:LatexString
  a rdfs:Datatype, sh:NodeShape ;
  dcterms:description "A type of string in which some characters may be wrapped with '$' and '$ characters for LaTeX rendering." ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Latex String" ;
  rdfs:subClassOf xsd:string .

qudt:NumericTypeUnion
  a rdf:List ;
  dcterms:description """
  An rdf:List that can be used in property constraints as value for sh:or to indicate that all values
   of a property must be a string, an integer, a float, a double or a decimal.
  """ ;
  rdf:first [
    sh:datatype xsd:string ;
  ] ;
  rdf:rest ( [
    sh:datatype xsd:nonNegativeInteger ;
  ] [
    sh:datatype xsd:positiveInteger ;
  ] [
    sh:datatype xsd:integer ;
  ] [
    sh:datatype xsd:int ;
  ] [
    sh:datatype xsd:float ;
  ] [
    sh:datatype xsd:double ;
  ] [
    sh:datatype xsd:decimal ;
  ] ) ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Numeric Type Union" .

qudt:OrderedType-literal
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path dtype:literal .

qudt:OrdinalScale-order
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:nonNegativeInteger ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:order .

qudt:Organization-url
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:anyURI ;
  sh:minCount 0 ;
  sh:path qudt:url .

qudt:PhysicalConstant-altSymbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:path qudt:altSymbol .

qudt:PhysicalConstant-applicableSystem
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:SystemOfUnits ;
  sh:path qudt:applicableSystem .

qudt:PhysicalConstant-applicableUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:path qudt:applicableUnit .

qudt:PhysicalConstant-dbpediaMatch
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:anyURI ;
  sh:minCount 0 ;
  sh:path qudt:dbpediaMatch .

qudt:PhysicalConstant-exactConstant
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:boolean ;
  sh:path qudt:exactConstant .

qudt:PhysicalConstant-hasDimensionVector
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKindDimensionVector ;
  sh:path qudt:hasDimensionVector .

qudt:PhysicalConstant-iec61360Code
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
  sh:path qudt:iec61360Code .

qudt:PhysicalConstant-isoNormativeReference
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:anyURI ;
  sh:path qudt:isoNormativeReference .

qudt:PhysicalConstant-latexDefinition
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype qudt:LatexString ;
  sh:maxCount 1 ;
  sh:path qudt:latexDefinition .

qudt:PhysicalConstant-latexSymbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype qudt:LatexString ;
  sh:minCount 0 ;
  sh:path qudt:latexSymbol .

qudt:PhysicalConstant-mathMLdefinition
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:mathMLdefinition .

qudt:PhysicalConstant-normativeReference
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:anyURI ;
  sh:path qudt:normativeReference .

qudt:PhysicalConstant-siExactMatch
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path qudt:siExactMatch .

qudt:PhysicalConstant-symbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path qudt:symbol .

qudt:PhysicalConstant-ucumCode
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype qudt:UCUMcs ;
  sh:path qudt:ucumCode .

qudt:Prefix-altSymbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:path qudt:altSymbol .

qudt:Prefix-latexSymbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype qudt:LatexString ;
  sh:minCount 0 ;
  sh:path qudt:latexSymbol .

qudt:Prefix-prefixMultiplier
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:double ;
  sh:maxCount 1 ;
  sh:path qudt:prefixMultiplier .

qudt:Prefix-siExactMatch
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path qudt:siExactMatch .

qudt:Prefix-symbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:minCount 0 ;
  sh:path qudt:symbol .

qudt:Prefix-ucumCode
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:path qudt:ucumCode ;
  sh:pattern "[\\x21,\\x23-\\x27,\\x2a,\\x2c,\\x30-\\x3c,\\x3e-\\x5a,\\x5c,\\x5e-\\x7a,\\x7c,\\x7e]+" .

qudt:Quantifiable-datatype
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:or ( [
    sh:class qudt:Datatype ;
  ] [
    sh:class qudt:EnumeratedValue ;
  ] ) ;
  sh:path qudt:datatype .

qudt:Quantifiable-hasUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:maxCount 1 ;
  sh:path qudt:hasUnit .

qudt:Quantifiable-relativeStandardUncertainty
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:double ;
  sh:maxCount 1 ;
  sh:path qudt:relativeStandardUncertainty .

qudt:Quantifiable-standardUncertainty
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:decimal ;
  sh:maxCount 1 ;
  sh:path qudt:standardUncertainty .

qudt:Quantifiable-standardUncertaintySN
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:double ;
  sh:maxCount 1 ;
  sh:path qudt:standardUncertaintySN .

qudt:Quantifiable-value
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:node ( [
    sh:or qudt:NumericTypeUnion ;
  ] [
    sh:property [
      sh:class qudt:DataItem ;
      sh:path qudt:value ;
    ] ;
  ] [
    sh:property [
      sh:class qudt:EnumeratedValue ;
      sh:path qudt:value ;
    ] ;
  ] ) ;
  sh:path qudt:value .

qudt:Quantifiable-valueSN
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path qudt:valueSN .

qudt:Quantity-hasQuantityKind
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKind ;
  sh:minCount 0 ;
  sh:path qudt:hasQuantityKind .

qudt:Quantity-isDeltaQuantity
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:boolean ;
  sh:path qudt:isDeltaQuantity .

qudt:Quantity-quantityValue
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityValue ;
  sh:path qudt:quantityValue .

qudt:QuantityKind-applicableCGSUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:minCount 0 ;
  sh:path qudt:applicableCGSUnit .

qudt:QuantityKind-applicableISOUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:minCount 0 ;
  sh:path qudt:applicableISOUnit .

qudt:QuantityKind-applicableImperialUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:minCount 0 ;
  sh:path qudt:applicableImperialUnit .

qudt:QuantityKind-applicableSIUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:minCount 0 ;
  sh:path qudt:applicableSIUnit .

qudt:QuantityKind-applicableUSCustomaryUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:minCount 0 ;
  sh:path qudt:applicableUSCustomaryUnit .

qudt:QuantityKind-applicableUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:minCount 0 ;
  sh:path qudt:applicableUnit .

qudt:QuantityKind-baseCGSUnitDimensions
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path qudt:baseCGSUnitDimensions .

qudt:QuantityKind-baseISOUnitDimensions
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path qudt:baseISOUnitDimensions .

qudt:QuantityKind-baseImperialUnitDimensions
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path qudt:baseImperialUnitDimensions .

qudt:QuantityKind-baseSIUnitDimensions
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path qudt:baseSIUnitDimensions .

qudt:QuantityKind-baseUSCustomaryUnitDimensions
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path qudt:baseUSCustomaryUnitDimensions .

qudt:QuantityKind-belongsToSystemOfQuantities
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:SystemOfQuantityKinds ;
  sh:path qudt:belongsToSystemOfQuantities .

qudt:QuantityKind-dimensionVectorForSI
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKindDimensionVector_SI ;
  sh:maxCount 1 ;
  sh:path qudt:dimensionVectorForSI .

qudt:QuantityKind-expression
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:minCount 0 ;
  sh:path qudt:expression .

qudt:QuantityKind-hasDimensionVector
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKindDimensionVector ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:hasDimensionVector ;
  sh:severity sh:Info .

qudt:QuantityKind-iec61360Code
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:path qudt:iec61360Code .

qudt:QuantityKind-latexDefinition
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype qudt:LatexString ;
  sh:maxCount 1 ;
  sh:path qudt:latexDefinition .

qudt:QuantityKind-mathMLdefinition
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:mathMLdefinition .

qudt:QuantityKind-qkdvDenominator
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKindDimensionVector ;
  sh:maxCount 1 ;
  sh:path qudt:qkdvDenominator .

qudt:QuantityKind-qkdvNumerator
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKindDimensionVector ;
  sh:maxCount 1 ;
  sh:path qudt:qkdvNumerator .

qudt:QuantityKind-siExactMatch
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path qudt:siExactMatch .

qudt:QuantityKindDimensionVector-dimensionExponentForAmountOfSubstance
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:dimensionExponentForAmountOfSubstance .

qudt:QuantityKindDimensionVector-dimensionExponentForElectricCurrent
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:integer ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:dimensionExponentForElectricCurrent .

qudt:QuantityKindDimensionVector-dimensionExponentForLength
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:dimensionExponentForLength .

qudt:QuantityKindDimensionVector-dimensionExponentForLuminousIntensity
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:dimensionExponentForLuminousIntensity .

qudt:QuantityKindDimensionVector-dimensionExponentForMass
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:dimensionExponentForMass .

qudt:QuantityKindDimensionVector-dimensionExponentForThermodynamicTemperature
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:dimensionExponentForThermodynamicTemperature .

qudt:QuantityKindDimensionVector-dimensionExponentForTime
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:dimensionExponentForTime .

qudt:QuantityKindDimensionVector-dimensionlessExponent
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:dimensionlessExponent .

qudt:QuantityKindDimensionVector-hasReferenceQuantityKind
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKind ;
  sh:path qudt:hasReferenceQuantityKind .

qudt:QuantityKindDimensionVector-latexDefinition
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype qudt:LatexString ;
  sh:maxCount 1 ;
  sh:path qudt:latexDefinition .

qudt:QuantityKindDimensionVector-latexSymbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype qudt:LatexString ;
  sh:minCount 0 ;
  sh:path qudt:latexSymbol .

qudt:QuantityType-value
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKind ;
  sh:path dtype:value .

qudt:Rule-example
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:minCount 0 ;
  sh:path qudt:example .

qudt:Rule-rationale
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype rdf:HTML ;
  sh:minCount 0 ;
  sh:path qudt:rationale .

qudt:Rule-ruleType
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:RuleType ;
  sh:path qudt:ruleType .

qudt:ScalarDataItem-datatype
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:ScalarDatatype ;
  sh:maxCount 1 ;
  sh:path qudt:datatype .

qudt:ScalarDataItem-value
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qydt> ;
  sh:maxCount 1 ;
  sh:or ( [
    sh:class qudt:QuantityValue ;
  ] [
    sh:or qudt:NumericTypeUnion ;
  ] ) ;
  sh:path qudt:value .

qudt:Scale-dataStructure
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:dataStructure .

qudt:Scale-permissibleMaths
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:MathsFunctionType ;
  sh:path qudt:permissibleMaths .

qudt:Scale-permissibleTransformation
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:TransformType ;
  sh:path qudt:permissibleTransformation .

qudt:Scale-scaleType
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:ScaleType ;
  sh:maxCount 1 ;
  sh:path qudt:scaleType .

qudt:ScaleType-dataStructure
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:dataStructure .

qudt:ScaleType-permissibleMaths
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:MathsFunctionType ;
  sh:path qudt:permissibleMaths .

qudt:ScaleType-permissibleTransformation
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:TransformType ;
  sh:path qudt:permissibleTransformation .

qudt:SystemOfQuantityKinds-baseDimensionEnumeration
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Enumeration ;
  sh:maxCount 1 ;
  sh:path qudt:baseDimensionEnumeration .

qudt:SystemOfQuantityKinds-hasBaseQuantityKind
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKind ;
  sh:minCount 0 ;
  sh:path qudt:hasBaseQuantityKind .

qudt:SystemOfQuantityKinds-hasQuantityKind
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKind ;
  sh:minCount 0 ;
  sh:path qudt:hasQuantityKind .

qudt:SystemOfQuantityKinds-hasUnitSystem
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:SystemOfUnits ;
  sh:maxCount 1 ;
  sh:path qudt:hasUnitSystem .

qudt:SystemOfQuantityKinds-systemDerivedQuantityKind
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKind ;
  sh:minCount 0 ;
  sh:path qudt:systemDerivedQuantityKind .

qudt:SystemOfUnits-applicablePhysicalConstant
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:PhysicalConstant ;
  sh:path qudt:applicablePhysicalConstant .

qudt:SystemOfUnits-hasAllowedUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:path qudt:hasAllowedUnit .

qudt:SystemOfUnits-hasBaseUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:path qudt:hasBaseUnit .

qudt:SystemOfUnits-hasCoherentUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:path qudt:hasCoherentUnit .

qudt:SystemOfUnits-hasDefinedUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:path qudt:hasDefinedUnit .

qudt:SystemOfUnits-hasDerivedCoherentUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:path qudt:hasDerivedCoherentUnit .

qudt:SystemOfUnits-hasDerivedUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:path qudt:hasDerivedUnit .

qudt:SystemOfUnits-hasUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Unit ;
  sh:path qudt:hasUnit .

qudt:SystemOfUnits-prefix
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Prefix ;
  sh:path qudt:prefix .

qudt:UCUMcs
  a rdfs:Datatype, sh:NodeShape ;
  dcterms:description "Lexical pattern for the case-sensitive version of UCUM code" ;
  dcterms:source <https://ucum.org/ucum.html> ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "case-sensitive UCUM code" ;
  rdfs:seeAlso <https://ucum.org/ucum.html> ;
  rdfs:subClassOf xsd:string .

qudt:Unit-altSymbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:path qudt:altSymbol .

qudt:Unit-applicableSystem
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:SystemOfUnits ;
  sh:path qudt:applicableSystem .

qudt:Unit-conversionMultiplier
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:decimal ;
  sh:maxCount 1 ;
  sh:path qudt:conversionMultiplier .

qudt:Unit-conversionMultiplierSN
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:double ;
  sh:maxCount 1 ;
  sh:path qudt:conversionMultiplierSN .

qudt:Unit-conversionOffset
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:decimal ;
  sh:maxCount 1 ;
  sh:path qudt:conversionOffset .

qudt:Unit-conversionOffsetSN
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:double ;
  sh:maxCount 1 ;
  sh:path qudt:conversionOffsetSN .

qudt:Unit-definedUnitOfSystem
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:SystemOfUnits ;
  sh:path qudt:definedUnitOfSystem .

qudt:Unit-derivedCoherentUnitOfSystem
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:SystemOfUnits ;
  sh:path qudt:derivedCoherentUnitOfSystem .

qudt:Unit-derivedUnitOfSystem
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:SystemOfUnits ;
  sh:path qudt:derivedUnitOfSystem .

qudt:Unit-expression
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:minCount 0 ;
  sh:path qudt:expression .

qudt:Unit-hasDimensionVector
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKindDimensionVector ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:hasDimensionVector .

qudt:Unit-hasQuantityKind
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKind ;
  sh:minCount 1 ;
  sh:path qudt:hasQuantityKind ;
  sh:severity sh:Info .

qudt:Unit-iec61360Code
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:path qudt:iec61360Code .

qudt:Unit-latexDefinition
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype qudt:LatexString ;
  sh:minCount 0 ;
  sh:path qudt:latexDefinition .

qudt:Unit-latexSymbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype qudt:LatexString ;
  sh:minCount 0 ;
  sh:path qudt:latexSymbol .

qudt:Unit-mathMLdefinition
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
  sh:path qudt:mathMLdefinition .

qudt:Unit-omUnit
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:path qudt:omUnit .

qudt:Unit-prefix
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:Prefix ;
  sh:maxCount 1 ;
  sh:path qudt:prefix .

qudt:Unit-qkdvDenominator
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKindDimensionVector ;
  sh:maxCount 1 ;
  sh:path qudt:qkdvDenominator .

qudt:Unit-qkdvNumerator
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKindDimensionVector ;
  sh:maxCount 1 ;
  sh:path qudt:qkdvNumerator .

qudt:Unit-siExactMatch
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:path qudt:siExactMatch .

qudt:Unit-siUnitsExpression
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
  sh:path qudt:siUnitsExpression .

qudt:Unit-symbol
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:minCount 0 ;
  sh:path qudt:symbol .

qudt:Unit-ucumCode
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype qudt:UCUMcs ;
  sh:path qudt:ucumCode ;
  sh:pattern "[\\x21-\\x7e]+" .

qudt:Unit-udunitsCode
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:path qudt:udunitsCode .

qudt:Unit-uneceCommonCode
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:string ;
  sh:path qudt:uneceCommonCode .

qudt:Unit-unitOfSystem
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:SystemOfUnits ;
  sh:path qudt:isUnitOfSystem .

qudt:UserQuantityKind-hasQuantityKind
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:class qudt:QuantityKind ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:path qudt:hasQuantityKind .

qudt:ValuePropertyShape
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:maxCount 1 ;
  sh:node qudt:NumericListShape ;
  sh:path qudt:value .

qudt:Verifiable
  a qudt:AspectClass, sh:NodeShape ;
  dcterms:description """
  An aspect class that holds properties that provide external knowledge and specifications of a given resource.
  """ ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "Verifiable" ;
  rdfs:subClassOf qudt:Aspect ;
  sh:property qudt:InformativeReferencePropertyShape ;
  sh:property qudt:Verifiable-dbpediaMatch ;
  sh:property qudt:Verifiable-isoNormativeReference ;
  sh:property qudt:Verifiable-normativeReference .

qudt:Verifiable-dbpediaMatch
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:anyURI ;
  sh:minCount 0 ;
  sh:path qudt:dbpediaMatch .

qudt:Verifiable-isoNormativeReference
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:anyURI ;
  sh:minCount 0 ;
  sh:path qudt:isoNormativeReference .

qudt:Verifiable-normativeReference
  a sh:PropertyShape ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  sh:datatype xsd:anyURI ;
  sh:minCount 0 ;
  sh:path qudt:normativeReference .

vaem:GMD_SHACLQUDT-SCHEMA
  a vaem:GraphMetaData ;
  dcterms:contributor "Daniel Mekonnen" ;
  dcterms:contributor "David Price" ;
  dcterms:contributor "Jack Hodges" ;
  dcterms:contributor "James E. Masters" ;
  dcterms:contributor "Simon J D Cox" ;
  dcterms:contributor "Steve Ray" ;
  dcterms:created "2011-04-20"^^xsd:date ;
  dcterms:creator "Ralph Hodgson" ;
  dcterms:description """<p>The QUDT, or "Quantity, Unit, Dimension and Type" schema defines the base classes properties, and restrictions used for modeling physical quantities, units of measure, and their dimensions in various measurement systems. The goal of the QUDT ontology is to provide a unified model of, measurable quantities, units for measuring different kinds of quantities, the numerical values of quantities in different units of measure and the data structures and data types used to store and manipulate these objects in software.</p>

<p>Except for unit prefixes, all units are specified in separate vocabularies. Descriptions are provided in both HTML and LaTeX formats. A quantity is a measure of an observable phenomenon, that, when associated with something, becomes a property of that thing; a particular object, event, or physical system. </p>

<p>A quantity has meaning in the context of a measurement (i.e. the thing measured, the measured value, the accuracy of measurement, etc.) whereas the underlying quantity kind is independent of any particular measurement. Thus, length is a quantity kind while the height of a rocket is a specific quantity of length; its magnitude that may be expressed in meters, feet, inches, etc.  Or, as stated at Wikipedia, in the language of measurement, quantities are quantifiable aspects of the world, such as time, distance, velocity, mass, momentum, energy, and weight, and units are used to describe their measure. Many of these quantities are related to each other by various physical laws, and as a result the units of some of the quantities can be expressed as products (or ratios) of powers of other units (e.g., momentum is mass times velocity and velocity is measured in distance divided by time).</p>"""^^rdf:HTML ;
  dcterms:modified "1234-12-12T12:34:56Z"^^xsd:dateTime ;
  dcterms:rights """
  This product includes all or a portion of the UCUM table, UCUM codes, and UCUM definitions or is derived from it, subject to a license from Regenstrief Institute, Inc. and The UCUM Organization. Your use of the UCUM table, UCUM codes, UCUM definitions also is subject to this license, a copy of which is available at ​http://unitsofmeasure.org. The current complete UCUM table, UCUM Specification are available for download at ​http://unitsofmeasure.org. The UCUM table and UCUM codes are copyright © 1995-2009, Regenstrief Institute, Inc. and the Unified Codes for Units of Measures (UCUM) Organization. All rights reserved.

THE UCUM TABLE (IN ALL FORMATS), UCUM DEFINITIONS, AND SPECIFICATION ARE PROVIDED 'AS IS.' ANY EXPRESS OR IMPLIED WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  """ ;
  dcterms:rights "The QUDT Ontologies are issued under a Creative Commons Attribution 4.0 International License (CC BY 4.0), available at https://creativecommons.org/licenses/by/4.0/. Attribution should be made to QUDT.org" ;
  dcterms:subject "QUDT" ;
  dcterms:title "QUDT SHACL Schema - Version $$QUDT_VERSION$$" ;
  owl:versionIRI <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  qudt:informativeReference "http://unitsofmeasure.org/trac"^^xsd:anyURI ;
  qudt:informativeReference "http://www.bipm.org/en/publications/si-brochure"^^xsd:anyURI ;
  qudt:informativeReference "http://www.bipm.org/utils/common/documents/jcgm/JCGM_200_2008.pdf"^^xsd:anyURI ;
  qudt:informativeReference "https://books.google.com/books?id=pIlCAAAAIAAJ&dq=dimensional+analysis&hl=en"^^xsd:anyURI ;
  qudt:informativeReference "https://www.nist.gov/physical-measurement-laboratory/special-publication-811"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "QUDT SHACL Schema Metadata Version $$QUDT_VERSION$$" ;
  vaem:graphName "qudt" ;
  vaem:graphTitle "Quantities, Units, Dimensions and Types (QUDT) SHACL Schema - Version $$QUDT_VERSION$$" ;
  vaem:hasGraphRole vaem:SHACLSchemaGraph ;
  vaem:hasOwner vaem:QUDT ;
  vaem:hasSteward vaem:QUDT ;
  vaem:intent "Specifies the schema for quantities, units and dimensions. Types are defined in other schemas." ;
  vaem:isMetadataFor <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  vaem:latestPublishedVersion "https://qudt.org/doc/$$CURRENT_YEAR$$/$$CURRENT_MONTH$$/DOC_SCHEMA-SHACL-QUDT.html"^^xsd:anyURI ;
  vaem:logo "https://qudt.org/linkedmodels.org/assets/lib/lm/images/logos/qudt_logo-300x110.png"^^xsd:anyURI ;
  vaem:namespace "http://qudt.org/schema/qudt/" ;
  vaem:namespacePrefix "qudt" ;
  vaem:owner "qudt.org" ;
  vaem:previousPublishedVersion "https://qudt.org/doc/$$QUDT_PREV_RELEASE_YEAR$$/$$QUDT_PREV_RELEASE_MONTH$$/DOC_SCHEMA-SHACL-QUDT.html"^^xsd:anyURI ;
  vaem:turtleFileURL "http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt"^^xsd:anyURI ;
  vaem:usesNonImportedResource dcterms:abstract ;
  vaem:usesNonImportedResource dcterms:contributor ;
  vaem:usesNonImportedResource dcterms:created ;
  vaem:usesNonImportedResource dcterms:description ;
  vaem:usesNonImportedResource dcterms:modified ;
  vaem:usesNonImportedResource dcterms:rights ;
  vaem:usesNonImportedResource dcterms:source ;
  vaem:usesNonImportedResource dcterms:subject ;
  vaem:usesNonImportedResource dcterms:title ;
  vaem:usesNonImportedResource voag:QUDT-Attribution ;
  vaem:withAttributionTo voag:QUDT-Attribution .

vaem:QUDT
  a vaem:Party ;
  dcterms:description "QUDT is a non-profit organization that governs the QUDT ontologies."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "QUDT" ;
  vaem:graphName "qudt.org" ;
  vaem:website "http://www.qudt.org"^^xsd:anyURI .

voag:QUDT-SchemaCatalogEntry
  a vaem:CatalogEntry ;
  rdfs:isDefinedBy <http://qudt.org/$$QUDT_VERSION$$/schema/shacl/qudt> ;
  rdfs:label "QUDT Schema Catalog Entry" .


