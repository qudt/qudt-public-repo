@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix qk: <http://qudt.org/schema/quantitykind/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sq: <http://qudt.org/2.1/shacl/infer/applicableUnits> .

qk:
  sh:declare [
    sh:namespace "http://qudt.org/vocab/quantitykind/"^^xsd:anyURI ;
    sh:prefix "qk" ;
  ] .

qudt:
  sh:declare [
    sh:namespace "http://qudt.org/schema/qudt/"^^xsd:anyURI ;
    sh:prefix "qudt" ;
  ] .

rdfs:
  sh:declare [
    sh:namespace "http://www.w3.org/2000/01/rdf-schema#" ;
    sh:prefix "rdfs" ;
  ] .

skos:
  sh:declare [
    sh:namespace "http://www.w3.org/2004/02/skos/core#"^^xsd:anyURI ;
    sh:prefix "skos" ;
  ] .

sq:qkRule
  a sh:NodeShape ;
  sh:severity sh:Violation ;
  sh:sparql [
    a sh:SPARQLConstraint ;
    sh:message "Unit {?this} does not have required qudt:factorUnit reference to {?baseUnit}. Please run mvn shacl:infer@shacl-infer-factor-units." ;
    sh:prefixes qk: ;
    sh:prefixes qudt: ;
    sh:prefixes rdfs: ;
    sh:prefixes skos: ;
    sh:prefixes xsd: ;
    sh:select """
    select ?this ?baseUnit
    WHERE
            {
                SELECT DISTINCT ?this ?baseUnit ?exponent WHERE
                {
                {
                    ?this a qudt:Unit ;
                        BIND(REPLACE(STR(?this), "^.+/", "") as ?thisLocalName)
                    FILTER(REPLACE(?thisLocalName, "(PER|2|3|4|5|6|-)\\\\b", "") != ?thisLocalName)
                    FILTER(?thisLocalName NOT IN (
                        "Gold-OunceTroy",
                        "Palladium-OunceTroy",
                        "Silver-OunceTroy",
                        "Platinum-OunceTroy",
                        "failures-in-time",
                        "USDollar-NextDay",
                        "Kilo-FT3"
                    ))

                    VALUES ?skipUnits { 0 1 2 3 4 5 6 }
                    BIND("(\\\\w+(_\\\\w+)?\\\\d?)" as ?baseUnitRegex)
                    BIND("(\\\\w+(_\\\\w+)?\\\\d?|PER)" as ?skipUnitRegex)
                    BIND(CONCAT("^(",?skipUnitRegex,"-){", STR(?skipUnits), "}", ?baseUnitRegex, "(-" ,?skipUnitRegex, ")*$") as ?selectUnitRegex )
                    BIND(REPLACE(?thisLocalName, ?selectUnitRegex, "$4") as ?baseUnitLocalNameExtractedTmp)
                    BIND(REPLACE(?baseUnitLocalNameExtractedTmp, "^(\\\\w*[^\\\\d])(\\\\d?)$", "$1") as ?baseUnitLocalNameExtracted)
                    BIND(REPLACE(?baseUnitLocalNameExtractedTmp, "^(\\\\w*[^\\\\d])(\\\\d?)$", "$2") as ?exponentTmpStr)
                    BIND(IF(?exponentTmpStr = "", STRDT("1",xsd:integer), STRDT(?exponentTmpStr,xsd:integer)) as ?exponentTmp)
                    VALUES ( ?matchString ?dontMatchString ?expFactor) {
                        ( "^.*PER-.*\\\\b@@UNIT@@\\\\b.*$" "dontfindthis" -1 )
                        ( "^.*\\\\b@@UNIT@@\\\\b.*PER.*$" "dontfindthis"  1 )
                        ( ".+" "\\\\bPER\\\\b" 1 )
                    }
                    FILTER(REPLACE(?thisLocalName, REPLACE(?matchString, "@@UNIT@@", ?baseUnitLocalNameExtractedTmp), "") != ?thisLocalName)
                    FILTER(REPLACE(?thisLocalName, ?dontMatchString, "") = ?thisLocalName)
                    BIND(?exponentTmp * ?expFactor as ?exponent)
                    FILTER( ?baseUnitLocalNameExtractedTmp != "PER" )
                    FILTER( ! CONTAINS(?baseUnitLocalNameExtractedTmp, "-") )
                    BIND(IRI(CONCAT("http://qudt.org/vocab/unit/", ?baseUnitLocalNameExtracted)) as ?newlyMintedBaseUnit)
                    # find an existing unit or currencyunit with the localname we have determined. if we find none, we will
                    # assume that the factor unit is a normal unit and that it is missing.
                    OPTIONAL {
                        {
                            ?existingBaseUnit a qudt:Unit
                            BIND(REPLACE(STR(?existingBaseUnit), "^.+/", "")  AS ?existingBaseUnitLocalName)
                            FILTER(?existingBaseUnitLocalName = ?baseUnitLocalNameExtracted)
                        }
                        UNION
                        {
                            ?existingBaseUnit a qudt:CurrencyUnit
                            BIND(REPLACE(STR(?existingBaseUnit), "^.+/", "")  AS ?existingBaseUnitLocalName)
                            FILTER(?existingBaseUnitLocalName = ?baseUnitLocalNameExtracted)
                        }
                    }
                    # did we find an existing unit/currencyunit with that localname? use it. Otherwise: use newly minted unit iri.
                    BIND(IF(BOUND(?existingBaseUnit), ?existingBaseUnit, ?newlyMintedBaseUnit) as ?baseUnit)
                }

                FILTER NOT EXISTS {
                    ?this qudt:factorUnit [
                            qudt:unit ?baseUnit ;
                            qudt:exponent ?exponent
                        ] .
                }

                FILTER NOT EXISTS {
                    ?this qudt:isScalingOf ?someOtherUnit
                }
                }
            }
            order by ?this ?baseUnit

        """ ;
  ] ;
  sh:targetClass qudt:Unit .

xsd:
  sh:declare [
    sh:namespace "http://www.w3.org/2001/XMLSchema#"^^xsd:anyURI ;
    sh:prefix "xsd" ;
  ] .


