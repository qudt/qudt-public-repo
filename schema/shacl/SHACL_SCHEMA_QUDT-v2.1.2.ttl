# baseURI: http://qudt.org/2.1.2/schema/shacl/qudt
# imports: http://datashapes.org/dash
# imports: http://www.linkedmodel.org/schema/dtype
# imports: http://www.linkedmodel.org/schema/vaem
# imports: http://www.w3.org/2004/02/skos/core

@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix quantitykind: <http://qudt.org/vocab/quantitykind/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix voag: <http://voag.linkedmodel.org/schema/voag#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

dct:abstract
  a owl:AnnotationProperty ;
  rdfs:isDefinedBy dct: ;
  rdfs:label "abstract" ;
.
dct:author
  a rdf:Property ;
.
dct:contributor
  a rdf:Property ;
  rdfs:label "contributor" ;
.
dct:created
  a rdf:Property ;
  rdfs:label "created" ;
.
dct:creator
  a owl:AnnotationProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "creator" ;
.
dct:description
  a qudt:LatexString ;
  a rdf:Property ;
  a owl:AnnotationProperty ;
  rdfs:label "description" ;
.
dct:modified
  a rdf:Property ;
  rdfs:label "modified" ;
.
dct:rights
  a owl:AnnotationProperty ;
  rdfs:label "rights" ;
.
dct:source
  a owl:AnnotationProperty ;
  rdfs:isDefinedBy dct: ;
  rdfs:label "source" ;
.
dct:subject
  a owl:AnnotationProperty ;
  rdfs:label "subject" ;
.
dct:title
  a owl:AnnotationProperty ;
  rdfs:label "title" ;
.
<http://qudt.org/2.1.2/schema/shacl/qudt>
  a owl:Ontology ;
  vaem:hasGraphMetadata vaem:GMD_QUDT-SCHEMA ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "QUDT Schema - Version 2.1.2" ;
  owl:imports <http://datashapes.org/dash> ;
  owl:imports <http://www.linkedmodel.org/schema/dtype> ;
  owl:imports <http://www.linkedmodel.org/schema/vaem> ;
  owl:imports <http://www.w3.org/2004/02/skos/core> ;
  owl:versionIRI <http://qudt.org/2.1.2/schema/shacl/qudt> ;
.
qudt:Aspect
  a qudt:AspectClass ;
  a sh:NodeShape ;
  rdfs:comment "An aspect is an abstract type class that defines properties that can be reused."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "QUDT Aspect" ;
  rdfs:subClassOf owl:Thing ;
.
qudt:AspectClass
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Aspect Class" ;
  rdfs:subClassOf rdfs:Class ;
.
qudt:BaseDimensionMagnitude
  a owl:Class ;
  a sh:NodeShape ;
  qudt:informativeReference "http://en.wikipedia.org/wiki/Dimensional_analysis"^^xsd:anyURI ;
  qudt:informativeReference "http://web.mit.edu/2.25/www/pdf/DA_unified.pdf"^^xsd:anyURI ;
  rdfs:comment """<p class=\"lm-para\">A <em>Dimension</em> expresses a magnitude for a base quantiy kind such as mass, length and time.</p>
<p class=\"lm-para\">DEPRECATED - each exponent is expressed as a property. Keep until a validaiton of this has been done.</p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Base Dimension Magnitude" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:BaseDimensionMagnitude-hasBaseQuantityKind ;
  sh:property qudt:BaseDimensionMagnitude-vectorMagnitude ;
.
qudt:BaseDimensionMagnitude-hasBaseQuantityKind
  a sh:PropertyShape ;
  sh:path qudt:hasBaseQuantityKind ;
  sh:class qudt:QuantityKind ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:BaseDimensionMagnitude-vectorMagnitude
  a sh:PropertyShape ;
  sh:path qudt:vectorMagnitude ;
  sh:datatype xsd:float ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:BaseUnit
  a owl:Class ;
  a sh:NodeShape ;
  qudt:informativeReference "http://aurora.regenstrief.org/~ucum/ucum.html#section-Base-Units"^^xsd:anyURI ;
  qudt:informativeReference "http://dbpedia.org/resource/Category:SI_base_units"^^xsd:anyURI ;
  rdfs:comment "A <em>Base Unit</em> is a unit adopted by convention for a base quantity."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Base Unit" ;
  rdfs:subClassOf qudt:Unit ;
.
qudt:BinaryPrefixUnit
  a owl:Class ;
  a sh:NodeShape ;
  qudt:dbpediaMatch "http://dbpedia.org/resource/Binary_prefix"^^xsd:anyURI ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Binary_prefix"^^xsd:anyURI ;
  rdfs:comment "A <em>Binary Prefix Unit</em> is a unit prefix for multiples of units in data processing, data transmission, and digital information, notably the bit and the byte, to indicate multiplication by a power of 2."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Binary Prefix Unit" ;
  rdfs:subClassOf qudt:PrefixUnit ;
.
qudt:BinaryScaledUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "A <em>Binary Scaled Unit</em> specifies a binary multipler for scaling."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Binary scaled unit" ;
  rdfs:subClassOf qudt:ScaledUnit ;
  sh:property qudt:BinaryScaledUnit-hasPrefixUnit ;
.
qudt:BinaryScaledUnit-hasPrefixUnit
  a sh:PropertyShape ;
  sh:path qudt:hasPrefixUnit ;
  sh:class qudt:BinaryPrefixUnit ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:CGS-Unit
  a owl:Class ;
  a sh:NodeShape ;
  qudt:citation "http://scienceworld.wolfram.com/physics/cgs.html" ;
  qudt:citation "https://en.wikipedia.org/wiki/Centimetre%E2%80%93gram%E2%80%93second_system_of_units" ;
  qudt:citation "https://www.unc.edu/~rowlett/units/cgsmks.html" ;
  rdfs:comment """<p>The C.G.S. System of Units defined four units of measure as a basic set from which all otherC.G.S units are derived. These are: </p>
<ol>
<li>length: cm = centimetre; </li>
<li>mass: g = gram;</li>
<li> time: s = second; </li>
<li> luminous intensity: cd = candela, originally new candle.</li>
</ol>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "CGS Unit" ;
  rdfs:subClassOf qudt:NonSI-Unit ;
.
qudt:Citation
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "Provides a simple way of making citations."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Citation" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:Citation-description ;
  sh:property qudt:Citation-url ;
.
qudt:Citation-description
  a sh:PropertyShape ;
  sh:path qudt:description ;
  sh:datatype rdf:HTML ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:Citation-url
  a sh:PropertyShape ;
  sh:path qudt:url ;
  sh:datatype xsd:anyURI ;
  sh:maxCount 1 ;
.
qudt:Comment
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Comment" ;
  rdfs:subClassOf qudt:Verifiable ;
  rdfs:subClassOf owl:Thing ;
  sh:property qudt:Comment-description ;
  sh:property qudt:Comment-rationale ;
.
qudt:Comment-description
  a sh:PropertyShape ;
  sh:path dct:description ;
  sh:datatype rdf:HTML ;
  sh:maxCount 1 ;
.
qudt:Comment-rationale
  a sh:PropertyShape ;
  sh:path qudt:rationale ;
  sh:datatype rdf:HTML ;
  sh:minCount 0 ;
.
qudt:Concept
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "The root class for all QUDT concepts."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "QUDT Concept" ;
  rdfs:subClassOf owl:Thing ;
  sh:property qudt:Concept-abbreviation ;
  sh:property qudt:Concept-code ;
  sh:property qudt:Concept-description ;
  sh:property qudt:Concept-guidance ;
  sh:property qudt:Concept-hasRule ;
  sh:property qudt:Concept-id ;
.
qudt:Concept-abbreviation
  a sh:PropertyShape ;
  sh:path qudt:abbreviation ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Concept-code
  a sh:PropertyShape ;
  sh:path qudt:code ;
.
qudt:Concept-description
  a sh:PropertyShape ;
  sh:path dct:description ;
  sh:datatype rdf:HTML ;
  sh:maxCount 1 ;
.
qudt:Concept-guidance
  a sh:PropertyShape ;
  sh:path qudt:guidance ;
  sh:datatype rdf:HTML ;
.
qudt:Concept-hasRule
  a sh:PropertyShape ;
  sh:path qudt:hasRule ;
  sh:class qudt:Rule ;
.
qudt:Concept-id
  a sh:PropertyShape ;
  sh:path qudt:id ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:ConstantValue
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "Used to specify the values of a constant."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Constant value" ;
  rdfs:subClassOf qudt:QuantityValue ;
  sh:property qudt:ConstantValue-exactConstant ;
.
qudt:ConstantValue-exactConstant
  a sh:PropertyShape ;
  sh:path qudt:exactConstant ;
  sh:datatype xsd:boolean ;
  sh:maxCount 1 ;
.
qudt:CountingUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "Used for all units that express counts. Examples are Atomic Number, Number, Number per Year, Percent and Sample per Second."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Counting Unit" ;
  rdfs:subClassOf qudt:DimensionlessUnit ;
  rdfs:subClassOf qudt:ResourceUnit ;
.
qudt:CurrencyUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "Currency Units have their own subclass of unit because: (a) they have additonal properites such as 'country' and (b) their URIs do not conform to the same rules as other units."^^rdf:HTML ;
  rdfs:comment "Used for all units that express currency."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Currency Unit" ;
  rdfs:subClassOf qudt:DimensionlessUnit ;
  rdfs:subClassOf qudt:ResourceUnit ;
  rdfs:subClassOf qudt:Unit ;
.
qudt:DecimalPrefixUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "A <em>Decimal Prefix Unit</em> is a unit prefix for multiples of units that are powers of 10."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Decimal Prefix Unit" ;
  rdfs:subClassOf qudt:PrefixUnit ;
.
qudt:DecimalScaledUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Decimal scaled unit" ;
  rdfs:subClassOf qudt:ScaledUnit ;
  sh:property qudt:DecimalScaledUnit-hasPrefixUnit ;
.
qudt:DecimalScaledUnit-hasPrefixUnit
  a sh:PropertyShape ;
  sh:path qudt:hasPrefixUnit ;
  sh:class qudt:DecimalPrefixUnit ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:DerivedCoherentUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Derived coherent unit" ;
  rdfs:subClassOf qudt:DerivedUnit ;
  sh:not [
      rdfs:label "Instance of Derived non coherent unit" ;
      sh:class qudt:DerivedNonCoherentUnit ;
    ] ;
.
qudt:DerivedNonCoherentUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Derived non coherent unit" ;
  rdfs:subClassOf qudt:DerivedUnit ;
  sh:not [
      rdfs:label "Instance of Derived coherent unit" ;
      sh:class qudt:DerivedCoherentUnit ;
    ] ;
.
qudt:DerivedUnit
  a owl:Class ;
  a owl:DeprecatedClass ;
  a sh:NodeShape ;
  qudt:dbpediaMatch "http://dbpedia.org/resource/Category:SI_derived_units"^^xsd:anyURI ;
  rdfs:comment "A DerivedUnit is a type specification for units that are derived from other units."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Derived Unit" ;
  rdfs:subClassOf qudt:Unit ;
.
qudt:DimensionlessUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "A Dimensionless Unit is a quantity for which all the exponents of the factors corresponding to the base quantities in its quantity dimension are zero."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Dimensionless Unit" ;
  rdfs:subClassOf qudt:Unit ;
.
qudt:Discipline
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Discipline" ;
  rdfs:subClassOf qudt:Concept ;
.
qudt:DomainSpecificUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "A domain-specific unit is a categorization of how units may be associated with an area of science, engineering or other discipline."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Domain-specific Unit" ;
  rdfs:subClassOf qudt:Unit ;
.
qudt:EnumeratedValue
  a owl:Class ;
  a sh:NodeShape ;
  qudt:description """<p>This class is for all enumerated and/or coded values.  For example, it contains the dimension objects that are the basis elements in some abstract vector space associated with a quantity kind system. Another use is for the base dimensions for quantity systems. Each quantity kind system that defines a base set has a corresponding ordered enumeration whose elements are the dimension objects for the base quantity kinds. The order of the dimensions in the enumeration determines the canonical order of the basis elements in the corresponding abstract vector space.</p>

<p>An enumeration is a set of literals from which a single value is selected. Each literal can have a tag as an integer within a standard encoding appropriate to the range of integer values. Consistency of enumeration types will allow them, and the enumerated values, to be referred to unambiguously either through symbolic name or encoding. Enumerated values are also controlled vocabularies and as such need to be standardized. Without this consistency enumeration literals can be stated differently and result in  data conflicts and misinterpretations.</p>

<p>The tags are a set of positive whole numbers, not necessarily contiguous and having no numerical significance, each corresponding to the associated literal identifier. An order attribute can also be given on the enumeration elements. An enumeration can itself be a member of an enumeration. This allows enumerations to be enumerated in a selection. Enumerations are also subclasses of Scalar Datatype. This allows them to be used as the reference of a datatype specification.</p>"""^^rdf:HTML ;
  qudt:informativeReference "http://en.wikipedia.org/wiki/Enumeration"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Enumerated Value" ;
  rdfs:subClassOf dtype:EnumeratedValue ;
  sh:property qudt:EnumeratedValue-abbreviation ;
  sh:property qudt:EnumeratedValue-description ;
  sh:property qudt:EnumeratedValue-symbol ;
.
qudt:EnumeratedValue-abbreviation
  a sh:PropertyShape ;
  sh:path qudt:abbreviation ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:EnumeratedValue-description
  a sh:PropertyShape ;
  sh:path qudt:description ;
  sh:datatype rdf:HTML ;
  sh:maxCount 1 ;
.
qudt:EnumeratedValue-symbol
  a sh:PropertyShape ;
  sh:path qudt:symbol ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Enumeration
  a owl:Class ;
  a sh:NodeShape ;
  qudt:dbpediaMatch "http://dbpedia.org/resource/Enumeration"^^xsd:anyURI ;
  qudt:informativeReference "http://en.wikipedia.org/wiki/Enumerated_type"^^xsd:anyURI ;
  qudt:informativeReference "http://en.wikipedia.org/wiki/Enumeration"^^xsd:anyURI ;
  rdfs:comment """<p>An enumeration is a set of literals from which a single value is selected. Each literal can have a tag as an integer within a standard encoding appropriate to the range of integer values. Consistency of enumeration types will allow them, and the enumerated values, to be referred to unambiguously either through symbolic name or encoding. Enumerated values are also controlled vocabularies and as such need to be standardized. Without this consistency enumeration literals can be stated differently and result in  data conflicts and misinterpretations.</p>

<p>The tags are a set of positive whole numbers, not necessarily contiguous and having no numerical significance, each corresponding to the associated literal identifier. An order attribute can also be given on the enumeration elements. An enumeration can itself be a member of an enumeration. This allows enumerations to be enumerated in a selection. Enumerations are also subclasses of <em>Scalar Datatype</em>. This allows them to be used as the reference of a datatype specification.</p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Enumeration" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf dtype:Enumeration ;
  sh:property qudt:Enumeration-abbreviation ;
  sh:property qudt:Enumeration-default ;
  sh:property qudt:Enumeration-element ;
.
qudt:Enumeration-abbreviation
  a sh:PropertyShape ;
  sh:path qudt:abbreviation ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Enumeration-default
  a sh:PropertyShape ;
  sh:path qudt:default ;
  sh:class qudt:EnumeratedValue ;
  sh:maxCount 1 ;
.
qudt:Enumeration-element
  a sh:PropertyShape ;
  sh:path qudt:element ;
  sh:class qudt:EnumeratedValue ;
  sh:minCount 1 ;
.
qudt:EnumerationScale
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Enumeration scale" ;
  rdfs:subClassOf qudt:Scale ;
  rdfs:subClassOf dtype:Enumeration ;
.
qudt:Figure
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Figure" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:Figure-figureCaption ;
  sh:property qudt:Figure-figureLabel ;
  sh:property qudt:Figure-height ;
  sh:property qudt:Figure-image ;
  sh:property qudt:Figure-imageLocation ;
  sh:property qudt:Figure-landscape ;
  sh:property qudt:Figure-width ;
.
qudt:Figure-figureCaption
  a sh:PropertyShape ;
  sh:path qudt:figureCaption ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Figure-figureLabel
  a sh:PropertyShape ;
  sh:path qudt:figureLabel ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Figure-height
  a sh:PropertyShape ;
  sh:path qudt:height ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Figure-image
  a sh:PropertyShape ;
  sh:path qudt:image ;
  sh:datatype xsd:anyURI ;
  sh:maxCount 1 ;
.
qudt:Figure-imageLocation
  a sh:PropertyShape ;
  sh:path qudt:imageLocation ;
  sh:datatype xsd:anyURI ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:Figure-landscape
  a sh:PropertyShape ;
  sh:path qudt:landscape ;
  sh:datatype xsd:boolean ;
  sh:maxCount 1 ;
.
qudt:Figure-width
  a sh:PropertyShape ;
  sh:path qudt:width ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:ImperialUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "British/Imperial units where these are not aligned to international customary units." ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Imperial Unit" ;
  rdfs:subClassOf qudt:NonSI-Unit ;
.
qudt:International-CustomaryUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "Customary units defined in terms of exact multiplers with SI metric units, as specified in the 1959 International Yard and Pound agreement." ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Customary Unit" ;
  rdfs:subClassOf qudt:NonSI-Unit ;
.
qudt:IntervalScale
  a owl:Class ;
  a sh:NodeShape ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
  rdfs:comment """<p>The interval type allows for the degree of difference between items, but not the ratio between them. Examples include temperature with the Celsius scale, which has two defined points (the freezing and boiling point of water at specific conditions) and then separated into 100 intervals, date when measured from an arbitrary epoch (such as AD), percentage such as a percentage return on a stock,[16] location in Cartesian coordinates, and direction measured in degrees from true or magnetic north. Ratios are not meaningful since 20 °C cannot be said to be \"twice as hot\" as 10 °C, nor can multiplication/division be carried out between any two dates directly. However, ratios of differences can be expressed; for example, one difference can be twice another. Interval type variables are sometimes also called \"scaled variables\", but the formal mathematical term is an affine space (in this case an affine line).</p>
<p>Characteristics: median, percentile &amp; Monotonic increasing (order (&lt;) &amp; totally ordered set</p>"""^^rdf:HTML ;
  rdfs:comment "median, percentile & Monotonic increasing (order (<)) & totally ordered set"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Interval scale" ;
  rdfs:seeAlso qudt:NominalScale ;
  rdfs:seeAlso qudt:OrdinalScale ;
  rdfs:seeAlso qudt:RatioScale ;
  rdfs:subClassOf qudt:Scale ;
.
qudt:LatexString
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:comment "A property type whose values need to be wrapped with '\\(' and '/) characters for LaTeX rendering." ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Latex String" ;
  rdfs:subClassOf rdf:Property ;
.
qudt:LogarithmicUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "Logarithmic units are abstract mathematical units that can be used to express any quantities (physical or mathematical) that are defined on a logarithmic scale, that is, as being proportional to the value of a logarithm function. Examples of logarithmic units include common units of information and entropy, such as the bit, and the byte, as well as units of relative signal strength magnitude such as the decibel."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Logarithmic Unit" ;
  rdfs:subClassOf qudt:Unit ;
.
qudt:MKS-Unit
  a owl:Class ;
  a sh:NodeShape ;
  qudt:citation "http://scienceworld.wolfram.com/physics/MKS.html" ;
  qudt:citation "https://en.wikipedia.org/wiki/MKS_system_of_units" ;
  rdfs:comment "The MKS system of units is a physical system of units that expresses any given measurement using fundamental units of the metre, kilogram, and/or second (MKS)."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "MKS-Unit" ;
  rdfs:subClassOf qudt:NonSI-Unit ;
.
qudt:MathFunctionType
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Math Function Type" ;
  rdfs:subClassOf qudt:Concept ;
.
qudt:NIST_SP811_Comment
  a owl:Class ;
  a sh:NodeShape ;
  dc:description "National Institute of Standards and Technology (NIST) Special Publication 811 Comments on some quantities and their units" ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "NIST SP~811 Comment" ;
  rdfs:subClassOf qudt:Comment ;
.
qudt:NominalScale
  a owl:Class ;
  a sh:NodeShape ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
  rdfs:comment "A nominal scale differentiates between items or subjects based only on their names or (meta-)categories and other qualitative classifications they belong to; thus dichotomous data involves the construction of classifications as well as the classification of items. Discovery of an exception to a classification can be viewed as progress. Numbers may be used to represent the variables but the numbers do not have numerical value or relationship: For example, a Globally unique identifier. Examples of these classifications include gender, nationality, ethnicity, language, genre, style, biological species, and form. In a university one could also use hall of affiliation as an example."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Nominal scale" ;
  rdfs:seeAlso qudt:IntervalScale ;
  rdfs:seeAlso qudt:OrdinalScale ;
  rdfs:seeAlso qudt:RatioScale ;
  rdfs:subClassOf qudt:Scale ;
.
qudt:NonSI-Unit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "<p class=\"lm-para\">A parent class for all units that are not SI Units</p>"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Non-SI Unit" ;
  rdfs:subClassOf qudt:StandardsUnit ;
.
qudt:OrdinalScale
  a owl:Class ;
  a sh:NodeShape ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
  rdfs:comment "The ordinal type allows for rank order (1st, 2nd, 3rd, etc.) by which data can be sorted, but still does not allow for relative degree of difference between them. Examples include, on one hand, dichotomous data with dichotomous (or dichotomized) values such as 'sick' vs. 'healthy' when measuring health, 'guilty' vs. 'innocent' when making judgments in courts, 'wrong/false' vs. 'right/true' when measuring truth value, and, on the other hand, non-dichotomous data consisting of a spectrum of values, such as 'completely agree', 'mostly agree', 'mostly disagree', 'completely disagree' when measuring opinion."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Ordinal scale" ;
  rdfs:seeAlso qudt:IntervalScale ;
  rdfs:seeAlso qudt:NominalScale ;
  rdfs:seeAlso qudt:RatioScale ;
  rdfs:subClassOf qudt:Scale ;
  sh:property qudt:OrdinalScale-order ;
.
qudt:OrdinalScale-order
  a sh:PropertyShape ;
  sh:path qudt:order ;
  sh:datatype xsd:nonNegativeInteger ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:Organization
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Organization" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:Organization-url ;
.
qudt:Organization-url
  a sh:PropertyShape ;
  sh:path qudt:url ;
  sh:datatype xsd:anyURI ;
  sh:minCount 0 ;
.
qudt:PhysicalConstant
  a owl:Class ;
  a sh:NodeShape ;
  qudt:dbpediaMatch "http://dbpedia.org/resource/Physical_constant"^^xsd:anyURI ;
  rdfs:comment "A physical constant is a physical quantity that is generally believed to be both universal in nature and constant in time. It can be contrasted with a mathematical constant, which is a fixed numerical value but does not directly involve any physical measurement. There are many physical constants in science, some of the most widely recognized being the speed of light in vacuum c, Newton's gravitational constant G, Planck's constant h, the electric permittivity of free space ε0, and the elementary charge e. Physical constants can take many dimensional forms, or may be dimensionless depending on the system of quantities and units used."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Physical Constant" ;
  rdfs:subClassOf qudt:Quantity ;
.
qudt:PrefixUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Prefix unit" ;
  rdfs:subClassOf qudt:Unit ;
.
qudt:Quantifiable
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "<p><em>Quantifiable</em> ascribes to some thing the capability of being measured, observed, or counted.</p>"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Quantifiable" ;
  rdfs:subClassOf qudt:Aspect ;
  sh:property qudt:Quantifiable-hasQuantity ;
.
qudt:Quantifiable-hasQuantity
  a sh:PropertyShape ;
  sh:path qudt:hasQuantity ;
  sh:class qudt:Quantity ;
  sh:minCount 1 ;
.
qudt:Quantity
  a owl:Class ;
  a sh:NodeShape ;
  qudt:dbpediaMatch "http://dbpedia.org/resource/Quantity"^^xsd:anyURI ;
  rdfs:comment """<p class=\"lm-para\">A <b>quantity</b> is the measurement of an observable property of a particular object, event, or physical system. A quantity is always associated with the context of measurement (i.e. the thing measured, the measured value, the accuracy of measurement, etc.) whereas the underlying <b>quantity kind</b> is independent of any particular measurement. Thus, length is a quantity kind while the height of a rocket is a specific quantity of length; its magnitude that may be expressed in meters, feet, inches, etc. Examples of physical quantities include physical constants, such as the speed of light in a vacuum, Planck's constant, the electric permittivity of free space, and the fine structure constant. </p>

<p class=\"lm-para\">In other words, quantities are quantifiable aspects of the world, such as the duration of a movie, the distance between two points, velocity of a car, the pressure of the atmosphere, and a person's weight; and units are used to describe their numerical measure. 

<p class=\"lm-para\">Many <b>quantity kinds</b> are related to each other by various physical laws, and as a result, the associated units of some quantity kinds can be expressed as products (or ratios) of powers of other quantity kinds (e.g., momentum is mass times velocity and velocity is defined as distance divided by time). In this way, some quantities can be calculated from other measured quantities using their associations to the quantity kinds in these expressions. These quantity kind relationships are also discussed in dimensional analysis. Those that cannot be so expressed can be regarded as \"fundamental\" in this sense.</p>
<p class=\"lm-para\">A quantity is distinguished from a \"quantity kind\" in that the former carries a value and the latter is a type specifier.</p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Quantity" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:Quantity-baseUnitDimensions ;
  sh:property qudt:Quantity-belongsToSystemOfQuantities ;
  sh:property qudt:Quantity-description ;
  sh:property qudt:Quantity-hasQuantityKind ;
  sh:property qudt:Quantity-latexDefinition ;
  sh:property qudt:Quantity-mathMLdefinition ;
  sh:property qudt:Quantity-quantityValue ;
.
qudt:Quantity-baseUnitDimensions
  a sh:PropertyShape ;
  sh:path qudt:baseUnitDimensions ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Quantity-belongsToSystemOfQuantities
  a sh:PropertyShape ;
  sh:path qudt:belongsToSystemOfQuantities ;
  sh:class qudt:SystemOfQuantityKinds ;
  sh:minCount 0 ;
.
qudt:Quantity-description
  a sh:PropertyShape ;
  sh:path qudt:description ;
  sh:datatype rdf:HTML ;
  sh:maxCount 1 ;
.
qudt:Quantity-hasQuantityKind
  a sh:PropertyShape ;
  sh:path qudt:hasQuantityKind ;
  sh:class qudt:QuantityKind ;
.
qudt:Quantity-latexDefinition
  a sh:PropertyShape ;
  sh:path qudt:latexDefinition ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Quantity-mathMLdefinition
  a sh:PropertyShape ;
  sh:path qudt:mathMLdefinition ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Quantity-quantityValue
  a sh:PropertyShape ;
  sh:path qudt:quantityValue ;
  sh:class qudt:QuantityValue ;
.
qudt:QuantityKind
  a owl:Class ;
  a sh:NodeShape ;
  qudt:informativeReference "http://www.electropedia.org/iev/iev.nsf/display?openform&ievref=112-01-04"^^xsd:anyURI ;
  rdfs:comment "A <b>Quantity Kind</b> is any observable property that can be  measured and quantified numerically. Familiar examples include physical properties such as length, mass, time, force, energy, power, electric charge, etc. Less familiar examples include currency, interest rate, price to earning ratio, and information capacity."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Quantity Kind" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:QuantityKind-applicableCGSUnit ;
  sh:property qudt:QuantityKind-applicableISOUnit ;
  sh:property qudt:QuantityKind-applicableImperialUnit ;
  sh:property qudt:QuantityKind-applicableSIUnit ;
  sh:property qudt:QuantityKind-applicableUSCustomaryUnit ;
  sh:property qudt:QuantityKind-applicableUnit ;
  sh:property qudt:QuantityKind-baseCGSUnitDimensions ;
  sh:property qudt:QuantityKind-baseISOUnitDimensions ;
  sh:property qudt:QuantityKind-baseImperialUnitDimensions ;
  sh:property qudt:QuantityKind-baseSIUnitDimensions ;
  sh:property qudt:QuantityKind-baseUSCustomaryUnitDimensions ;
  sh:property qudt:QuantityKind-baseUnitDimensions ;
  sh:property qudt:QuantityKind-belongsToSystemOfQuantities ;
  sh:property qudt:QuantityKind-broader ;
  sh:property qudt:QuantityKind-dimensionVectorForSI ;
  sh:property qudt:QuantityKind-expresion ;
  sh:property qudt:QuantityKind-generalization ;
  sh:property qudt:QuantityKind-hasDimensionVector ;
  sh:property qudt:QuantityKind-isQuantityKindOf ;
  sh:property qudt:QuantityKind-latexDefinition ;
  sh:property qudt:QuantityKind-latexSymbol ;
  sh:property qudt:QuantityKind-mathMLdefinition ;
  sh:property qudt:QuantityKind-qkdvDenominator ;
  sh:property qudt:QuantityKind-qkdvNumerator ;
  sh:property qudt:QuantityKind-symbol ;
.
qudt:QuantityKind-applicableCGSUnit
  a sh:PropertyShape ;
  sh:path qudt:applicableCGSUnit ;
  sh:class qudt:Unit ;
  sh:minCount 0 ;
.
qudt:QuantityKind-applicableISOUnit
  a sh:PropertyShape ;
  sh:path qudt:applicableISOUnit ;
  sh:class qudt:Unit ;
  sh:minCount 0 ;
.
qudt:QuantityKind-applicableImperialUnit
  a sh:PropertyShape ;
  sh:path qudt:applicableImperialUnit ;
  sh:class qudt:Unit ;
  sh:minCount 0 ;
.
qudt:QuantityKind-applicableSIUnit
  a sh:PropertyShape ;
  sh:path qudt:applicableSIUnit ;
  sh:class qudt:Unit ;
  sh:minCount 0 ;
.
qudt:QuantityKind-applicableUSCustomaryUnit
  a sh:PropertyShape ;
  sh:path qudt:applicableUSCustomaryUnit ;
  sh:class qudt:Unit ;
  sh:minCount 0 ;
.
qudt:QuantityKind-applicableUnit
  a sh:PropertyShape ;
  sh:path qudt:applicableUnit ;
  sh:class qudt:Unit ;
  sh:minCount 0 ;
.
qudt:QuantityKind-baseCGSUnitDimensions
  a sh:PropertyShape ;
  sh:path qudt:baseCGSUnitDimensions ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:QuantityKind-baseISOUnitDimensions
  a sh:PropertyShape ;
  sh:path qudt:baseISOUnitDimensions ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:QuantityKind-baseImperialUnitDimensions
  a sh:PropertyShape ;
  sh:path qudt:baseImperialUnitDimensions ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:QuantityKind-baseSIUnitDimensions
  a sh:PropertyShape ;
  sh:path qudt:baseSIUnitDimensions ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:QuantityKind-baseUSCustomaryUnitDimensions
  a sh:PropertyShape ;
  sh:path qudt:baseUSCustomaryUnitDimensions ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:QuantityKind-baseUnitDimensions
  a sh:PropertyShape ;
  sh:path qudt:baseUnitDimensions ;
  sh:datatype xsd:string ;
  sh:maxCount 4 ;
.
qudt:QuantityKind-belongsToSystemOfQuantities
  a sh:PropertyShape ;
  sh:path qudt:belongsToSystemOfQuantities ;
  sh:class qudt:SystemOfQuantityKinds ;
.
qudt:QuantityKind-broader
  a sh:PropertyShape ;
  sh:path skos:broader ;
  sh:class qudt:QuantityKind ;
.
qudt:QuantityKind-dimensionVectorForSI
  a sh:PropertyShape ;
  sh:path qudt:dimensionVectorForSI ;
  sh:class qudt:QuantityKindDimensionVector_SI ;
  sh:maxCount 1 ;
.
qudt:QuantityKind-expresion
  a sh:PropertyShape ;
  sh:path qudt:expresion ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:QuantityKind-generalization
  a sh:PropertyShape ;
  sh:path qudt:generalization ;
  sh:class qudt:QuantityKind ;
  sh:maxCount 1 ;
.
qudt:QuantityKind-hasDimensionVector
  a sh:PropertyShape ;
  sh:path qudt:hasDimensionVector ;
  sh:class qudt:QuantityKindDimensionVector ;
.
qudt:QuantityKind-isQuantityKindOf
  a sh:PropertyShape ;
  sh:path qudt:isQuantityKindOf ;
  sh:class qudt:SystemOfQuantityKinds ;
.
qudt:QuantityKind-latexDefinition
  a sh:PropertyShape ;
  sh:path qudt:latexDefinition ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:QuantityKind-latexSymbol
  a sh:PropertyShape ;
  sh:path qudt:latexSymbol ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:QuantityKind-mathMLdefinition
  a sh:PropertyShape ;
  sh:path qudt:mathMLdefinition ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:QuantityKind-qkdvDenominator
  a sh:PropertyShape ;
  sh:path qudt:qkdvDenominator ;
  sh:class qudt:QuantityKindDimensionVector ;
  sh:maxCount 1 ;
.
qudt:QuantityKind-qkdvNumerator
  a sh:PropertyShape ;
  sh:path qudt:qkdvNumerator ;
  sh:class qudt:QuantityKindDimensionVector ;
  sh:maxCount 1 ;
.
qudt:QuantityKind-symbol
  a sh:PropertyShape ;
  sh:path qudt:symbol ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:QuantityKindDimensionVector
  a owl:Class ;
  a sh:NodeShape ;
  qudt:informativeReference "http://en.wikipedia.org/wiki/Dimensional_analysis"^^xsd:anyURI ;
  qudt:informativeReference "http://web.mit.edu/2.25/www/pdf/DA_unified.pdf"^^xsd:anyURI ;
  rdfs:comment """<p class=\"lm-para\">A  <em>Quantity Kind Dimension Vector</em> describes the dimensionality of a quantity kind in the context of a system of units. In the SI system of units, the dimensions of a quantity kind are expressed as a product of the basic physical dimensions mass (\\(M\\)), length (\\(L\\)), time (\\(T\\)) current (\\(I\\)), amount of substance (\\(N\\)), luminous intensity (\\(J\\)) and absolute temperature (\\(\\theta\\)) as \\(dim \\, Q = L^{\\alpha} \\, M^{\\beta} \\, T^{\\gamma} \\, I ^{\\delta} \\, \\theta ^{\\epsilon} \\, N^{\\eta} \\, J ^{\\nu}\\).</p>

<p class=\"lm-para\">The rational powers of the dimensional exponents, \\(\\alpha, \\, \\beta, \\, \\gamma, \\, \\delta, \\, \\epsilon, \\, \\eta, \\, \\nu\\), are positive, negative, or zero.</p>

<p class=\"lm-para\">For example, the dimension of the physical quantity kind \\(\\it{speed}\\) is \\(\\boxed{length/time}\\), \\(L/T\\) or \\(LT^{-1}\\), and the dimension of the physical quantity kind force is \\(\\boxed{mass \\times acceleration}\\) or \\(\\boxed{mass \\times (length/time)/time}\\), \\(ML/T^2\\) or \\(MLT^{-2}\\) respectively.</p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Quantity Kind Dimension Vector" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:QuantityKindDimensionVector-baseUnitDimensions ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForAmountOfSubstance ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForElectricCurrent ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForLength ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForLuminousIntensity ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForMass ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForThermodynamicTemperature ;
  sh:property qudt:QuantityKindDimensionVector-dimensionExponentForTime ;
  sh:property qudt:QuantityKindDimensionVector-dimensionlessExponent ;
  sh:property qudt:QuantityKindDimensionVector-latexDefinition ;
.
qudt:QuantityKindDimensionVector-baseUnitDimensions
  a sh:PropertyShape ;
  sh:path qudt:baseUnitDimensions ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForAmountOfSubstance
  a sh:PropertyShape ;
  sh:path qudt:dimensionExponentForAmountOfSubstance ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForElectricCurrent
  a sh:PropertyShape ;
  sh:path qudt:dimensionExponentForElectricCurrent ;
  sh:datatype xsd:integer ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForLength
  a sh:PropertyShape ;
  sh:path qudt:dimensionExponentForLength ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForLuminousIntensity
  a sh:PropertyShape ;
  sh:path qudt:dimensionExponentForLuminousIntensity ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForMass
  a sh:PropertyShape ;
  sh:path qudt:dimensionExponentForMass ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForThermodynamicTemperature
  a sh:PropertyShape ;
  sh:path qudt:dimensionExponentForThermodynamicTemperature ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForTime
  a sh:PropertyShape ;
  sh:path qudt:dimensionExponentForTime ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:QuantityKindDimensionVector-dimensionlessExponent
  a sh:PropertyShape ;
  sh:path qudt:dimensionlessExponent ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:QuantityKindDimensionVector-latexDefinition
  a sh:PropertyShape ;
  sh:path qudt:latexDefinition ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:QuantityKindDimensionVector_CGS
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "A <em>CGS Dimension Vector</em> is used to specify the dimensions for a C.G.S. quantity kind."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "CGS Dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector ;
.
qudt:QuantityKindDimensionVector_CGS-EMU
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "A <em>CGS EMU Dimension Vector</em> is used to specify the dimensions for EMU C.G.S. quantity kind."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "CGS EMU Dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS ;
.
qudt:QuantityKindDimensionVector_CGS-ESU
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "A <em>CGS ESU Dimension Vector</em> is used to specify the dimensions for ESU C.G.S. quantity kind."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "CGS ESU Dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS ;
.
qudt:QuantityKindDimensionVector_CGS-GAUSS
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "A <em>CGS GAUSS Dimension Vector</em> is used to specify the dimensions for Gaussioan C.G.S. quantity kind."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "CGS GAUSS Dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS ;
.
qudt:QuantityKindDimensionVector_CGS-LH
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "A <em>CGS LH Dimension Vector</em> is used to specify the dimensions for Lorentz-Heaviside C.G.S. quantity kind."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "CGS LH Dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector_CGS ;
.
qudt:QuantityKindDimensionVector_ISO
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "ISO Dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector ;
.
qudt:QuantityKindDimensionVector_Imperial
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Imperial dimension vector" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector ;
.
qudt:QuantityKindDimensionVector_SI
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Quantity Kind Dimension vector (SI)" ;
  rdfs:subClassOf qudt:QuantityKindDimensionVector ;
.
qudt:QuantityType
  a owl:Class ;
  a sh:NodeShape ;
  qudt:description "<em>Quantity Type</em> is an enumeration of quanity kinds. It specializes \\(\\boxed{dtype:EnumeratedValue}\\) by constrinaing \\(\\boxed{dtype:value}\\) to instances of \\(\\boxed{qudt:QuantityKind}\\)."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Quantity type" ;
  rdfs:subClassOf qudt:EnumeratedValue ;
  sh:property qudt:QuantityType-value ;
.
qudt:QuantityType-value
  a sh:PropertyShape ;
  sh:path dtype:value ;
  sh:class qudt:QuantityKind ;
.
qudt:QuantityValue
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "A <i>Quantity Value</i> expresses the magnitude and kind of a quantity and is given by the product of a numerical value <code>n</code> and a unit of measure <code>U</code>. The number multiplying the unit is referred to as the numerical value of the quantity expressed in that unit. Refer to <a href=\"http://physics.nist.gov/Pubs/SP811/sec07.html\">NIST SP 811 section 7</a> for more on quantity values."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Quantity value" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:QuantityValue-hasQuantityKind ;
  sh:property qudt:QuantityValue-latexDefinition ;
  sh:property qudt:QuantityValue-relativeStandardUncertainty ;
  sh:property qudt:QuantityValue-standardUncertainty ;
  sh:property qudt:QuantityValue-unit ;
  sh:property qudt:QuantityValue-value ;
.
qudt:QuantityValue-hasQuantityKind
  a sh:PropertyShape ;
  sh:path qudt:hasQuantityKind ;
  sh:class qudt:QuantityKind ;
.
qudt:QuantityValue-latexDefinition
  a sh:PropertyShape ;
  sh:path qudt:latexDefinition ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:QuantityValue-relativeStandardUncertainty
  a sh:PropertyShape ;
  sh:path qudt:relativeStandardUncertainty ;
  sh:datatype xsd:double ;
  sh:maxCount 1 ;
.
qudt:QuantityValue-standardUncertainty
  a sh:PropertyShape ;
  sh:path qudt:standardUncertainty ;
  sh:datatype xsd:double ;
  sh:maxCount 1 ;
.
qudt:QuantityValue-unit
  a sh:PropertyShape ;
  sh:path qudt:unit ;
  sh:class qudt:Unit ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:QuantityValue-value
  a sh:PropertyShape ;
  sh:path qudt:value ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:RatioScale
  a owl:Class ;
  a sh:NodeShape ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Level_of_measurement"^^xsd:anyURI ;
  rdfs:comment "The ratio type takes its name from the fact that measurement is the estimation of the ratio between a magnitude of a continuous quantity and a unit magnitude of the same kind (Michell, 1997, 1999). A ratio scale possesses a meaningful (unique and non-arbitrary) zero value. Most measurement in the physical sciences and engineering is done on ratio scales. Examples include mass, length, duration, plane angle, energy and electric charge. In contrast to interval scales, ratios are now meaningful because having a non-arbitrary zero point makes it meaningful to say, for example, that one object has \"twice the length\" of another (= is \"twice as long\"). Very informally, many ratio scales can be described as specifying \"how much\" of something (i.e. an amount or magnitude) or \"how many\" (a count). The Kelvin temperature scale is a ratio scale because it has a unique, non-arbitrary zero point called absolute zero."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Ratio scale" ;
  rdfs:seeAlso qudt:IntervalScale ;
  rdfs:seeAlso qudt:NominalScale ;
  rdfs:seeAlso qudt:OrdinalScale ;
  rdfs:subClassOf qudt:Scale ;
.
qudt:Rule
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Rule" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:Rule-example ;
  sh:property qudt:Rule-rationale ;
  sh:property qudt:Rule-ruleType ;
.
qudt:Rule-example
  a sh:PropertyShape ;
  sh:path qudt:example ;
  sh:minCount 0 ;
.
qudt:Rule-rationale
  a sh:PropertyShape ;
  sh:path qudt:rationale ;
  sh:datatype rdf:HTML ;
  sh:minCount 0 ;
.
qudt:Rule-ruleType
  a sh:PropertyShape ;
  sh:path qudt:ruleType ;
  sh:class qudt:RuleType ;
.
qudt:RuleType
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Rule Type" ;
  rdfs:subClassOf qudt:EnumeratedValue ;
.
qudt:SI-Unit
  a owl:Class ;
  a sh:NodeShape ;
  qudt:dbpediaMatch "http://dbpedia.org/resource/Category:SI_units"^^xsd:anyURI ;
  rdfs:comment "The International System of Units (SI) defines seven units of measure as a basic set from which all other SI units are derived. These SI base units and their physical quantities are: metre for length kilogram for mass second for time ampere for electric current kelvin for temperature candela for luminous intensity mole for the amount of substance. The SI base quantities form a set of mutually independent dimensions as required by dimensional analysis commonly employed in science and technology."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "SI Unit" ;
  rdfs:subClassOf qudt:StandardsUnit ;
.
qudt:SOU_CGS
  a qudt:SystemOfUnits ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Centimetre–gram–second_system_of_units"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "CGS System of Units" ;
.
qudt:SOU_IMPERIAL
  a qudt:SystemOfUnits ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Imperial_units"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Imperial System of Units" ;
.
qudt:SOU_NATURAL_UNITS
  a qudt:SystemOfUnits ;
  qudt:dbpediaMatch "http://dbpedia.org/resource/Natural_units"^^xsd:anyURI ;
  rdfs:comment """<p>In physics, natural units are physical units of measurement based only on universal physical constants. For example the elementary charge e is a natural unit of electric charge, or the speed of light c is a natural unit of speed.</p>
<p>A purely natural system of units is defined in such a way that some set of selected universal physical constants are normalized to unity; that is, their numerical values in terms of these units become exactly 1.</p>
<p>Examples are Planck Units and Atomic Units. Atomic units (au or a.u.) form a system of natural units which is especially convenient for atomic physics calculations. There are two different kinds of atomic units, which one might name Hartree atomic units and Rydberg atomic units, which differ in the choice of the unit of mass and charge.</p>
<p>Planck units are unique among systems of natural units, because they are not defined in terms of properties of any prototype, physical object, or even elementary particle.</p>"""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "System of Natural Units" ;
.
qudt:SOU_SI
  a qudt:SystemOfUnits ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/International_System_of_Units"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "SI International System of Units" ;
.
qudt:SOU_USCS
  a qudt:SystemOfUnits ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/United_States_customary_units"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "US Customary System of Units" ;
.
qudt:Scale
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "Scales (also called \"scales of measurement\" or \"levels of measurement\")  are expressions that typically refer to the theory of scale types."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Scale" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:Scale-dataStructure ;
  sh:property qudt:Scale-permissibleMaths ;
  sh:property qudt:Scale-permissibleTransformation ;
  sh:property qudt:Scale-scaleType ;
.
qudt:Scale-dataStructure
  a sh:PropertyShape ;
  sh:path qudt:dataStructure ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Scale-permissibleMaths
  a sh:PropertyShape ;
  sh:path qudt:permissibleMaths ;
  sh:class qudt:MathsFunctionType ;
.
qudt:Scale-permissibleTransformation
  a sh:PropertyShape ;
  sh:path qudt:permissibleTransformation ;
  sh:class qudt:TransformType ;
.
qudt:Scale-scaleType
  a sh:PropertyShape ;
  sh:path qudt:scaleType ;
  sh:class qudt:ScaleType ;
  sh:maxCount 1 ;
.
qudt:ScaleType
  a owl:Class ;
  a sh:NodeShape ;
  qudt:description "Scales, or scales of measurement (or categorization) provide ways of quantifying measurements, values and other enumerated values according to a normative frame of reference.  Four different types of scales are typically used. These are interval, nominal, ordinal and ratio scales."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Scale type" ;
  rdfs:subClassOf qudt:EnumeratedValue ;
  sh:property qudt:ScaleType-dataStructure ;
  sh:property qudt:ScaleType-permissibleMaths ;
  sh:property qudt:ScaleType-permissibleTransformation ;
.
qudt:ScaleType-dataStructure
  a sh:PropertyShape ;
  sh:path qudt:dataStructure ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:ScaleType-permissibleMaths
  a sh:PropertyShape ;
  sh:path qudt:permissibleMaths ;
  sh:class qudt:MathsFunctionType ;
.
qudt:ScaleType-permissibleTransformation
  a sh:PropertyShape ;
  sh:path qudt:permissibleTransformation ;
  sh:class qudt:TransformType ;
.
qudt:ScaledUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Scaled unit" ;
  rdfs:subClassOf qudt:Unit ;
  sh:property qudt:ScaledUnit-isScalingOf ;
.
qudt:ScaledUnit-isScalingOf
  a sh:PropertyShape ;
  sh:path qudt:isScalingOf ;
  sh:class qudt:Unit ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
qudt:StandardsUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Standards unit" ;
  rdfs:subClassOf qudt:Unit ;
.
qudt:Statement
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Statement" ;
  rdfs:subClassOf rdf:Statement ;
.
qudt:Symbol
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Symbol" ;
  rdfs:subClassOf qudt:Concept ;
.
qudt:SystemOfQuantityKinds
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "A system of quantity kinds is a set of one or more quantity kinds together with a set of zero or more algebraic equations that define relationships between quantity kinds in the set. In the physical sciences, the equations relating quantity kinds are typically physical laws and definitional relations, and constants of proportionality. Examples include Newton’s First Law of Motion, Coulomb’s Law, and the definition of velocity as the instantaneous change in position.  In almost all cases, the system identifies a subset of base quantity kinds. The base set is chosen so that all other quantity kinds of interest can be derived from the base quantity kinds and the algebraic equations. If the unit system is explicitly associated with a quantity kind system, then the unit system must define at least one unit for each quantity kind.  From a scientific point of view, the division of quantities into base quantities and derived quantities is a matter of convention."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "System of Quantity Kinds" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:SystemOfQuantityKinds-baseDimensionEnumeration ;
  sh:property qudt:SystemOfQuantityKinds-hasQuantityKind ;
  sh:property qudt:SystemOfQuantityKinds-hasUnitSystem ;
.
qudt:SystemOfQuantityKinds-baseDimensionEnumeration
  a sh:PropertyShape ;
  sh:path qudt:baseDimensionEnumeration ;
  sh:class qudt:Enumeration ;
  sh:maxCount 1 ;
.
qudt:SystemOfQuantityKinds-hasQuantityKind
  a sh:PropertyShape ;
  sh:path qudt:hasQuantityKind ;
  sh:class qudt:QuantityKind ;
  sh:minCount 0 ;
.
qudt:SystemOfQuantityKinds-hasUnitSystem
  a sh:PropertyShape ;
  sh:path qudt:hasUnitSystem ;
  sh:class qudt:SystemOfUnits ;
  sh:maxCount 1 ;
.
qudt:SystemOfUnits
  a owl:Class ;
  a sh:NodeShape ;
  qudt:informativeReference "http://dbpedia.org/resource/Category:Systems_of_units"^^xsd:anyURI ;
  qudt:informativeReference "http://www.ieeeghn.org/wiki/index.php/System_of_Measurement_Units"^^xsd:anyURI ;
  rdfs:comment "A system of units is a set of units which are chosen as the reference scales for some set of quantity kinds together with the definitions of each unit. Units may be defined by experimental observation or by proportion to another unit not included in the system. If the unit system is explicitly associated with a quantity kind system, then the unit system must define at least one unit for each quantity kind."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "System of Units" ;
  rdfs:subClassOf qudt:Concept ;
  sh:property qudt:SystemOfUnits-applicablePhysicalConstant ;
  sh:property qudt:SystemOfUnits-hasAllowedUnit ;
  sh:property qudt:SystemOfUnits-hasBaseUnit ;
  sh:property qudt:SystemOfUnits-hasCoherentUnit ;
  sh:property qudt:SystemOfUnits-hasDefinedUnit ;
  sh:property qudt:SystemOfUnits-hasDerivedCoherentUnit ;
  sh:property qudt:SystemOfUnits-hasDerivedUnit ;
  sh:property qudt:SystemOfUnits-hasUnit ;
.
qudt:SystemOfUnits-applicablePhysicalConstant
  a sh:PropertyShape ;
  sh:path qudt:applicablePhysicalConstant ;
  sh:class qudt:PhysicalConstant ;
.
qudt:SystemOfUnits-hasAllowedUnit
  a sh:PropertyShape ;
  sh:path qudt:hasAllowedUnit ;
  sh:class qudt:Unit ;
.
qudt:SystemOfUnits-hasBaseUnit
  a sh:PropertyShape ;
  sh:path qudt:hasBaseUnit ;
  sh:class qudt:BaseUnit ;
.
qudt:SystemOfUnits-hasCoherentUnit
  a sh:PropertyShape ;
  sh:path qudt:hasCoherentUnit ;
  sh:class qudt:Unit ;
.
qudt:SystemOfUnits-hasDefinedUnit
  a sh:PropertyShape ;
  sh:path qudt:hasDefinedUnit ;
  sh:class qudt:Unit ;
.
qudt:SystemOfUnits-hasDerivedCoherentUnit
  a sh:PropertyShape ;
  sh:path qudt:hasDerivedCoherentUnit ;
  sh:class qudt:DerivedUnit ;
.
qudt:SystemOfUnits-hasDerivedUnit
  a sh:PropertyShape ;
  sh:path qudt:hasDerivedUnit ;
  sh:class qudt:DerivedUnit ;
.
qudt:SystemOfUnits-hasUnit
  a sh:PropertyShape ;
  sh:path qudt:hasUnit ;
  sh:class qudt:Unit ;
.
qudt:UCUMci
  a rdfs:Datatype ;
  a sh:NodeShape ;
  rdfs:comment "Lexical pattern for the case-insensitive version of UCUM code" ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "case-insensitive UCUM code" ;
  rdfs:subClassOf rdfs:Resource ;
  owl:onDatatype xsd:string ;
  owl:withRestrictions (
      [
        xsd:pattern "[\\x21-\\x60,\\x7b-\\x7e]+" ;
      ]
    ) ;
.
qudt:UCUMci-term
  a rdfs:Datatype ;
  a sh:NodeShape ;
  rdfs:comment "Lexical pattern for the terminal symbols in the case-insensitive version of UCUM code" ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "case-insensitive UCUM term" ;
  rdfs:subClassOf rdfs:Resource ;
  owl:onDatatype xsd:string ;
  owl:withRestrictions (
      [
        xsd:pattern "[\\x21,\\x23-\\x27,\\x2a,\\x2c,\\x30-\\x3c,\\x3e-\\x5a,\\x5c,\\x5e-\\x60,\\x7c,\\x7e]+" ;
      ]
    ) ;
.
qudt:UCUMcs
  a rdfs:Datatype ;
  a sh:NodeShape ;
  rdfs:comment "Lexical pattern for the case-sensitive version of UCUM code" ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "case-sensitive UCUM code" ;
  rdfs:subClassOf rdfs:Resource ;
  owl:onDatatype xsd:string ;
  owl:withRestrictions (
      [
        xsd:pattern "[\\x21-\\x7e]+" ;
      ]
    ) ;
.
qudt:UCUMcs-term
  a rdfs:Datatype ;
  a sh:NodeShape ;
  rdfs:comment "Lexical pattern for the terminal symbols in the case-sensitive version of UCUM code" ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "case-sensitive UCUM terminal" ;
  rdfs:subClassOf rdfs:Resource ;
  owl:onDatatype xsd:string ;
  owl:withRestrictions (
      [
        xsd:pattern "[\\x21,\\x23-\\x27,\\x2a,\\x2c,\\x30-\\x3c,\\x3e-\\x5a,\\x5c,\\x5e-\\x7a,\\x7c,\\x7e]+" ;
      ]
    ) ;
.
qudt:US-CustomaryUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment "Customary units used in USA not including those aligned to the SI system as specified in the 1960 agreement" ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "US-Customary unit" ;
  rdfs:subClassOf qudt:NonSI-Unit ;
.
qudt:US-SurveyUnit
  a owl:Class ;
  a sh:NodeShape ;
  rdfs:comment """US survey units (length and area) are defined slightly different to the International Customary units agreed in 1960. They retain earlier multipliers relative to the metre: 
1 mile = 5280 feet
1 foot = 1200/3297 metres
1 inch = 1/12 foot""" ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "US-Survey unit" ;
  rdfs:subClassOf qudt:StandardsUnit ;
.
qudt:Unit
  a owl:Class ;
  a sh:NodeShape ;
  qudt:informativeReference "http://dbpedia.org/resource/Category:Units_of_measure"^^xsd:anyURI ;
  qudt:informativeReference "http://www.allmeasures.com/Fullconversion.asp"^^xsd:anyURI ;
  rdfs:comment "A unit of measure, or unit, is a particular quantity value that has been chosen as a scale for measuring other quantities the same kind (more generally of equivalent dimension). For example, the meter is a quantity of length that has been rigorously defined and standardized by the BIPM (International Board of Weights and Measures). Any measurement of the length can be expressed as a number multiplied by the unit meter. More formally, the value of a physical quantity Q with respect to a unit (U) is expressed as the scalar multiple of a real number (n) and U, as  \\(Q = nU\\)."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Unit" ;
  rdfs:subClassOf qudt:Concept ;
  rdfs:subClassOf qudt:Verifiable ;
  sh:property qudt:Unit-abbreviation ;
  sh:property qudt:Unit-conversionMultiplier ;
  sh:property qudt:Unit-conversionOffset ;
  sh:property qudt:Unit-expresion ;
  sh:property qudt:Unit-hasQuantityKind ;
  sh:property qudt:Unit-iec61360Code ;
  sh:property qudt:Unit-isUnitOfSystem ;
  sh:property qudt:Unit-latexDefinition ;
  sh:property qudt:Unit-latexSymbol ;
  sh:property qudt:Unit-mathMLdefinition ;
  sh:property qudt:Unit-omUnit ;
  sh:property qudt:Unit-siUnitsExpression ;
  sh:property qudt:Unit-symbol ;
  sh:property qudt:Unit-ucumCaseInsensitiveCode ;
  sh:property qudt:Unit-ucumCaseSensitiveCode ;
  sh:property qudt:Unit-ucumCode ;
  sh:property qudt:Unit-uneceCommonCode ;
.
qudt:Unit-abbreviation
  a sh:PropertyShape ;
  sh:path qudt:abbreviation ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Unit-conversionMultiplier
  a sh:PropertyShape ;
  sh:path qudt:conversionMultiplier ;
  sh:datatype xsd:double ;
  sh:maxCount 1 ;
.
qudt:Unit-conversionOffset
  a sh:PropertyShape ;
  sh:path qudt:conversionOffset ;
  sh:datatype xsd:double ;
  sh:maxCount 1 ;
.
qudt:Unit-expresion
  a sh:PropertyShape ;
  sh:path qudt:expresion ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Unit-hasQuantityKind
  a sh:PropertyShape ;
  sh:path qudt:hasQuantityKind ;
  sh:class qudt:QuantityKind ;
.
qudt:Unit-iec61360Code
  a sh:PropertyShape ;
  sh:path qudt:iec61360Code ;
  sh:datatype xsd:string ;
.
qudt:Unit-isUnitOfSystem
  a sh:PropertyShape ;
  sh:path qudt:isUnitOfSystem ;
  sh:class qudt:SystemOfUnits ;
.
qudt:Unit-latexDefinition
  a sh:PropertyShape ;
  sh:path qudt:latexDefinition ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Unit-latexSymbol
  a sh:PropertyShape ;
  sh:path qudt:latexSymbol ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Unit-mathMLdefinition
  a sh:PropertyShape ;
  sh:path qudt:mathMLdefinition ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Unit-omUnit
  a sh:PropertyShape ;
  sh:path qudt:omUnit ;
.
qudt:Unit-siUnitsExpression
  a sh:PropertyShape ;
  sh:path qudt:siUnitsExpression ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Unit-symbol
  a sh:PropertyShape ;
  sh:path qudt:symbol ;
  sh:datatype xsd:string ;
  sh:minCount 0 ;
.
qudt:Unit-ucumCaseInsensitiveCode
  a sh:PropertyShape ;
  sh:path qudt:ucumCaseInsensitiveCode ;
  sh:datatype xsd:string ;
  sh:pattern "[\\x21,\\x23-\\x27,\\x2a,\\x2c,\\x30-\\x3c,\\x3e-\\x5a,\\x5c,\\x5e-\\x60,\\x7c,\\x7e]+" ;
.
qudt:Unit-ucumCaseSensitiveCode
  a sh:PropertyShape ;
  sh:path qudt:ucumCaseSensitiveCode ;
  sh:datatype xsd:string ;
  sh:pattern "[\\x21,\\x23-\\x27,\\x2a,\\x2c,\\x30-\\x3c,\\x3e-\\x5a,\\x5c,\\x5e-\\x7a,\\x7c,\\x7e]+" ;
.
qudt:Unit-ucumCode
  a sh:PropertyShape ;
  sh:path qudt:ucumCode ;
  sh:datatype xsd:string ;
.
qudt:Unit-uneceCommonCode
  a sh:PropertyShape ;
  sh:path qudt:uneceCommonCode ;
  sh:datatype xsd:string ;
  sh:maxCount 1 ;
.
qudt:Verifiable
  a qudt:AspectClass ;
  a sh:NodeShape ;
  rdfs:comment "An aspect class that holds properties that provide external knowledge and specifications of a given resource." ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Verifiable" ;
  rdfs:subClassOf qudt:Aspect ;
  sh:property qudt:Verifiable-dbpediaMatch ;
  sh:property qudt:Verifiable-informativeReference ;
  sh:property qudt:Verifiable-isoNormativeReference ;
  sh:property qudt:Verifiable-normativeReference ;
.
qudt:Verifiable-dbpediaMatch
  a sh:PropertyShape ;
  sh:path qudt:dbpediaMatch ;
  sh:datatype xsd:anyURI ;
  sh:minCount 0 ;
.
qudt:Verifiable-informativeReference
  a sh:PropertyShape ;
  sh:path qudt:informativeReference ;
  sh:datatype xsd:anyURI ;
  sh:minCount 0 ;
.
qudt:Verifiable-isoNormativeReference
  a sh:PropertyShape ;
  sh:path qudt:isoNormativeReference ;
  sh:datatype xsd:anyURI ;
  sh:minCount 0 ;
.
qudt:Verifiable-normativeReference
  a sh:PropertyShape ;
  sh:path qudt:normativeReference ;
  sh:datatype xsd:anyURI ;
  sh:minCount 0 ;
.
qudt:Wikipedia
  a qudt:Organization ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Wikipedia" ;
.
qudt:abbreviation
  a owl:DatatypeProperty ;
  dct:description "An abbreviation for a unit is a short ASCII string that is used in place of the full name for the unit in contexts where non-ASCII characters would be problematic, or where using the abbreviation will enhance readability. When a power of abase unit needs to be expressed, such as squares this can be done using abbreviations rather than symbols. For example, <em>sq ft</em> means <em>square foot</em>, and <em>cu ft</em> means <em>cubic foot</em>."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "abbreviation" ;
.
qudt:acronym
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "acronym" ;
.
qudt:applicableCGSUnit
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "applicable CGS unit" ;
  rdfs:subPropertyOf qudt:applicableUnit ;
.
qudt:applicableISOUnit
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "applicable ISO unit" ;
  rdfs:subPropertyOf qudt:applicableUnit ;
.
qudt:applicableImperialUnit
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "applicable Imperial unit" ;
  rdfs:subPropertyOf qudt:applicableUnit ;
.
qudt:applicablePhysicalConstant
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "applicable physical constant" ;
.
qudt:applicablePlanckUnit
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "applicable Planck unit" ;
  rdfs:subPropertyOf qudt:applicableUnit ;
.
qudt:applicableSIUnit
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "applicable SI unit" ;
  rdfs:subPropertyOf qudt:applicableUnit ;
.
qudt:applicableUSCustomaryUnit
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "applicable US Customary unit" ;
  rdfs:subPropertyOf qudt:applicableUnit ;
.
qudt:applicableUnit
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "applicable unit" ;
.
qudt:baseCGSUnitDimensions
  a qudt:LatexString ;
  a owl:DatatypeProperty ;
  dct:description "<em>qudt:baseCGSUnitDimensions</em> is a string datatype property expressing the dimensions of a unit, or quantity, as a vector over the base units in the CGS System."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "base CGS unit dimensions" ;
  rdfs:subPropertyOf qudt:baseUnitDimensions ;
.
qudt:baseDimensionEnumeration
  a owl:FunctionalProperty ;
  a owl:ObjectProperty ;
  dct:description "This property associates a system of quantities with an enumeration that enumerates the base dimensions of the system in canonical order."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "base dimension enumeration" ;
.
qudt:baseISOUnitDimensions
  a qudt:LatexString ;
  a owl:DatatypeProperty ;
  dct:description "<strong>qudt:baseISOUnitDimensions</strong> is a string datatype property expressing the dimensions of a unit, or quantity, as a vector over the base units in the ISO System."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "base ISO unit dimensions" ;
  rdfs:subPropertyOf qudt:baseUnitDimensions ;
.
qudt:baseImperialUnitDimensions
  a qudt:LatexString ;
  a owl:DatatypeProperty ;
  dct:description "<strong>qudt:baseImperialUnitDimensions</strong> is a string datatype property expressing the dimensions of a unit, or quantity, as a vector over the base units in the Imperial System."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "base Imperial unit dimensions" ;
  rdfs:subPropertyOf qudt:baseUnitDimensions ;
.
qudt:baseSIUnitDimensions
  a qudt:LatexString ;
  a owl:DatatypeProperty ;
  dct:description "<strong>qudt:baseSIUnitDimensions</strong> is a string datatype property expressing the dimensions of a unit, or quantity, as a vector over the base units. For example, in the SI system \\(capacitance\\) has the unit \\(Farad\\) and base unit dimensions of \\(C^2 \\cdot s^2 / (kg \\cdot m^2)\\)."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "base SI unit dimensions" ;
  rdfs:subPropertyOf qudt:baseUnitDimensions ;
.
qudt:baseUSCustomaryUnitDimensions
  a qudt:LatexString ;
  a owl:DatatypeProperty ;
  dct:description "\"qudt:baseUSCustomaryUnitDimensions\" is a string datatype property expressing the dimensions of a unit, or quantity, as a vector over the base units in the US Customary System."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "base US Customary unit dimensions" ;
  rdfs:subPropertyOf qudt:baseUnitDimensions ;
.
qudt:baseUnitDimensions
  a qudt:LatexString ;
  a owl:DatatypeProperty ;
  dct:description "\"qudt:baseUnitDimensions\" is a string datatype property expressing the dimensions of a unit, or quantity, as a vector over the base units."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "base unit dimensions" ;
.
qudt:belongsToSystemOfQuantities
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "belongs to system of quantities" ;
.
qudt:categorizedAs
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "categorized as" ;
.
qudt:citation
  a owl:AnnotationProperty ;
  qudt:description "Used to provide an annotation for an informative reference."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "citation" ;
.
qudt:code
  a owl:DatatypeProperty ;
  dct:description "A code is a string that uniquely identifies a QUDT concept.  The code is constructed from the designator."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "code" ;
.
qudt:coherentUnitSystem
  a owl:FunctionalProperty ;
  a owl:ObjectProperty ;
  dct:description "<p>A system of units is coherent with respect to a system of quantities and equations if the system of units is chosen in such a way that the equations between numerical values have exactly the same form (including the numerical factors) as the corresponding equations between the quantities. In such a coherent system, no numerical factor other than the number 1 ever occurs in the expressions for the derived units in terms of the base units. For example, the \\(newton\\) and the \\(joule\\). These two are, respectively, the force that causes one kilogram to be accelerated at 1 metre per (1) second per (1) second, and the work done by 1 newton acting over 1 metre. Being coherent refers to this consistent use of 1. In the old c.g.s. system , with its base units the centimetre and the gram, the corresponding coherent units were the dyne and the erg, respectively the force that causes 1 gram to be accelerated at 1 centimetre per (1) second per (1) second, and the work done by 1 dyne acting over 1 centimetre. So \\(1\\,newton = 10^5 dyne\\), \\(1 joule = 10^7 erg\\), making each of the four compatible in a decimal sense within its respective other system, but not coherent therein.</p>"^^rdf:HTML ;
  qudt:informativeReference "https://en.wikipedia.org/wiki/Coherence_(units_of_measurement)"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "coherent unit system" ;
  rdfs:subPropertyOf qudt:hasUnitSystem ;
.
qudt:conversionCoefficient
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "conversion coefficient" ;
.
qudt:conversionMultiplier
  a owl:DatatypeProperty ;
  a owl:FunctionalProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "conversion multiplier" ;
.
qudt:conversionOffset
  a owl:DatatypeProperty ;
  a owl:FunctionalProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "conversion offset" ;
.
qudt:currencyExponent
  a owl:DatatypeProperty ;
  a owl:FunctionalProperty ;
  dct:description "The currency exponent indicates the number of decimal places between a major currency unit and its minor currency unit. For example, the US dollar is the major currency unit of the United States, and the US cent is the minor currency unit. Since one cent is 1/100 of a dollar, the US dollar has a currency exponent of 2. However, the Japanese Yen has no minor currency units, so the yen has a currency exponent of 0."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "currency exponent" ;
.
qudt:dataStructure
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "data structure" ;
.
qudt:dbpediaMatch
  a owl:AnnotationProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "dbpedia match" ;
.
qudt:default
  a owl:ObjectProperty ;
  dct:description "The default element in an enumeration"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "default" ;
.
qudt:definitionReference
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "definition reference" ;
.
qudt:denominatorDimensionVector
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "denominator dimension vector" ;
.
qudt:derivedQuantityKindOfSystem
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "derived quantity kind of system" ;
  rdfs:subPropertyOf qudt:isQuantityKindOf ;
  owl:inverseOf qudt:systemDerivedQuantityKind ;
.
qudt:description
  a qudt:LatexString ;
  a owl:AnnotationProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "description" ;
  rdfs:subPropertyOf dct:description ;
.
qudt:dimensionExponent
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "dimension exponent" ;
.
qudt:dimensionExponentForAmountOfSubstance
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for amount of substance" ;
  rdfs:subPropertyOf qudt:dimensionExponent ;
.
qudt:dimensionExponentForElectricCurrent
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for electric current" ;
  rdfs:subPropertyOf qudt:dimensionExponent ;
.
qudt:dimensionExponentForLength
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for length" ;
  rdfs:subPropertyOf qudt:dimensionExponent ;
.
qudt:dimensionExponentForLuminousIntensity
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for luminous intensity" ;
  rdfs:subPropertyOf qudt:dimensionExponent ;
.
qudt:dimensionExponentForMass
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for mass" ;
  rdfs:subPropertyOf qudt:dimensionExponent ;
.
qudt:dimensionExponentForThermodynamicTemperature
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for thermodynamic temperature" ;
  rdfs:subPropertyOf qudt:dimensionExponent ;
.
qudt:dimensionExponentForTime
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "dimension exponent for time" ;
  rdfs:subPropertyOf qudt:dimensionExponent ;
.
qudt:dimensionInverse
  a owl:FunctionalProperty ;
  a owl:InverseFunctionalProperty ;
  a owl:ObjectProperty ;
  a owl:SymmetricProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "dimension inverse" ;
  owl:inverseOf qudt:dimensionInverse ;
.
qudt:dimensionVectorForSI
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "dimension vector for SI" ;
.
qudt:dimensionlessExponent
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "dimensionless exponent" ;
  rdfs:subPropertyOf qudt:dimensionExponent ;
.
qudt:element
  a owl:ObjectProperty ;
  dct:description "An element of an enumeration"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "element" ;
.
qudt:elementKind
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "element kind" ;
.
qudt:exactConstant
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "exact constant" ;
.
qudt:exactMatch
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "exact match" ;
.
qudt:example
  a qudt:LatexString ;
  a owl:AnnotationProperty ;
  rdfs:comment "The 'qudt:example' property is used to annotate an instance of a class with a reference to a concept that is an example. The type of this property is 'rdf:Property'. This allows both scalar and object ranges."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "example" ;
.
qudt:expression
  a owl:AnnotationProperty ;
  dct:description "An 'expression' is a finite combination of symbols that are well-formed according to rules that apply to units of measure, quantity kinds and their dimensions."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "expression" ;
.
qudt:fieldCode
  a owl:AnnotationProperty ;
  qudt:description "A field code is a generic property for representing unique codes that make up other identifers. For example each QuantityKind class caries a domain code as its field code."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "field code" ;
.
qudt:figure
  a owl:AnnotationProperty ;
  dct:description "Provides a link to an image."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "figure" ;
.
qudt:figureCaption
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "figure caption" ;
.
qudt:figureLabel
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "figure label" ;
.
qudt:floatPercentage
  a rdfs:Datatype ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "float percentage" ;
  rdfs:subClassOf xsd:float ;
  owl:equivalentClass [
      a rdfs:Datatype ;
      rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
      owl:onDatatype xsd:float ;
      owl:withRestrictions (
          [
            xsd:minInclusive "0.00"^^xsd:float ;
          ]
          [
            xsd:maxInclusive "100.00"^^xsd:float ;
          ]
        ) ;
    ] ;
.
qudt:generalization
  a owl:ObjectProperty ;
  dct:description """This property relates a quantity kind to its generalization. A quantity kind, PARENT, is a generalization of the quantity kind CHILD only if:

1. PARENT and CHILD have the same dimensions in every system of quantities;
2. Every unit that is a measure of quantities of kind CHILD is also a valid measure of quantities of kind PARENT."""^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "generalization" ;
  owl:inverseOf qudt:specialization ;
.
qudt:guidance
  a owl:AnnotationProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "guidance" ;
.
qudt:hasAllowedUnit
  a owl:ObjectProperty ;
  dct:description "This property relates a unit system with a unit of measure that is not defined by or part of the system, but is allowed for use within the system. An allowed unit must be convertible to some dimensionally eqiuvalent unit that is defined by the system."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "allowed unit" ;
  rdfs:subPropertyOf qudt:hasUnit ;
.
qudt:hasBaseQuantityKind
  a owl:FunctionalProperty ;
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has base quantity kind" ;
  rdfs:subPropertyOf qudt:hasQuantityKind ;
  owl:inverseOf qudt:isBaseQuantityKindOfSystem ;
.
qudt:hasBaseUnit
  a owl:ObjectProperty ;
  dct:description "This property relates a system of units to a base unit defined within the system. The base units of a system are used to define the derived units of the system by expressing the derived units as products of the base units raised to a rational power."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "base unit" ;
  rdfs:subPropertyOf qudt:hasCoherentUnit ;
  owl:inverseOf qudt:isBaseUnitOfSystem ;
.
qudt:hasCoherentUnit
  a owl:ObjectProperty ;
  dct:description "A coherent unit of measurement for a unit system is a defined unit that may be expressed as a product of powers of the system's base units with the proportionality factor of one."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "coherent unit" ;
  rdfs:subPropertyOf qudt:hasDefinedUnit ;
  owl:inverseOf qudt:isCoherentUnitOfSystem ;
.
qudt:hasDefinedUnit
  a owl:ObjectProperty ;
  dct:description "This property relates a unit system with a unit of measure that is defined by the system."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "defined unit" ;
  rdfs:subPropertyOf qudt:hasUnit ;
.
qudt:hasDenominatorPart
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has quantity kind dimension vector denominator part" ;
.
qudt:hasDerivedCoherentUnit
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "derived coherent unit" ;
  rdfs:subPropertyOf qudt:hasCoherentUnit ;
  rdfs:subPropertyOf qudt:hasDerivedUnit ;
  owl:inverseOf qudt:isDerivedCoherentUnitOfSystem ;
.
qudt:hasDerivedNonCoherentUnit
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has coherent derived unit" ;
  rdfs:subPropertyOf qudt:hasDerivedUnit ;
  owl:inverseOf qudt:isDerivedNonCoherentUnitOfSystem ;
.
qudt:hasDerivedUnit
  a owl:ObjectProperty ;
  dct:description "This property relates a system of units to a unit of measure that is defined within the system in terms of the base units for the system. That is, the derived unit is defined as a product of the base units for the system raised to some rational power."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "derived unit" ;
.
qudt:hasDimension
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has dimension" ;
.
qudt:hasDimensionVector
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has dimension vector" ;
.
qudt:hasNonCoherentUnit
  a owl:DeprecatedProperty ;
  a owl:ObjectProperty ;
  dct:description "A coherent unit of measurement for a unit system is a defined unit that may be expressed as a product of powers of the system's base units with the proportionality factor of one."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has non-coherent unit" ;
  rdfs:subPropertyOf qudt:hasDefinedUnit ;
  owl:inverseOf qudt:isCoherentUnitOfSystem ;
.
qudt:hasNumeratorPart
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has quantity kind dimension vector numerator part" ;
.
qudt:hasPrefixUnit
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "prefix unit" ;
  rdfs:subPropertyOf qudt:hasDefinedUnit ;
.
qudt:hasQuantity
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has quantity" ;
.
qudt:hasQuantityKind
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has quantity kind" ;
  owl:inverseOf qudt:isQuantityKindOf ;
.
qudt:hasReferenceQuantityKind
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has reference quantity kind" ;
.
qudt:hasRule
  a owl:AnnotationProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has rule" ;
.
qudt:hasUnit
  a owl:ObjectProperty ;
  dct:description "This property relates a system of units with a unit of measure that is either a) defined by the system, or b) accepted for use by the system and is convertible to a unit of equivalent dimension that is defined by the system. Systems of units may distinguish between base and derived units. Base units are the units which measure the base quantities for the corresponding system of quantities. The base units are used to define units for all other quantities as products of powers of the base units. Such units are called derived units for the system."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has unit" ;
  owl:inverseOf qudt:isUnitOfSystem ;
.
qudt:hasUnitSystem
  a owl:FunctionalProperty ;
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has unit system" ;
.
qudt:hasVocabulary
  a owl:AnnotationProperty ;
  qudt:description "Used to relate a class to one or more graphs where vocabularies for the class are defined."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "has vocabulary" ;
.
qudt:height
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "height" ;
.
qudt:id
  a owl:DatatypeProperty ;
  dct:description "The \"qudt:id\" is an identifier string that uniquely identifies a QUDT concept.  The identifier is constructed using a prefix. For example, units are coded using the pattern: \"UCCCENNNN\", where \"CCC\" is a numeric code or a category and \"NNNN\" is a digit string for a member element of that category. For scaled units there may be an addition field that has the format \"QNN\" where \"NN\" is a digit string representing an exponent power, and \"Q\" is a qualifier that indicates with the code \"P\" that the power is a positive decimal exponent, or the code \"N\" for a negative decimal exponent, or the code \"B\" for binary positive exponents."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "id" ;
.
qudt:iec61360Code
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "iec-61360 code" ;
.
qudt:image
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "image" ;
.
qudt:imageLocation
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "image location" ;
.
qudt:informativeReference
  a owl:AnnotationProperty ;
  dct:description "Provides a way to reference a source that provided useful but non-normative information."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "informative reference" ;
.
qudt:integerPercentage
  a rdfs:Datatype ;
  a sh:NodeShape ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "integer percentage" ;
  rdfs:subClassOf xsd:integer ;
  owl:equivalentClass [
      a rdfs:Datatype ;
      rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
      owl:onDatatype xsd:integer ;
      owl:withRestrictions (
          [
            xsd:minInclusive 0 ;
          ]
          [
            xsd:maxInclusive 100 ;
          ]
        ) ;
    ] ;
.
qudt:isAllowedUnitOfSystem
  a owl:ObjectProperty ;
  dct:description "This property relates a unit of measure with a unit system that does not define the unit, but allows its use within the system. An allowed unit must be convertible to some dimensionally eqiuvalent unit that is defined by the system."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "allowed unit of system" ;
  rdfs:subPropertyOf qudt:isUnitOfSystem ;
  owl:inverseOf qudt:hasAllowedUnit ;
.
qudt:isBaseQuantityKindOfSystem
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "is base quantity kind of system" ;
  rdfs:subPropertyOf qudt:isQuantityKindOf ;
  owl:inverseOf qudt:hasBaseQuantityKind ;
.
qudt:isBaseUnitOfSystem
  a owl:ObjectProperty ;
  dct:description "This property relates a unit of measure to the system of units in which it is defined as a base unit for the system. The base units of a system are used to define the derived units of the system by expressing the derived units as products of the base units raised to a rational power."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "is base unit of system" ;
  rdfs:subPropertyOf qudt:isCoherentUnitOfSystem ;
  owl:inverseOf qudt:hasBaseUnit ;
.
qudt:isCoherentUnitOfSystem
  a owl:DeprecatedProperty ;
  a owl:ObjectProperty ;
  dct:description "A coherent unit of measurement for a unit system is a defined unit that may be expressed as a product of powers of the system's base units with the proportionality factor of one. A system of units is coherent with respect to a system of quantities and equations if the system of units is chosen in such a way that the equations between numerical values have exactly the same form (including the numerical factors) as the corresponding equations between the quantities. For example, the $newton$ and the $joule$. These two are, respectively, the force that causes one kilogram to be accelerated at 1 metre per (1) second per (1) second, and the work done by 1 newton acting over 1 metre. Being coherent refers to this consistent use of 1. In the old c.g.s. system , with its base units the centimetre and the gram, the corresponding coherent units were the dyne and the erg, respectively the force that causes 1 gram to be accelerated at 1 centimetre per (1) second per (1) second, and the work done by 1 dyne acting over 1 centimetre. So $1 newton = 10^5 dyne$, $1 joule = 10^7 erg$, making each of the four compatible in a decimal sense within its respective other system, but not coherent therein."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "is coherent unit of system" ;
  rdfs:subPropertyOf qudt:isDefinedUnitOfSystem ;
  owl:inverseOf qudt:hasCoherentUnit ;
.
qudt:isDefinedUnitOfSystem
  a owl:ObjectProperty ;
  dct:description "This property relates a unit of measure with the unit system that defines the unit."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "defined unit of system" ;
  rdfs:subPropertyOf qudt:isUnitOfSystem ;
  owl:inverseOf qudt:hasDefinedUnit ;
.
qudt:isDerivedCoherentUnitOfSystem
  a owl:ObjectProperty ;
  dct:description "This property relates a unit of measure to the unit system in which the unit is derived from the system's base units with a proportionality constant of one."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "is coherent derived unit of system" ;
  rdfs:subPropertyOf qudt:isCoherentUnitOfSystem ;
  rdfs:subPropertyOf qudt:isDerivedUnitOfSystem ;
  owl:inverseOf qudt:hasDerivedCoherentUnit ;
.
qudt:isDerivedNonCoherentUnitOfSystem
  a owl:ObjectProperty ;
  dct:description "This property relates a unit of measure to the unit system in which the unit is derived from the system's base units without proportionality constant of one."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "is non-coherent derived unit of system" ;
  rdfs:subPropertyOf qudt:isDerivedUnitOfSystem ;
  owl:inverseOf qudt:hasDerivedNonCoherentUnit ;
.
qudt:isDerivedUnitOfSystem
  a owl:ObjectProperty ;
  dct:description "This property relates a unit of measure to the system of units in which it is defined as a derived unit. That is, the derived unit is defined as a product of the base units for the system raised to some rational power."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "is derived unit of system" ;
  rdfs:subPropertyOf qudt:isUnitOfSystem ;
  owl:inverseOf qudt:hasDerivedUnit ;
.
qudt:isDimensionInSystem
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "is dimension in system" ;
.
qudt:isMetricUnit
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "is metric unit" ;
.
qudt:isQuantityKindOf
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "is quantity kind of" ;
  owl:inverseOf qudt:hasQuantityKind ;
.
qudt:isScalingOf
  a owl:ObjectProperty ;
  a owl:TransitiveProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "is scaling of" ;
.
qudt:isUnitOfSystem
  a owl:ObjectProperty ;
  dct:description "This property relates a unit of measure with a system of units that either a) defines the unit or b) allows the unit to be used within the system."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "is unit of system" ;
  owl:inverseOf qudt:hasUnit ;
.
qudt:isoNormativeReference
  a owl:AnnotationProperty ;
  dct:description "Provides a way to reference the ISO unit definition."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "normative reference (ISO)" ;
  rdfs:subPropertyOf qudt:normativeReference ;
.
qudt:landscape
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "landscape" ;
.
qudt:latexDefinition
  a qudt:LatexString ;
  a owl:AnnotationProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "latex definition" ;
.
qudt:latexSymbol
  a qudt:LatexString ;
  a owl:DatatypeProperty ;
  dct:description "The symbol is a glyph that is used to represent some concept, typically a unit or a quantity, in a compact form. For example, the symbol for an Ohm is $\\ohm$. This contrasts with 'unit:abbreviation', which gives a short alphanumeric abbreviation for the unit, 'ohm' for Ohm."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "latex symbol" ;
  rdfs:subPropertyOf qudt:literal ;
.
qudt:literal
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "literal" ;
  rdfs:subPropertyOf dtype:literal ;
.
qudt:longDescription
  a owl:DatatypeProperty ;
  dct:description "A long description is used for documentation purposes. The property 'qudt:description' is defined for short descriptions, that is those that are less than 1024 characters."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "long description" ;
.
qudt:mathDefinition
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "math definition" ;
.
qudt:mathMLdefinition
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "mathML definition" ;
  rdfs:subPropertyOf qudt:mathDefinition ;
.
qudt:negativeDeltaLimit
  a owl:DatatypeProperty ;
  dct:description "A negative change limit between consecutive sample values for a parameter. The Negative Delta may be the encoded value or engineering units value depending on whether or not a Calibrator is defined."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "negative delta limit" ;
.
qudt:normativeReference
  a owl:AnnotationProperty ;
  dct:description "Provides a way to reference information that is an authorative source providing a standard definition"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "normative reference" ;
.
qudt:numeratorDimensionVector
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "numerator dimension vector" ;
.
qudt:numericValue
  a owl:DatatypeProperty ;
  rdfs:label "numeric value" ;
.
qudt:omUnit
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "om unit" ;
.
qudt:onlineReference
  a owl:AnnotationProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "online reference" ;
.
qudt:order
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "order" ;
.
qudt:outOfScope
  a owl:AnnotationProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "out of scope" ;
.
qudt:permissibleMaths
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "permissible maths" ;
.
qudt:permissibleTransformation
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "permissible transformation" ;
.
qudt:positiveDeltaLimit
  a owl:DatatypeProperty ;
  dct:description "A positive change limit between consecutive sample values for a parameter. The Positive Delta may be the encoded value or engineering units value depending on whether or not a Calibrator is defined."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "Positive delta limit" ;
.
qudt:qkdvDenominator
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "denominator dimension vector" ;
.
qudt:qkdvNumerator
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "numerator dimension vector" ;
.
qudt:quantity
  a owl:ObjectProperty ;
  dct:description "a property to relate an observable thing with a quantity (qud:Quantity)"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "quantity" ;
.
qudt:quantityValue
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "quantity value" ;
.
qudt:rationale
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "rationale" ;
.
qudt:reference
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "reference" ;
.
qudt:referenceUnit
  a owl:FunctionalProperty ;
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "reference unit" ;
.
qudt:relativeStandardUncertainty
  a owl:DatatypeProperty ;
  dct:description "The relative standard uncertainty of a measurement is the (absolute) standard uncertainty divided by the magnitude of the exact value."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "relative standard uncertainty" ;
.
qudt:relevantQuantityKind
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "relevant quantity kind" ;
.
qudt:ruleType
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "rule type" ;
.
qudt:scaleType
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "scale type" ;
.
qudt:siUnitsExpression
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "si units expression" ;
.
qudt:specialization
  a owl:ObjectProperty ;
  dct:description "This property relates a quantity kind to its specialization(s). For example, linear velocity and angular velocity are both specializations of velocity."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "specialization" ;
  owl:inverseOf qudt:generalization ;
.
qudt:standardUncertainty
  a owl:DatatypeProperty ;
  dct:description "The standard uncertainty of a quantity is the estimated standard deviation of the mean taken from a series of measurements."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "standard uncertainty" ;
.
qudt:symbol
  a qudt:LatexString ;
  a owl:DatatypeProperty ;
  dct:description "The symbol is a glyph that is used to represent some concept, typically a unit or a quantity, in a compact form. For example, the symbol for an Ohm is $\\ohm$. This contrasts with 'unit:abbreviation', which gives a short alphanumeric abbreviation for the unit, 'ohm' for Ohm."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "symbol" ;
  rdfs:subPropertyOf qudt:literal ;
.
qudt:systemDefinition
  a owl:ObjectProperty ;
  a owl:TransitiveProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "system definition" ;
.
qudt:systemDerivedQuantityKind
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "system derived quantity kind" ;
  rdfs:subPropertyOf qudt:hasQuantityKind ;
  owl:inverseOf qudt:derivedQuantityKindOfSystem ;
.
qudt:systemDimension
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "system dimension" ;
.
qudt:ucumCaseInsensitiveCode
  a owl:DatatypeProperty ;
  dct:description "<em>ucumCode</em> associates a QUDT unit with a UCUM case-insensitive code."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "ucum case-insensitive code" ;
  rdfs:subPropertyOf qudt:ucumCode ;
.
qudt:ucumCaseSensitiveCode
  a owl:DatatypeProperty ;
  dct:description "<em>ucumCode</em> associates a QUDT unit with with a UCUM case-sensitive code."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "ucum case-sensitive code" ;
  rdfs:subPropertyOf qudt:ucumCode ;
.
qudt:ucumCode
  a owl:DatatypeProperty ;
  dct:description "<p><em>ucumCode</em> associates a QUDT unit with its UCUM counterpart.</p><p>In SHACL the values are derived from specifi ucum properties using 'sh:values'.</p>"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "ucum code" ;
  rdfs:subPropertyOf skos:notation ;
.
qudt:uneceCommonCode
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "unece common code" ;
.
qudt:unit
  a owl:ObjectProperty ;
  dct:description "A reference to the unit of measure of a quantity (variable or constant) of interest."^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "unit" ;
  owl:inverseOf qudt:unitFor ;
.
qudt:unitFor
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "unit for" ;
  owl:inverseOf qudt:unit ;
.
qudt:url
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "url" ;
.
qudt:value
  a owl:ObjectProperty ;
  dct:description "A property to relate an observable thing with a value that can be of any simple XSD type"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "value" ;
.
qudt:valueQuantity
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "value for quantity" ;
  owl:inverseOf qudt:quantityValue ;
.
qudt:vectorMagnitude
  a owl:DatatypeProperty ;
  a owl:FunctionalProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "vector magnitude" ;
.
qudt:width
  a owl:DatatypeProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "width" ;
.
voag:QUDT-SchemaCatalogEntry
  a vaem:CatalogEntry ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "QUDT Schema Catalog Entry" ;
.
voag:supersededBy
  a owl:ObjectProperty ;
  rdfs:isDefinedBy <http://voag.linkedmodel.org/schema/voag> ;
  rdfs:label "superseded by" ;
.
<http://www.linkedmodel.org/schema/dtype>
  vaem:namespace "http://www.linkedmodel.org/schema/dtype#"^^xsd:anyURI ;
  vaem:namespacePrefix "dtype" ;
.
dtype:GMD_DTYPE
  vaem:graphName "DTYPE" ;
.
vaem:GMD_QUDT-SCHEMA
  a vaem:GraphMetaData ;
  dct:author "Ralph Hodgson" ;
  dct:contributor "Daniel Mekonnen" ;
  dct:contributor "David Price" ;
  dct:contributor "Jack Hodges" ;
  dct:contributor "James E. Masters" ;
  dct:contributor "Simon Cox" ;
  dct:contributor "Steve Ray" ;
  dct:created "2011-04-20"^^xsd:date ;
  dct:creator "Ralph Hodgson" ;
  dct:description """<p class=\"lm-para\">The QUDT, or \"Quantity, Unit, Dimension and Type\" schema defines the base classes properties, and restrictions used for modeling physical quantities, units of measure, and their dimensions in various measurement systems. The goal of the QUDT ontology is to provide a unified model of, measurable quantities, units for measuring different kinds of quantities, the numerical values of quantities in different units of measure and the data structures and data types used to store and manipulate these objects in software.</p>

<p class=\"lm-para\">Except for unit prefixes, all units are specified in separate vocabularies. Descriptions are provided in both HTML and LaTeX formats. A quantity is a measure of an observable phenomenon, that, when associated with something, becomes a property of that thing; a particular object, event, or physical system. </p>

<p class=\"lm-para\">A quantity has meaning in the context of a measurement (i.e. the thing measured, the measured value, the accuracy of measurement, etc.) whereas the underlying quantity kind is independent of any particular measurement. Thus, length is a quantity kind while the height of a rocket is a specific quantity of length; its magnitude that may be expressed in meters, feet, inches, etc.  Or, as stated at Wikipedia, in the language of measurement, quantities are quantifiable aspects of the world, such as time, distance, velocity, mass, momentum, energy, and weight, and units are used to describe their measure. Many of these quantities are related to each other by various physical laws, and as a result the units of some of the quantities can be expressed as products (or ratios) of powers of other units (e.g., momentum is mass times velocity and velocity is measured in distance divided by time).</p>"""^^rdf:HTML ;
  dct:modified "2020-02-02T12:30:51.335-07:00"^^xsd:dateTime ;
  dct:rights "The QUDT Ontologies are issued under a Creative Commons Attribution 4.0 International License (CC BY 4.0), available at https://creativecommons.org/licenses/by/4.0/. Attribution should be made to QUDT.org" ;
  dct:subject "QUDT" ;
  dct:title "QUDT Schema - Version 2.1.2" ;
  qudt:informativeReference "http://unitsofmeasure.org/trac"^^xsd:anyURI ;
  qudt:informativeReference "http://www.bipm.org/en/publications/si-brochure"^^xsd:anyURI ;
  qudt:informativeReference "http://www.bipm.org/utils/common/documents/jcgm/JCGM_200_2008.pdf"^^xsd:anyURI ;
  qudt:informativeReference "https://books.google.com/books?id=pIlCAAAAIAAJ&dq=dimensional+analysis&hl=en"^^xsd:anyURI ;
  qudt:informativeReference "https://www.nist.gov/physical-measurement-laboratory/special-publication-811"^^xsd:anyURI ;
  vaem:graphName "qudt" ;
  vaem:graphTitle "Quantities, Units, Dimensions and Types (QUDT) Schema - Version 2.1.2" ;
  vaem:hasGraphRole vaem:SchemaGraph ;
  vaem:hasOwner vaem:QUDT ;
  vaem:hasSteward vaem:QUDT ;
  vaem:intent "Specifies the schema for quantities, units and dimensions. Types are defined in other schemas." ;
  vaem:isMetadataFor <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  vaem:latestPublishedVersion "http://www.qudt.org/doc/2020/02/DOC_SCHEMA-QUDT-v2.1.html"^^xsd:anyURI ;
  vaem:logo "http://www.linkedmodel.org/lib/lm/images/logos/qudt_logo-300x110.png"^^xsd:anyURI ;
  vaem:namespace "http://qudt.org/schema/qudt/" ;
  vaem:namespacePrefix "qudt" ;
  vaem:owner "qudt.org" ;
  vaem:previousPublishedVersion "http://www.qudt.org/doc/2019/10/DOC_SCHEMA-QUDT-v2.1.html"^^xsd:anyURI ;
  vaem:revision "2.1.2" ;
  vaem:turtleFileURL "http://qudt.org/2.1/schema/qudt"^^xsd:anyURI ;
  vaem:usesNonImportedResource dct:abstract ;
  vaem:usesNonImportedResource dct:author ;
  vaem:usesNonImportedResource dct:contributor ;
  vaem:usesNonImportedResource dct:created ;
  vaem:usesNonImportedResource dct:description ;
  vaem:usesNonImportedResource dct:modified ;
  vaem:usesNonImportedResource dct:rights ;
  vaem:usesNonImportedResource dct:source ;
  vaem:usesNonImportedResource dct:subject ;
  vaem:usesNonImportedResource dct:title ;
  vaem:usesNonImportedResource voag:QUDT-Attribution ;
  vaem:withAttributionTo voag:QUDT-Attribution ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "QUDT Schema - Version 2.1.2" ;
  owl:versionIRI <http://qudt.org/2.1.2/schema/shacl/qudt> ;
.
vaem:QUDT
  a vaem:Party ;
  dct:description "QUDT is a non-profit organization that governs the QUDT ontologies."^^rdf:HTML ;
  vaem:graphName "qudt.org" ;
  vaem:website "http:/www.qudt.org"^^xsd:anyURI ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "QUDT" ;
.
vaem:isElaboratedBy
  a owl:AnnotationProperty ;
  rdfs:isDefinedBy <http://qudt.org/2.1.2/schema/shacl/qudt> ;
  rdfs:label "is elaborated by" ;
.
rdfs:comment
  a qudt:LatexString ;
.
<http://www.w3.org/2004/02/skos/core>
  vaem:namespace "http://www.w3.org/2004/02/skos/core#"^^xsd:anyURI ;
  vaem:namespacePrefix "skos" ;
.
prov:wasDerivedFrom
  a owl:ObjectProperty ;
  rdfs:isDefinedBy prov: ;
  rdfs:label "was derived from" ;
.
