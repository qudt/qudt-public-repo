# baseURI: http://qudt.org/2.1/schema/shacl/overlay/qudt
# imports: http://qudt.org/2.1/schema/shacl/qudt
# imports: http://www.w3.org/ns/shacl#

@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix quantitykind: <http://qudt.org/vocab/quantitykind/> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix qudt.type: <http://qudt.org/vocab/type/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix unit: <http://qudt.org/vocab/unit/> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix voag: <http://voag.linkedmodel.org/schema/voag#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://qudt.org/2.1/schema/shacl/overlay/qudt>
  a owl:Ontology ;
  rdfs:label "QUDT SHACL Schema Supplement- Version 2.1" ;
  owl:imports <http://qudt.org/2.1/schema/shacl/qudt> ;
  owl:imports sh: ;
  sh:declare [
      a sh:PrefixDeclaration ;
      sh:namespace "http://qudt.org/schema/qudt/"^^xsd:anyURI ;
      sh:prefix "qudt" ;
    ] ;
  sh:declare [
      a sh:PrefixDeclaration ;
      sh:namespace "http://www.w3.org/2004/02/skos/core#"^^xsd:anyURI ;
      sh:prefix "skos" ;
    ] ;
.
qudt:ApplicableUnitsGroup
  a sh:PropertyGroup ;
  rdfs:label "Applicable Units" ;
  sh:order "50"^^xsd:decimal ;
.
qudt:Citation-qudt_description
  sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
.
qudt:Concept
  sh:property qudt:Concept-rdf_type ;
  sh:property qudt:Concept-rdfs_label ;
.
qudt:Concept-dct_description
  sh:deactivated true ;
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
  sh:order "25"^^xsd:decimal ;
.
qudt:Concept-dcterms_description
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:name "dcterms description" ;
  sh:order "60"^^xsd:decimal ;
.
qudt:Concept-qudt_description
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:name "full description" ;
  sh:order "60"^^xsd:decimal ;
.
qudt:Concept-qudt_guidance
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "60"^^xsd:decimal ;
.
qudt:Concept-qudt_plainTextDescription
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "40"^^xsd:decimal ;
.
qudt:Concept-rdf_type
  a sh:PropertyShape ;
  sh:path rdf:type ;
  sh:minCount 1 ;
.
qudt:Concept-rdfs_label
  a sh:PropertyShape ;
  sh:path rdfs:label ;
  sh:minCount 1 ;
  sh:order "10"^^xsd:decimal ;
.
qudt:Concept-rdfs_seeAlso
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "900"^^xsd:decimal ;
.
qudt:ConceptDescriptionPropertyGroup
  a sh:PropertyGroup ;
  rdfs:label "Descriptions" ;
  sh:order "20"^^xsd:decimal ;
.
qudt:EnumeratedValue-qudt_description
  sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
.
qudt:HTMLOrStringOrLangStringOrLatexString
  a rdf:List ;
  rdf:first [
      sh:datatype rdf:HTML ;
    ] ;
  rdf:rest (
      [
        sh:datatype xsd:string ;
      ]
      [
        sh:datatype rdf:langString ;
      ]
      [
        sh:datatype qudt:LatexString ;
      ]
    ) ;
  rdfs:comment "Defines an rdf:List that can be used in property constraints as value for sh:or to indicate that all values of a property must be either rdf:HTML, xsd:string or rdf:langString, or a qudf:LatexString" ;
  rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt.shapes.all> ;
  rdfs:label "HTML or string or langString or LatexString" ;
.
qudt:Narratable
  a qudt:AspectClass ;
  a sh:NodeShape ;
  rdfs:comment "<p><em>Narratable</em> specifies properties that provide for documentation and references.</p>"^^rdf:HTML ;
  rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt> ;
  rdfs:label "Narratable" ;
  rdfs:subClassOf qudt:Aspect ;
.
qudt:NumericUnionList
  a rdf:List ;
  rdf:first [
      sh:datatype xsd:string ;
    ] ;
  rdf:rest (
      [
        sh:datatype xsd:nonNegativeInteger ;
      ]
      [
        sh:datatype xsd:positiveInteger ;
      ]
      [
        sh:datatype xsd:integer ;
      ]
      [
        sh:datatype xsd:int ;
      ]
      [
        sh:datatype xsd:float ;
      ]
      [
        sh:datatype xsd:double ;
      ]
      [
        sh:datatype xsd:decimal ;
      ]
    ) ;
  rdfs:comment "An rdf:List that can be used in property constraints as value for sh:or to indicate that all values of a property must be either xsd:integer, xsd:float, xsd:double or xsd:decimal." ;
  rdfs:isDefinedBy <http://qudt.org/2.1/schema/qudt.shapes.all> ;
  rdfs:label "Numeric Union List" ;
.
qudt:Quantity-qudt_applicableUnit
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "100"^^xsd:decimal ;
.
qudt:Quantity-qudt_baseUnitDimensions
  sh:group qudt:QuantityDimensionsGroup ;
  sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
  sh:order "20"^^xsd:decimal ;
.
qudt:Quantity-qudt_description
  sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
.
qudt:Quantity-qudt_hasContextualQuantityKind
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "60"^^xsd:decimal ;
.
qudt:Quantity-qudt_latexDefinition
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "40"^^xsd:decimal ;
.
qudt:Quantity-qudt_latexSymbol
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "10"^^xsd:decimal ;
.
qudt:Quantity-qudt_mathMLdefinition
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "40"^^xsd:decimal ;
.
qudt:QuantityDimensionsGroup
  a sh:PropertyGroup ;
  rdfs:label "Dimensions" ;
  sh:order "40"^^xsd:decimal ;
.
qudt:QuantityKind-appropriateUnit
  a sh:NodeShape ;
  sh:property [
      sh:path qudt:appropriateUnit ;
      sh:values [
          sh:prefixes <http://qudt.org/2.1/schema/shacl/overlay/qudt> ;
          sh:select """SELECT DISTINCT ?unit
WHERE {
{
?unit qudt:hasQuantityKind $this .
}
UNION
{
NOT EXISTS {
?unit qudt:hasQuantityKind $this .
} .
$this skos:broader ?parent1 . 
?parent1 qudt:appropriateUnit ?unit .
} .
} """ ;
        ] ;
    ] ;
  sh:targetClass qudt:QuantityKind ;
.
qudt:QuantityKind-qudt_applicableCGSUnit
  sh:group qudt:ApplicableUnitsGroup ;
.
qudt:QuantityKind-qudt_applicableSIUnit
  sh:group qudt:ApplicableUnitsGroup ;
.
qudt:QuantityKind-qudt_applicableUSCustomaryUnit
  sh:group qudt:ApplicableUnitsGroup ;
  sh:order "50"^^xsd:decimal ;
.
qudt:QuantityKind-qudt_applicableUnit
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "100"^^xsd:decimal ;
.
qudt:QuantityKind-qudt_baseCGSUnitDimensions
  sh:group qudt:QuantityDimensionsGroup ;
  sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
.
qudt:QuantityKind-qudt_baseISOUnitDimensions
  sh:group qudt:QuantityDimensionsGroup ;
  sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
.
qudt:QuantityKind-qudt_baseImperialUnitDimensions
  sh:group qudt:QuantityDimensionsGroup ;
  sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
.
qudt:QuantityKind-qudt_baseSIUnitDimensions
  sh:group qudt:QuantityDimensionsGroup ;
  sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
.
qudt:QuantityKind-qudt_baseUSCustomaryUnitDimensions
  sh:group qudt:QuantityDimensionsGroup ;
  sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
.
qudt:QuantityKind-qudt_belongsToSystemOfQuantities
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "90"^^xsd:decimal ;
.
qudt:QuantityKind-qudt_dimensionVectorForSI
  sh:group qudt:QuantityDimensionsGroup ;
  sh:order "100"^^xsd:decimal ;
.
qudt:QuantityKind-qudt_expression
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:name "symbol expression" ;
  sh:order "10"^^xsd:decimal ;
.
qudt:QuantityKind-qudt_hasDimensionVector
  sh:group qudt:QuantityDimensionsGroup ;
  sh:order "50"^^xsd:decimal ;
.
qudt:QuantityKind-qudt_latexDefinition
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "40"^^xsd:decimal ;
.
qudt:QuantityKind-qudt_latexSymbol
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "10"^^xsd:decimal ;
.
qudt:QuantityKind-qudt_mathMLdefinition
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "70"^^xsd:decimal ;
.
qudt:QuantityKind-qudt_qkdvDenominator
  sh:group qudt:QuantityDimensionsGroup ;
  sh:order "61"^^xsd:decimal ;
.
qudt:QuantityKind-qudt_qkdvNumerator
  sh:group qudt:QuantityDimensionsGroup ;
  sh:order "60"^^xsd:decimal ;
.
qudt:QuantityKind-qudt_symbol
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "10"^^xsd:decimal ;
.
qudt:QuantityKind-skos_broader
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "120"^^xsd:decimal ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForAmountOfSubstance
  sh:or qudt:NumericUnionList ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForLength
  sh:or qudt:NumericUnionList ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForLuminousIntensity
  sh:or qudt:NumericUnionList ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForMass
  sh:or qudt:NumericUnionList ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForThermodynamicTemperature
  sh:or qudt:NumericUnionList ;
.
qudt:QuantityKindDimensionVector-dimensionExponentForTime
  sh:or qudt:NumericUnionList ;
.
qudt:QuantityKindDimensionVector-dimensionlessExponent
  sh:or qudt:NumericUnionList ;
.
qudt:QuantityKindDimensionVector_dimensionExponentForElectricCurrent
  sh:or qudt:NumericUnionList ;
.
qudt:QuantityValue-value
  sh:or qudt:NumericUnionList ;
.
qudt:Rule-example
  sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
.
qudt:Rule-qudt_example
  sh:or qudt:HTMLOrStringOrLangStringOrLatexString ;
.
qudt:SymbolAndExpressionDisjointPropertiesConstraint
  a sh:NodeShape ;
  rdfs:label "Symbol and expression disjoint properties constraint" ;
  sh:sparql [
      rdfs:comment "Checks that a unit or quantitykind does not have both a symbol and an expression" ;
      sh:message "Resource '{$this}' of type '{?myType}' must not have both the symbol '{?symbol}' and the expression '{?expression}'." ;
      sh:prefixes <http://qudt.org/2.1/schema/shacl/overlay/qudt> ;
      sh:select """SELECT $this ?myType ?symbol ?expression
WHERE {
	$this qudt:symbol ?symbol .
	$this qudt:expression ?expression .
    $this a ?myType 
} """ ;
    ] ;
  sh:targetClass qudt:QuantityKind ;
  sh:targetClass qudt:Unit ;
.
qudt:UniqueSymbolTypeRestrictedPropertyConstraint
  a sh:NodeShape ;
  rdfs:label "Unique symbol type restricted property constraint" ;
  sh:severity sh:Info ;
  sh:sparql [
      rdfs:comment "Checks that a resource has a unique symbol within its type hierarchy below qudt:Concept" ;
      sh:message "Resource, '{$this}' of type '{?myType}', has non-unique symbol, '{?symbol}', that conflicts with '{?another}' of type '{?anotherType}'" ;
      sh:prefixes <http://qudt.org/2.1/schema/shacl/overlay/qudt> ;
      sh:select """SELECT DISTINCT $this ?symbol ?another ?myType ?anotherType
WHERE {{
	$this qudt:symbol ?symbol .
     ?another qudt:symbol ?symbol .
    FILTER (?another != $this)
   }
    $this a ?myType .
    ?myType <http://www.w3.org/2000/01/rdf-schema#subClassOf>+ qudt:Concept .
    ?another a ?anotherType .
    ?anotherType <http://www.w3.org/2000/01/rdf-schema#subClassOf>+ qudt:Concept .
   FILTER (?myType = ?anotherType)
}""" ;
    ] ;
  sh:targetClass qudt:Unit ;
.
qudt:Unit
  rdfs:subClassOf qudt:Narratable ;
.
qudt:Unit-qudt_abbreviation
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "10"^^xsd:decimal ;
.
qudt:Unit-qudt_conversionMultiplier
  sh:group qudt:UnitConversionGroup ;
  sh:order "10"^^xsd:decimal ;
.
qudt:Unit-qudt_conversionOffset
  sh:group qudt:UnitConversionGroup ;
  sh:order "20"^^xsd:decimal ;
.
qudt:Unit-qudt_expression
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "30"^^xsd:decimal ;
.
qudt:Unit-qudt_hasQuantityKind
  sh:group qudt:ConceptPropertyGroup ;
  sh:name "quantity kind" ;
  sh:order "40"^^xsd:decimal ;
.
qudt:Unit-qudt_iec61360Code
  rdfs:label "IEC-61369 code" ;
  sh:group qudt:UnitEquivalencePropertyGroup ;
  sh:order "40"^^xsd:decimal ;
.
qudt:Unit-qudt_isUnitOfSystem
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "50"^^xsd:decimal ;
.
qudt:Unit-qudt_latexDefinition
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "40"^^xsd:decimal ;
.
qudt:Unit-qudt_latexSymbol
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "60"^^xsd:decimal ;
.
qudt:Unit-qudt_mathMLdefinition
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "70"^^xsd:decimal ;
.
qudt:Unit-qudt_omUnit
  sh:group qudt:UnitEquivalencePropertyGroup ;
  sh:order "10"^^xsd:decimal ;
.
qudt:Unit-qudt_siUnitsExpression
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "35"^^xsd:decimal ;
.
qudt:Unit-qudt_symbol
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "10"^^xsd:decimal ;
.
qudt:Unit-qudt_ucumCaseInsensitiveCode
  sh:group qudt:UnitEquivalencePropertyGroup ;
  sh:order "70"^^xsd:decimal ;
.
qudt:Unit-qudt_ucumCaseSensitiveCode
  sh:group qudt:UnitEquivalencePropertyGroup ;
  sh:order "60"^^xsd:decimal ;
.
qudt:Unit-qudt_ucumCode
  sh:group qudt:UnitEquivalencePropertyGroup ;
  sh:order "50"^^xsd:decimal ;
.
qudt:Unit-qudt_uneceCommonCode
  sh:group qudt:UnitEquivalencePropertyGroup ;
  sh:order "40"^^xsd:decimal ;
.
qudt:UnitConversionGroup
  a sh:PropertyGroup ;
  rdfs:label "Conversion" ;
  sh:order "60"^^xsd:decimal ;
.
qudt:UnitEquivalencePropertyGroup
  a sh:PropertyGroup ;
  rdfs:label "Equivalent Units" ;
  sh:order "50"^^xsd:decimal ;
.
qudt:UnitReferencesPropertyGroup
  a sh:PropertyGroup ;
  rdfs:label "References" ;
  sh:order "20"^^xsd:decimal ;
.
qudt:UserQuantityKind-qudt_dataType
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "60"^^xsd:decimal ;
.
qudt:UserQuantityKind-qudt_hasQuantityKind
  sh:group qudt:ConceptPropertyGroup ;
  sh:name "quantity kind" ;
  sh:order "40"^^xsd:decimal ;
.
qudt:UserQuantityKind-qudt_unit
  sh:group qudt:ConceptPropertyGroup ;
  sh:order "50"^^xsd:decimal ;
.
qudt:Verifiable-qudt_dbpediaMatch
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "90"^^xsd:decimal ;
.
qudt:Verifiable-qudt_informativeReference
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "84"^^xsd:decimal ;
.
qudt:Verifiable-qudt_isoNormativeReference
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "82"^^xsd:decimal ;
.
qudt:Verifiable-qudt_normativeReference
  sh:group qudt:ConceptDescriptionPropertyGroup ;
  sh:order "80"^^xsd:decimal ;
.
